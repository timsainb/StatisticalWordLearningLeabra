// ta_Dump File v3.0 -- code v7.0.1.0 rev7740
LeabraProject .projects[0] { 
 Doc_Group @.docs = [0] {
 };

 Wizard_Group @.wizards = [1] {
  LeabraWizard @[0] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @[0] { };
    UserDataItem @[1] { };
   };
  };
 };

 ControlPanel_Group @.ctrl_panels = [2] {
  ControlPanel @[0] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @[0] { };
   };

   EditMbrItem_Group @.mbrs = [0] {
   };

   EditMthItem_Group @.mths = [0] {
   };
  };
  ClusterRun @[1] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @[0] { };
   };

   EditMbrItem_Group @.mbrs = [0] {
   };

   EditMthItem_Group @.mths = [0] {
   };

   DataTableCols @.jobs_running.data = [26] {
    String_Data @[0] { };
    String_Data @[1] { };
    String_Data @[2] { };
    String_Data @[3] { };
    String_Data @[4] { };
    String_Data @[5] { };
    String_Data @[6] { };
    String_Data @[7] { };
    String_Data @[8] { };
    String_Data @[9] { };
    String_Data @[10] { };
    String_Data @[11] { };
    String_Data @[12] { };
    int_Data @[13] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    String_Data @[14] { };
    String_Data @[15] { };
    String_Data @[16] { };
    String_Data @[17] { };
    String_Data @[18] { };
    int_Data @[19] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    int_Data @[20] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    int_Data @[21] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    int_Data @[22] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    int_Data @[23] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    String_Data @[24] { };
    String_Data @[25] { };
   };

   DataTableCols @.jobs_done.data = [26] {
    String_Data @[0] { };
    String_Data @[1] { };
    String_Data @[2] { };
    String_Data @[3] { };
    String_Data @[4] { };
    String_Data @[5] { };
    String_Data @[6] { };
    String_Data @[7] { };
    String_Data @[8] { };
    String_Data @[9] { };
    String_Data @[10] { };
    String_Data @[11] { };
    String_Data @[12] { };
    int_Data @[13] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    String_Data @[14] { };
    String_Data @[15] { };
    String_Data @[16] { };
    String_Data @[17] { };
    String_Data @[18] { };
    int_Data @[19] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    int_Data @[20] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    int_Data @[21] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    int_Data @[22] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    int_Data @[23] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    String_Data @[24] { };
    String_Data @[25] { };
   };

   DataTableCols @.jobs_archive.data = [26] {
    String_Data @[0] { };
    String_Data @[1] { };
    String_Data @[2] { };
    String_Data @[3] { };
    String_Data @[4] { };
    String_Data @[5] { };
    String_Data @[6] { };
    String_Data @[7] { };
    String_Data @[8] { };
    String_Data @[9] { };
    String_Data @[10] { };
    String_Data @[11] { };
    String_Data @[12] { };
    int_Data @[13] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    String_Data @[14] { };
    String_Data @[15] { };
    String_Data @[16] { };
    String_Data @[17] { };
    String_Data @[18] { };
    int_Data @[19] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    int_Data @[20] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    int_Data @[21] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    int_Data @[22] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    int_Data @[23] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
    String_Data @[24] { };
    String_Data @[25] { };
   };

   DataTableCols @.file_list.data = [9] {
    String_Data @[0] { };
    String_Data @[1] { };
    String_Data @[2] { };
    String_Data @[3] { };
    String_Data @[4] { };
    String_Data @[5] { };
    String_Data @[6] { };
    String_Data @[7] { };
    String_Data @[8] { };
   };

   DataTableCols @.cluster_info.data = [6] {
    String_Data @[0] { };
    String_Data @[1] { };
    String_Data @[2] { };
    String_Data @[3] { };
    String_Data @[4] { };
    String_Data @[5] { };
   };

   ParamSearchAlgo_List @.search_algos = [0] {
   };
  };
 };

 DataTable_Group @.data = [0] {
  DataTable_Group @.gp[0] = [2] { 
   DataTable @[0] { 
    UserDataItem_List @*(.user_data_) {
     UserDataItem @[0] { };
    };

    DataTableCols @.data = [4] {
     String_Data @[0] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
     String_Data @[1] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
     float_Data @[2] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
     float_Data @[3] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
    };
   };
   DataTable @[1] { 
    UserDataItem_List @*(.user_data_) {
     UserDataItem @[0] { };
     UserDataItem @[1] { };
     UserDataItem @[2] { };
    };

    DataTableCols @.data = [2] {
     String_Data @[0] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
     String_Data @[1] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
    };
   };
  };
  DataTable_Group @.gp[1] = [2] { 
   DataTable @[0] { 
    DataTableCols @.data = [14] {
     int_Data @[0] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
       UserDataItem @[1] { };
      };
     };
     int_Data @[1] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
       UserDataItem @[1] { };
      };
     };
     int_Data @[2] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
       UserDataItem @[1] { };
      };
     };
     String_Data @[3] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
     String_Data @[4] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
     int_Data @[5] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
       UserDataItem @[1] { };
      };
     };
     float_Data @[6] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
     float_Data @[7] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
     float_Data @[8] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
     float_Data @[9] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
     float_Data @[10] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
     float_Data @[11] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
     float_Data @[12] { };
     float_Data @[13] { };
    };
   };
   DataTable @[1] { 
    DataTableCols @.data = [8] {
     int_Data @[0] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
       UserDataItem @[1] { };
      };
     };
     int_Data @[1] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
       UserDataItem @[1] { };
      };
     };
     float_Data @[2] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
     float_Data @[3] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
     float_Data @[4] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
     float_Data @[5] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
     float_Data @[6] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
     float_Data @[7] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
    };
   };
  };
  DataTable_Group @.gp[2] = [1] { 
   DataTable @[0] { 
    DataTableCols @.data = [3] {
     float_Data @[0] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
       UserDataItem @[1] { };
      };
     };
     float_Data @[1] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
       UserDataItem @[1] { };
       UserDataItem @[2] { };
      };
     };
     String_Data @[2] { 
      UserDataItem_List @*(.user_data_) {
       UserDataItem @[0] { };
      };
     };
    };
   };
  };
 };

 Program_TopGroup @.programs = [3] {
  Program @[0] { 
   ProgObjList @.objs = [0] {
   };

   ProgType_List @.types = [0] {
   };

   ProgVar_List @.args = [0] {
   };

   ProgVar_List @.vars = [1] {
    ProgVar @[0] { };
   };

   Function_List @.functions = [0] {
   };

   ProgEl_List @.init_code = [1] {
    InitNamedUnits @[0] { };
   };

   ProgEl_List @.prog_code = [3] {
    LocalVars @[0] { 
     ProgVar_List @.local_vars = [0] {
     };
    };
    PrintExpr @[1] { };
    PrintExpr @[2] { };
   };
  };
  Program @[1] { 
   ProgObjList @.objs = [0] {
   };

   ProgType_List @.types = [2] {
    DynEnumType @[0] { 
     DynEnumItem_List @.enums = [13] {
      DynEnumItem @[0] { };
      DynEnumItem @[1] { };
      DynEnumItem @[2] { };
      DynEnumItem @[3] { };
      DynEnumItem @[4] { };
      DynEnumItem @[5] { };
      DynEnumItem @[6] { };
      DynEnumItem @[7] { };
      DynEnumItem @[8] { };
      DynEnumItem @[9] { };
      DynEnumItem @[10] { };
      DynEnumItem @[11] { };
      DynEnumItem @[12] { };
     };
    };
    DynEnumType @[1] { 
     DynEnumItem_List @.enums = [13] {
      DynEnumItem @[0] { };
      DynEnumItem @[1] { };
      DynEnumItem @[2] { };
      DynEnumItem @[3] { };
      DynEnumItem @[4] { };
      DynEnumItem @[5] { };
      DynEnumItem @[6] { };
      DynEnumItem @[7] { };
      DynEnumItem @[8] { };
      DynEnumItem @[9] { };
      DynEnumItem @[10] { };
      DynEnumItem @[11] { };
      DynEnumItem @[12] { };
     };
    };
   };

   ProgVar_List @.args = [1] {
    ProgVar @[0] { };
   };

   ProgVar_List @.vars = [1] {
    ProgVar @[0] { };
   };

   Function_List @.functions = [0] {
   };

   ProgEl_List @.init_code = [1] {
    InitNamedUnits @[0] { };
   };

   ProgEl_List @.prog_code = [4] {
    LocalVars @[0] { 
     ProgVar_List @.local_vars = [9] {
      ProgVar @[0] { };
      ProgVar @[1] { };
      ProgVar @[2] { };
      ProgVar @[3] { };
      ProgVar @[4] { };
      ProgVar @[5] { };
      ProgVar @[6] { };
      ProgVar @[7] { };
      ProgVar @[8] { };
     };
    };
    AssignExpr @[1] { };
    PrintExpr @[2] { };
    ForLoop @[3] { 
     ProgEl_List @.loop_code = [3] {
      RandomCall @[0] { 
       ProgArg_List @.meth_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
       };
      };
      ForLoop @[1] { 
       ProgEl_List @.loop_code = [7] {
	AssignExpr @[0] { };
	PrintVar @[1] { };
	If @[2] { 
	 ProgEl_List @.true_code = [1] {
	  AssignExpr @[0] { };
	 };
	};
	Else @[3] { 
	 ProgEl_List @.else_code = [1] {
	  AssignExpr @[0] { };
	 };
	};
	AddNewDataRow @[4] { };
	SetUnitsVar @[5] { };
	DoneWritingDataRow @[6] { };
       };
      };
      AssignExpr @[2] { };
     };
    };
   };
  };
  Program @[2] { 
   ProgObjList @.objs = [0] {
   };

   ProgType_List @.types = [2] {
    DynEnumType @[0] { 
     DynEnumItem_List @.enums = [13] {
      DynEnumItem @[0] { };
      DynEnumItem @[1] { };
      DynEnumItem @[2] { };
      DynEnumItem @[3] { };
      DynEnumItem @[4] { };
      DynEnumItem @[5] { };
      DynEnumItem @[6] { };
      DynEnumItem @[7] { };
      DynEnumItem @[8] { };
      DynEnumItem @[9] { };
      DynEnumItem @[10] { };
      DynEnumItem @[11] { };
      DynEnumItem @[12] { };
     };
    };
    DynEnumType @[1] { 
     DynEnumItem_List @.enums = [13] {
      DynEnumItem @[0] { };
      DynEnumItem @[1] { };
      DynEnumItem @[2] { };
      DynEnumItem @[3] { };
      DynEnumItem @[4] { };
      DynEnumItem @[5] { };
      DynEnumItem @[6] { };
      DynEnumItem @[7] { };
      DynEnumItem @[8] { };
      DynEnumItem @[9] { };
      DynEnumItem @[10] { };
      DynEnumItem @[11] { };
      DynEnumItem @[12] { };
     };
    };
   };

   ProgVar_List @.args = [1] {
    ProgVar @[0] { };
   };

   ProgVar_List @.vars = [1] {
    ProgVar @[0] { };
   };

   Function_List @.functions = [0] {
   };

   ProgEl_List @.init_code = [1] {
    InitNamedUnits @[0] { };
   };

   ProgEl_List @.prog_code = [4] {
    LocalVars @[0] { 
     ProgVar_List @.local_vars = [7] {
      ProgVar @[0] { };
      ProgVar @[1] { };
      ProgVar @[2] { };
      ProgVar @[3] { };
      ProgVar @[4] { };
      ProgVar @[5] { };
      ProgVar @[6] { };
     };
    };
    ResetDataRows @[1] { };
    RandomCall @[2] { 
     ProgArg_List @.meth_args = [2] {
      ProgArg @[0] { };
      ProgArg @[1] { };
     };
    };
    ForLoop @[3] { 
     ProgEl_List @.loop_code = [3] {
      RandomCall @[0] { 
       ProgArg_List @.meth_args = [2] {
	ProgArg @[0] { };
	ProgArg @[1] { };
       };
      };
      ForLoop @[1] { 
       ProgEl_List @.loop_code = [6] {
	AssignExpr @[0] { };
	If @[1] { 
	 ProgEl_List @.true_code = [1] {
	  AssignExpr @[0] { };
	 };
	};
	Else @[2] { 
	 ProgEl_List @.else_code = [1] {
	  AssignExpr @[0] { };
	 };
	};
	AddNewDataRow @[3] { };
	SetUnitsVar @[4] { };
	DoneWritingDataRow @[5] { };
       };
      };
      AssignExpr @[2] { };
     };
    };
   };
  };
  Program_Group @.gp[0] = [10] { 
   Program @[0] { 
    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    ProgVar_List @.vars = [3] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [1] {
     NetCounterInit @[0] { };
    };

    ProgEl_List @.prog_code = [3] {
     If @[0] { 
      ProgEl_List @.true_code = [1] {
       NetCounterInit @[0] { };
      };
     };
     Else @[1] { 
      ProgEl_List @.else_code = [1] {
       MemberAssign @[0] { };
      };
     };
     WhileLoop @[2] { 
      ProgEl_List @.loop_code = [2] {
       ProgramCall @[0] { 
	ProgArg_List @.prog_args = [3] {
	 ProgArg @[0] { };
	 ProgArg @[1] { };
	 ProgArg @[2] { };
	};
       };
       NetCounterIncr @[1] { };
      };
     };
    };
   };
   Program @[1] { 
    ProgObjList @.objs = [2] {
     RndSeed_List @[0] { 
      taList @.seeds = [25] {
       RndSeed @[0] { };
       RndSeed @[1] { };
       RndSeed @[2] { };
       RndSeed @[3] { };
       RndSeed @[4] { };
       RndSeed @[5] { };
       RndSeed @[6] { };
       RndSeed @[7] { };
       RndSeed @[8] { };
       RndSeed @[9] { };
       RndSeed @[10] { };
       RndSeed @[11] { };
       RndSeed @[12] { };
       RndSeed @[13] { };
       RndSeed @[14] { };
       RndSeed @[15] { };
       RndSeed @[16] { };
       RndSeed @[17] { };
       RndSeed @[18] { };
       RndSeed @[19] { };
       RndSeed @[20] { };
       RndSeed @[21] { };
       RndSeed @[22] { };
       RndSeed @[23] { };
       RndSeed @[24] { };
      };
     };
     RndSeed @[1] { };
    };

    ProgType_List @.types = [1] {
     DynEnumType @[0] { 
      DynEnumItem_List @.enums = [3] {
       DynEnumItem @[0] { };
       DynEnumItem @[1] { };
       DynEnumItem @[2] { };
      };
     };
    };

    ProgVar_List @.args = [3] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
    };

    ProgVar_List @.vars = [12] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
     ProgVar @[3] { };
     ProgVar @[4] { };
     ProgVar @[5] { };
     ProgVar @[6] { };
     ProgVar @[7] { };
     ProgVar @[8] { };
     ProgVar @[9] { };
     ProgVar @[10] { };
     ProgVar @[11] { };
    };

    Function_List @.functions = [1] {
     Function @[0] { 
      ProgVar_List @.args = [0] {
      };

      ProgEl_List @.fun_code = [2] {
       LocalVars @[0] { 
	ProgVar_List @.local_vars = [0] {
	};
       };
       Switch @[1] { 
	ProgEl_List @.cases = [3] {
	 CaseBlock @[0] { 
	  ProgEl_List @.prog_code = [1] {
	   MethodCall @[0] { 
	    ProgArg_List @.meth_args = [0] {
	    };
	   };
	  };
	 };
	 CaseBlock @[1] { 
	  ProgEl_List @.prog_code = [1] {
	   MethodCall @[0] { 
	    ProgArg_List @.meth_args = [0] {
	    };
	   };
	  };
	 };
	 CaseBlock @[2] { 
	  ProgEl_List @.prog_code = [1] {
	   MethodCall @[0] { 
	    ProgArg_List @.meth_args = [1] {
	     ProgArg @[0] { };
	    };
	   };
	  };
	 };
	};
       };
      };
     };
    };

    ProgEl_List @.init_code = [7] {
     AssignExpr @[0] { };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     AssignExpr @[2] { };
     AssignExpr @[3] { };
     FunctionCall @[4] { 
      ProgArg_List @.fun_args = [0] {
      };
     };
     WtInitPrompt @[5] { 
      ProgEl_List @.yes_code = [3] {
       MethodCall @[0] { 
	ProgArg_List @.meth_args = [0] {
	};
       };
       MethodCall @[1] { 
	ProgArg_List @.meth_args = [0] {
	};
       };
       PrintExpr @[2] { };
      };
     };
     AssignExpr @[6] { };
    };

    ProgEl_List @.prog_code = [10] {
     AssignExpr @[0] { };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     AssignExpr @[2] { };
     MemberAssign @[3] { };
     FunctionCall @[4] { 
      ProgArg_List @.fun_args = [0] {
      };
     };
     If @[5] { 
      ProgEl_List @.true_code = [2] {
       MethodCall @[0] { 
	ProgArg_List @.meth_args = [0] {
	};
       };
       PrintExpr @[1] { };
      };
     };
     AssignExpr @[6] { };
     WhileLoop @[7] { 
      ProgEl_List @.loop_code = [5] {
       ProgramCall @[0] { 
	ProgArg_List @.prog_args = [2] {
	 ProgArg @[0] { };
	 ProgArg @[1] { };
	};
       };
       NetCounterIncr @[1] { };
       If @[2] { 
	ProgEl_List @.true_code = [2] {
	 VarIncr @[0] { };
	 IfBreak @[1] { };
	};
       };
       Else @[3] { 
	ProgEl_List @.else_code = [1] {
	 AssignExpr @[0] { };
	};
       };
       If @[4] { 
	ProgEl_List @.true_code = [1] {
	 If @[0] { 
	  ProgEl_List @.true_code = [1] {
	   ProgramCall @[0] { 
	    ProgArg_List @.prog_args = [1] {
	     ProgArg @[0] { };
	    };
	   };
	  };
	 };
	};
       };
      };
     };
     If @[8] { 
      ProgEl_List @.true_code = [1] {
       ProgramCall @[0] { 
	ProgArg_List @.prog_args = [1] {
	 ProgArg @[0] { };
	};
       };
      };
     };
     MethodCall @[9] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
    };
   };
   Program @[2] { 
    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    ProgVar_List @.vars = [9] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
     ProgVar @[3] { };
     ProgVar @[4] { };
     ProgVar @[5] { };
     ProgVar @[6] { };
     ProgVar @[7] { };
     ProgVar @[8] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [2] {
     NetCounterInit @[0] { };
     AssignExpr @[1] { };
    };

    ProgEl_List @.prog_code = [12] {
     NetCounterInit @[0] { };
     AssignExpr @[1] { };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     ProgramCall @[3] { 
      ProgArg_List @.prog_args = [1] {
       ProgArg @[0] { };
      };
     };
     MethodCall @[4] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     NetDataLoop @[5] { 
      ProgEl_List @.loop_code = [2] {
       ProgramCall @[0] { 
	ProgArg_List @.prog_args = [2] {
	 ProgArg @[0] { };
	 ProgArg @[1] { };
	};
       };
       If @[1] { 
	ProgEl_List @.true_code = [1] {
	 StopStepPoint @[0] { };
	};
       };
      };
     };
     If @[6] { 
      ProgEl_List @.true_code = [1] {
       MethodCall @[0] { 
	ProgArg_List @.meth_args = [0] {
	};
       };
      };
     };
     If @[7] { 
      ProgEl_List @.true_code = [1] {
       MethodCall @[0] { 
	ProgArg_List @.meth_args = [0] {
	};
       };
      };
     };
     MethodCall @[8] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     If @[9] { 
      ProgEl_List @.true_code = [2] {
       MethodCall @[0] { 
	ProgArg_List @.meth_args = [0] {
	};
       };
       If @[1] { 
	ProgEl_List @.true_code = [2] {
	 MethodCall @[0] { 
	  ProgArg_List @.meth_args = [0] {
	  };
	 };
	 MethodCall @[1] { 
	  ProgArg_List @.meth_args = [0] {
	  };
	 };
	};
       };
      };
     };
     MethodCall @[10] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     ProgramCall @[11] { 
      ProgArg_List @.prog_args = [1] {
       ProgArg @[0] { };
      };
     };
    };
   };
   Program @[3] { 
    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    ProgVar_List @.vars = [4] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
     ProgVar @[3] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [1] {
     NetCounterInit @[0] { };
    };

    ProgEl_List @.prog_code = [8] {
     NetCounterInit @[0] { };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     WhileLoop @[2] { 
      ProgEl_List @.loop_code = [3] {
       ProgramCall @[0] { 
	ProgArg_List @.prog_args = [2] {
	 ProgArg @[0] { };
	 ProgArg @[1] { };
	};
       };
       NetCounterIncr @[1] { };
       MethodCall @[2] { 
	ProgArg_List @.meth_args = [0] {
	};
       };
      };
     };
     MethodCall @[3] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     If @[4] { 
      ProgEl_List @.true_code = [1] {
       MethodCall @[0] { 
	ProgArg_List @.meth_args = [0] {
	};
       };
      };
     };
     If @[5] { 
      ProgEl_List @.true_code = [1] {
       MethodCall @[0] { 
	ProgArg_List @.meth_args = [0] {
	};
       };
      };
     };
     ProgramCall @[6] { 
      ProgArg_List @.prog_args = [1] {
       ProgArg @[0] { };
      };
     };
     NetUpdateView @[7] { };
    };
   };
   Program @[4] { 
    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    ProgVar_List @.vars = [3] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [1] {
     NetCounterInit @[0] { };
    };

    ProgEl_List @.prog_code = [11] {
     NetCounterInit @[0] { };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     ProgramCall @[2] { 
      ProgArg_List @.prog_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MethodCall @[3] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     If @[4] { 
      ProgEl_List @.true_code = [1] {
       AssignExpr @[0] { };
      };
     };
     Else @[5] { 
      ProgEl_List @.else_code = [1] {
       AssignExpr @[0] { };
      };
     };
     WhileLoop @[6] { 
      ProgEl_List @.loop_code = [4] {
       ProgramCall @[0] { 
	ProgArg_List @.prog_args = [1] {
	 ProgArg @[0] { };
	};
       };
       NetCounterIncr @[1] { };
       IfContinue @[2] { };
       IfBreak @[3] { };
      };
     };
     MethodCall @[7] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[8] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     If @[9] { 
      ProgEl_List @.true_code = [1] {
       MethodCall @[0] { 
	ProgArg_List @.meth_args = [0] {
	};
       };
      };
     };
     NetUpdateView @[10] { };
    };
   };
   Program @[5] { 
    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [1] {
     ProgVar @[0] { };
    };

    ProgVar_List @.vars = [1] {
     ProgVar @[0] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [2] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     NetUpdateView @[1] { };
    };
   };
   Program @[6] { 
    ProgObjList @.objs = [1] {
     LayerWriter @[0] { 
      LayerDataEl_List @.layer_data = [4] {
       LayerWriterEl @[0] { };
       LayerWriterEl @[1] { };
       LayerWriterEl @[2] { };
       LayerWriterEl @[3] { };
      };
     };
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    ProgVar_List @.vars = [1] {
     ProgVar @[0] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [3] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
    };

    ProgEl_List @.prog_code = [2] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
    };
   };
   Program @[7] { 
    ProgObjList @.objs = [1] {
     NetMonitor @[0] { 
      NetMonItem_List @.items = [10] {
       NetMonItem @[0] { };
       NetMonItem @[1] { };
       NetMonItem @[2] { };
       NetMonItem @[3] { };
       NetMonItem @[4] { };
       NetMonItem @[5] { };
       NetMonItem @[6] { };
       NetMonItem @[7] { };
       NetMonItem @[8] { };
       NetMonItem @[9] { };
      };
     };
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [1] {
     ProgVar @[0] { };
    };

    ProgVar_List @.vars = [2] {
     ProgVar @[0] { };
     ProgVar @[1] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [3] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
    };

    ProgEl_List @.prog_code = [4] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[3] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
    };
   };
   Program @[8] { 
    ProgObjList @.objs = [1] {
     NetMonitor @[0] { 
      NetMonItem_List @.items = [8] {
       NetMonItem @[0] { };
       NetMonItem @[1] { };
       NetMonItem @[2] { };
       NetMonItem @[3] { };
       NetMonItem @[4] { };
       NetMonItem @[5] { };
       NetMonItem @[6] { };
       NetMonItem @[7] { };
      };
     };
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [1] {
     ProgVar @[0] { };
    };

    ProgVar_List @.vars = [3] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [4] {
     AssignExpr @[0] { };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MethodCall @[2] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
     MethodCall @[3] { 
      ProgArg_List @.meth_args = [1] {
       ProgArg @[0] { };
      };
     };
    };

    ProgEl_List @.prog_code = [7] {
     MethodCall @[0] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     MethodCall @[1] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     AssignExpr @[2] { };
     MethodCall @[3] { 
      ProgArg_List @.meth_args = [4] {
       ProgArg @[0] { };
       ProgArg @[1] { };
       ProgArg @[2] { };
       ProgArg @[3] { };
      };
     };
     MethodCall @[4] { 
      ProgArg_List @.meth_args = [4] {
       ProgArg @[0] { };
       ProgArg @[1] { };
       ProgArg @[2] { };
       ProgArg @[3] { };
      };
     };
     MethodCall @[5] { 
      ProgArg_List @.meth_args = [0] {
      };
     };
     Comment @[6] { };
    };
   };
   Program @[9] { 
    ProgObjList @.objs = [0] {
    };

    ProgType_List @.types = [0] {
    };

    ProgVar_List @.args = [1] {
     ProgVar @[0] { };
    };

    ProgVar_List @.vars = [6] {
     ProgVar @[0] { };
     ProgVar @[1] { };
     ProgVar @[2] { };
     ProgVar @[3] { };
     ProgVar @[4] { };
     ProgVar @[5] { };
    };

    Function_List @.functions = [0] {
    };

    ProgEl_List @.init_code = [0] {
    };

    ProgEl_List @.prog_code = [6] {
     IfReturn @[0] { };
     MiscCall @[1] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     MiscCall @[2] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
     AssignExpr @[3] { };
     MethodCall @[4] { 
      ProgArg_List @.meth_args = [4] {
       ProgArg @[0] { };
       ProgArg @[1] { };
       ProgArg @[2] { };
       ProgArg @[3] { };
      };
     };
     MethodCall @[5] { 
      ProgArg_List @.meth_args = [2] {
       ProgArg @[0] { };
       ProgArg @[1] { };
      };
     };
    };
   };
  };
 };

 taViewer_List @.viewers = [1] {
  MainWindowViewer @[0] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @[0] { };
    UserDataItem @[1] { };
    UserDataItem @[2] { };
    UserDataItem @[3] { };
    UserDataItem @[4] { };
    UserDataItem @[5] { };
   };

   ToolBar_List @.toolbars = [1] {
    ToolBar @[0] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
   };

   FrameViewer_List @.frames = [3] {
    BrowseViewerTaBase @[0] { };
    PanelViewer @[1] { };
    T3PanelViewer @[2] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };

     T3Panel_List @.panels = [4] {
      T3Panel @[0] { 
       T3DataView_List @.root_view.children = [2] {
	NetView @[0] { 
	 T3Annotation_List @.annotations = [0] {
	 };

	 T3DataView_List @.annote_children = [0] {
	 };

	 ScaleRange_List @.scale_ranges = [14] {
	  ScaleRange @[0] { };
	  ScaleRange @[1] { };
	  ScaleRange @[2] { };
	  ScaleRange @[3] { };
	  ScaleRange @[4] { };
	  ScaleRange @[5] { };
	  ScaleRange @[6] { };
	  ScaleRange @[7] { };
	  ScaleRange @[8] { };
	  ScaleRange @[9] { };
	  ScaleRange @[10] { };
	  ScaleRange @[11] { };
	  ScaleRange @[12] { };
	  ScaleRange @[13] { };
	 };
	};
	GraphTableView @[1] { 
	 T3DataView_List @.children = [14] {
	  GraphColView @[0] { };
	  GraphColView @[1] { };
	  GraphColView @[2] { };
	  GraphColView @[3] { };
	  GraphColView @[4] { };
	  GraphColView @[5] { };
	  GraphColView @[6] { };
	  GraphColView @[7] { };
	  GraphColView @[8] { };
	  GraphColView @[9] { };
	  GraphColView @[10] { };
	  GraphColView @[11] { };
	  GraphColView @[12] { };
	  GraphColView @[13] { };
	 };

	 T3Annotation_List @.annotations = [0] {
	 };

	 T3DataView_List @.annote_children = [0] {
	 };

	 GraphPlotView_List @.plots = [16] {
	  GraphPlotView @[0] { };
	  GraphPlotView @[1] { };
	  GraphPlotView @[2] { };
	  GraphPlotView @[3] { };
	  GraphPlotView @[4] { };
	  GraphPlotView @[5] { };
	  GraphPlotView @[6] { };
	  GraphPlotView @[7] { };
	  GraphPlotView @[8] { };
	  GraphPlotView @[9] { };
	  GraphPlotView @[10] { };
	  GraphPlotView @[11] { };
	  GraphPlotView @[12] { };
	  GraphPlotView @[13] { };
	  GraphPlotView @[14] { };
	  GraphPlotView @[15] { };
	 };

	 GraphPlotView_List @.errbars = [16] {
	  GraphPlotView @[0] { };
	  GraphPlotView @[1] { };
	  GraphPlotView @[2] { };
	  GraphPlotView @[3] { };
	  GraphPlotView @[4] { };
	  GraphPlotView @[5] { };
	  GraphPlotView @[6] { };
	  GraphPlotView @[7] { };
	  GraphPlotView @[8] { };
	  GraphPlotView @[9] { };
	  GraphPlotView @[10] { };
	  GraphPlotView @[11] { };
	  GraphPlotView @[12] { };
	  GraphPlotView @[13] { };
	  GraphPlotView @[14] { };
	  GraphPlotView @[15] { };
	 };
	};
       };

       T3SavedView_List @.saved_views = [10] {
	T3SavedView @[0] { };
	T3SavedView @[1] { };
	T3SavedView @[2] { };
	T3SavedView @[3] { };
	T3SavedView @[4] { };
	T3SavedView @[5] { };
	T3SavedView @[6] { };
	T3SavedView @[7] { };
	T3SavedView @[8] { };
	T3SavedView @[9] { };
       };
      };
      T3Panel @[1] { 
       T3DataView_List @.root_view.children = [2] {
	GridTableView @[0] { 
	 T3DataView_List @.children = [4] {
	  GridColView @[0] { };
	  GridColView @[1] { };
	  GridColView @[2] { };
	  GridColView @[3] { };
	 };

	 T3Annotation_List @.annotations = [0] {
	 };

	 T3DataView_List @.annote_children = [0] {
	 };
	};
	GridTableView @[1] { 
	 T3DataView_List @.children = [2] {
	  GridColView @[0] { };
	  GridColView @[1] { };
	 };

	 T3Annotation_List @.annotations = [0] {
	 };

	 T3DataView_List @.annote_children = [0] {
	 };
	};
       };

       T3SavedView_List @.saved_views = [10] {
	T3SavedView @[0] { };
	T3SavedView @[1] { };
	T3SavedView @[2] { };
	T3SavedView @[3] { };
	T3SavedView @[4] { };
	T3SavedView @[5] { };
	T3SavedView @[6] { };
	T3SavedView @[7] { };
	T3SavedView @[8] { };
	T3SavedView @[9] { };
       };
      };
      T3Panel @[2] { 
       T3DataView_List @.root_view.children = [1] {
	GraphTableView @[0] { 
	 T3DataView_List @.children = [8] {
	  GraphColView @[0] { };
	  GraphColView @[1] { };
	  GraphColView @[2] { };
	  GraphColView @[3] { };
	  GraphColView @[4] { };
	  GraphColView @[5] { };
	  GraphColView @[6] { };
	  GraphColView @[7] { };
	 };

	 T3Annotation_List @.annotations = [0] {
	 };

	 T3DataView_List @.annote_children = [0] {
	 };

	 GraphPlotView_List @.plots = [16] {
	  GraphPlotView @[0] { };
	  GraphPlotView @[1] { };
	  GraphPlotView @[2] { };
	  GraphPlotView @[3] { };
	  GraphPlotView @[4] { };
	  GraphPlotView @[5] { };
	  GraphPlotView @[6] { };
	  GraphPlotView @[7] { };
	  GraphPlotView @[8] { };
	  GraphPlotView @[9] { };
	  GraphPlotView @[10] { };
	  GraphPlotView @[11] { };
	  GraphPlotView @[12] { };
	  GraphPlotView @[13] { };
	  GraphPlotView @[14] { };
	  GraphPlotView @[15] { };
	 };

	 GraphPlotView_List @.errbars = [16] {
	  GraphPlotView @[0] { };
	  GraphPlotView @[1] { };
	  GraphPlotView @[2] { };
	  GraphPlotView @[3] { };
	  GraphPlotView @[4] { };
	  GraphPlotView @[5] { };
	  GraphPlotView @[6] { };
	  GraphPlotView @[7] { };
	  GraphPlotView @[8] { };
	  GraphPlotView @[9] { };
	  GraphPlotView @[10] { };
	  GraphPlotView @[11] { };
	  GraphPlotView @[12] { };
	  GraphPlotView @[13] { };
	  GraphPlotView @[14] { };
	  GraphPlotView @[15] { };
	 };
	};
       };

       T3SavedView_List @.saved_views = [10] {
	T3SavedView @[0] { };
	T3SavedView @[1] { };
	T3SavedView @[2] { };
	T3SavedView @[3] { };
	T3SavedView @[4] { };
	T3SavedView @[5] { };
	T3SavedView @[6] { };
	T3SavedView @[7] { };
	T3SavedView @[8] { };
	T3SavedView @[9] { };
       };
      };
      T3Panel @[3] { 
       T3DataView_List @.root_view.children = [1] {
	GraphTableView @[0] { 
	 T3DataView_List @.children = [14] {
	  GraphColView @[0] { };
	  GraphColView @[1] { };
	  GraphColView @[2] { };
	  GraphColView @[3] { };
	  GraphColView @[4] { };
	  GraphColView @[5] { };
	  GraphColView @[6] { };
	  GraphColView @[7] { };
	  GraphColView @[8] { };
	  GraphColView @[9] { };
	  GraphColView @[10] { };
	  GraphColView @[11] { };
	  GraphColView @[12] { };
	  GraphColView @[13] { };
	 };

	 T3Annotation_List @.annotations = [0] {
	 };

	 T3DataView_List @.annote_children = [0] {
	 };

	 GraphPlotView_List @.plots = [16] {
	  GraphPlotView @[0] { };
	  GraphPlotView @[1] { };
	  GraphPlotView @[2] { };
	  GraphPlotView @[3] { };
	  GraphPlotView @[4] { };
	  GraphPlotView @[5] { };
	  GraphPlotView @[6] { };
	  GraphPlotView @[7] { };
	  GraphPlotView @[8] { };
	  GraphPlotView @[9] { };
	  GraphPlotView @[10] { };
	  GraphPlotView @[11] { };
	  GraphPlotView @[12] { };
	  GraphPlotView @[13] { };
	  GraphPlotView @[14] { };
	  GraphPlotView @[15] { };
	 };

	 GraphPlotView_List @.errbars = [16] {
	  GraphPlotView @[0] { };
	  GraphPlotView @[1] { };
	  GraphPlotView @[2] { };
	  GraphPlotView @[3] { };
	  GraphPlotView @[4] { };
	  GraphPlotView @[5] { };
	  GraphPlotView @[6] { };
	  GraphPlotView @[7] { };
	  GraphPlotView @[8] { };
	  GraphPlotView @[9] { };
	  GraphPlotView @[10] { };
	  GraphPlotView @[11] { };
	  GraphPlotView @[12] { };
	  GraphPlotView @[13] { };
	  GraphPlotView @[14] { };
	  GraphPlotView @[15] { };
	 };
	};
       };

       T3SavedView_List @.saved_views = [10] {
	T3SavedView @[0] { };
	T3SavedView @[1] { };
	T3SavedView @[2] { };
	T3SavedView @[3] { };
	T3SavedView @[4] { };
	T3SavedView @[5] { };
	T3SavedView @[6] { };
	T3SavedView @[7] { };
	T3SavedView @[8] { };
	T3SavedView @[9] { };
       };
      };
     };
    };
   };

   DockViewer_List @.docks = [1] {
    ToolBoxDockViewer @[0] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
      UserDataItem @[1] { };
      UserDataItem @[2] { };
      UserDataItem @[3] { };
      UserDataItem @[4] { };
      UserDataItem @[5] { };
     };
    };
   };
  };
 };

 Network_Group @.networks = [1] {
  LeabraNetwork @[0] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @[0] { };
    UserDataItem @[1] { };
    UserDataItem @[2] { };
    UserDataItem @[3] { };
    UserDataItem @[4] { };
    UserDataItem @[5] { };
    UserDataItem @[6] { };
    UserDataItem @[7] { };
    UserDataItem @[8] { };
    UserDataItem @[9] { };
    UserDataItem @[10] { };
    UserDataItem @[11] { };
    UserDataItem @[12] { };
    UserDataItem @[13] { };
    UserDataItem @[14] { };
    UserDataItem @[15] { };
    UserDataItem @[16] { };
    UserDataItem @[17] { };
    UserDataItem @[18] { };
    UserDataItem @[19] { };
    UserDataItem @[20] { };
    UserDataItem @[21] { };
    UserDataItem @[22] { };
   };

   BaseSpec_Group @.specs = [5] {
    LeabraLayerSpec @[0] { 
     BaseSpec_Group @.children = [1] {
      LeabraLayerSpec @[0] { 
       BaseSpec_Group @.children = [0] {
       };
      };
     };
    };
    LeabraUnitSpec @[1] { 
     BaseSpec_Group @.children = [0] {
     };

     Schedule @.noise_sched = [0] {
     };
    };
    FullPrjnSpec @[2] { 
     BaseSpec_Group @.children = [0] {
     };
    };
    LeabraConSpec @[3] { 
     BaseSpec_Group @.children = [2] {
      LeabraBiasSpec @[0] { 
       BaseSpec_Group @.children = [0] {
       };

       Schedule @.lrate_sched = [0] {
       };
      };
      LeabraConSpec @[1] { 
       BaseSpec_Group @.children = [0] {
       };

       Schedule @.lrate_sched = [0] {
       };
      };
     };

     Schedule @.lrate_sched = [0] {
     };
    };
    LeabraExtOnlyUnitSpec @[4] { 
     BaseSpec_Group @.children = [0] {
     };

     Schedule @.noise_sched = [0] {
     };
    };
   };

   Layer_Group @.layers = [5] {
    LeabraLayer @[0] { 
     Projection_Group @.projections = [0] {
     };

     Unit_Group @.units = [12] {
     };
    };
    LeabraLayer @[1] { 
     Projection_Group @.projections = [2] {
      LeabraPrjn @[0] { };
      LeabraPrjn @[1] { };
     };

     Unit_Group @.units = [16] {
     };
    };
    LeabraLayer @[2] { 
     Projection_Group @.projections = [1] {
      LeabraPrjn @[0] { };
     };

     Unit_Group @.units = [12] {
     };
    };
    LeabraLayer @[3] { 
     Projection_Group @.projections = [1] {
      LeabraPrjn @[0] { };
     };

     Unit_Group @.units = [1] {
     };
    };
    LeabraLayer @[4] { 
     Projection_Group @.projections = [1] {
      LeabraPrjn @[0] { };
     };

     Unit_Group @.units = [12] {
     };
    };
   };

   Weights_List @.weights = [0] {
   };
  };
 };
};
LeabraProject .projects[0] {
 name="StatLearn_3_with_end_decision";
 desc=;
 tags=;
 version {
  major=0;
  minor=0;
  step=0;
 };
 license {
  owner="Regents of the University of Colorado";
  license=NO_LIC;
  org="CCNLab at the University of Colorado Boulder";
  year="2011";
  custom=;
 };
 wiki_url {
  sync=0;
  wiki=;
  url=;
 };
 docs {
  name="docs";
  el_typ=taDoc;
  el_def=0;
 };
 wizards {
  name="wizards";
  el_typ=LeabraWizard;
  el_def=0;
  LeabraWizard @[0] {
   UserDataItem_List @*(.user_data_) {
    name="UserDataItem_List_6";
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @[0] {
     name="NO_CLIP";
     value 1 0=1;
     val_type_fixed=0;
    };
    UserDataItem @[1] {
     name="user_pinned";
     value 1 0=1;
     val_type_fixed=0;
    };
   };
   name="LeabraWizard_0";
  };
 };
 ctrl_panels {
  name="ctrl_panels";
  el_typ=ControlPanel;
  el_def=0;
  ControlPanel @[0] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @[0] {
     name="user_pinned";
     value 1 0=1;
     val_type_fixed=0;
    };
   };
   name="ControlPanel";
   running_updt=0;
   desc=;
   mbrs {
    name="mbrs";
    el_typ=EditMbrItem;
    el_def=0;
   };
   mths {
    name="mths";
    el_typ=EditMthItem;
    el_def=0;
    group_type=GT_BUTTONS;
   };
  };
  ClusterRun @[1] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @[0] {
     name="user_pinned";
     value 1 0=1;
     val_type_fixed=0;
    };
   };
   name="ClusterRun";
   running_updt=0;
   desc=;
   mbrs {
    name="mbrs";
    el_typ=EditMbrItem;
    el_def=0;
   };
   mths {
    name="mths";
    el_typ=EditMthItem;
    el_def=0;
    group_type=GT_BUTTONS;
   };
   jobs_running {
    name="jobs_running";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @[0] {
      name="tag";
      desc="unique tag id for this job -- all files etc are named according to this tag";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[1] {
      name="notes";
      desc="notes for the job -- describe any specific information about the model configuration etc -- can use this for searching and sorting results";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[2] {
      name="params";
      desc="emergent parameters based on currently selected items in the ClusterRun";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[3] {
      name="status";
      desc="status of job: REQUESTED, CANCELLED, SUBMITTED, QUEUED, RUNNING, DONE, KILLED";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[4] {
      name="status_info";
      desc="more detailed information about status";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[5] {
      name="submit_time";
      desc="when was the job submitted (tracks time from emergent client submission)";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[6] {
      name="start_time";
      desc="when did the job actually start running";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[7] {
      name="end_time";
      desc="when did the job finish running";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[8] {
      name="job_no";
      desc="job number on cluster -- assigned once the job is submitted to the cluster";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[9] {
      name="job_out";
      desc="job output information -- contains (top of) the job standard output and standard error output as the job is running (truncated to top 2048 characters if longer than that) -- full information available in job_out_file";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[10] {
      name="job_out_file";
      desc="job output file -- file name containing full job output information -- file name should be tag.out";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[11] {
      name="dat_files";
      desc="list of data table output (results) files generated by model (space separated) -- these files have the tag in their name, and end in .dat";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[12] {
      name="other_files";
      desc="list of other output (results) files generated by model (space separated) -- these files have the tag in their name but do not end in .dat";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @[13] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="command_id";
      desc="id for this command, assigned by the search algorithm in an algorithm-specific manner (optional)";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[14] {
      name="command";
      desc="emergent command line, up to point of parameters";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[15] {
      name="repo_url";
      desc="name of repository to run job on";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[16] {
      name="cluster";
      desc="name of cluster to run job on";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[17] {
      name="queue";
      desc="if specified, indicate a particular queue on the computing resource";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[18] {
      name="run_time";
      desc="how long will the jobs take to run -- syntax is number followed by unit indicator -- m=minutes, h=hours, d=days -- e.g., 30m, 12h, or 2d -- typically the job will be killed if it exceeds this amount of time, so be sure to not underestimate";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @[19] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="ram_gb";
      desc="how many gigabytes of ram is required?  0 means do not specify this parameter for the job submission -- for large memory jobs, it can be important to specify this to ensure proper allocation of resources";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @[20] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="n_threads";
      desc="number of parallel threads to use for running";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @[21] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="mpi_nodes";
      desc="number of nodes to use for mpi run -- 0 or -1 means not to use mpi";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @[22] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="pb_batches";
      desc="if > 0, use parallel batch mode with this number of batches";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @[23] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="pb_nodes";
      desc="if doing parallel batch mode, and cluster has by_node policy, then this is the number of nodes to allocate to the overall job";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[24] {
      name="submit_svn";
      desc="svn revision for the original job submission";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[25] {
      name="submit_job";
      desc="index of job number within a given submission -- equal to the row number of the original set of jobs submitted in submit_svn jobs";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
    };
    data_flags=AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [0]     };
   };
   jobs_done {
    name="jobs_done";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @[0] {
      name="tag";
      desc="unique tag id for this job -- all files etc are named according to this tag";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[1] {
      name="notes";
      desc="notes for the job -- describe any specific information about the model configuration etc -- can use this for searching and sorting results";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[2] {
      name="params";
      desc="emergent parameters based on currently selected items in the ClusterRun";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[3] {
      name="status";
      desc="status of job: REQUESTED, CANCELLED, SUBMITTED, QUEUED, RUNNING, DONE, KILLED";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[4] {
      name="status_info";
      desc="more detailed information about status";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[5] {
      name="submit_time";
      desc="when was the job submitted (tracks time from emergent client submission)";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[6] {
      name="start_time";
      desc="when did the job actually start running";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[7] {
      name="end_time";
      desc="when did the job finish running";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[8] {
      name="job_no";
      desc="job number on cluster -- assigned once the job is submitted to the cluster";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[9] {
      name="job_out";
      desc="job output information -- contains (top of) the job standard output and standard error output as the job is running (truncated to top 2048 characters if longer than that) -- full information available in job_out_file";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[10] {
      name="job_out_file";
      desc="job output file -- file name containing full job output information -- file name should be tag.out";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[11] {
      name="dat_files";
      desc="list of data table output (results) files generated by model (space separated) -- these files have the tag in their name, and end in .dat";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[12] {
      name="other_files";
      desc="list of other output (results) files generated by model (space separated) -- these files have the tag in their name but do not end in .dat";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @[13] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="command_id";
      desc="id for this command, assigned by the search algorithm in an algorithm-specific manner (optional)";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[14] {
      name="command";
      desc="emergent command line, up to point of parameters";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[15] {
      name="repo_url";
      desc="name of repository to run job on";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[16] {
      name="cluster";
      desc="name of cluster to run job on";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[17] {
      name="queue";
      desc="if specified, indicate a particular queue on the computing resource";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[18] {
      name="run_time";
      desc="how long will the jobs take to run -- syntax is number followed by unit indicator -- m=minutes, h=hours, d=days -- e.g., 30m, 12h, or 2d -- typically the job will be killed if it exceeds this amount of time, so be sure to not underestimate";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @[19] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="ram_gb";
      desc="how many gigabytes of ram is required?  0 means do not specify this parameter for the job submission -- for large memory jobs, it can be important to specify this to ensure proper allocation of resources";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @[20] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="n_threads";
      desc="number of parallel threads to use for running";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @[21] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="mpi_nodes";
      desc="number of nodes to use for mpi run -- 0 or -1 means not to use mpi";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @[22] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="pb_batches";
      desc="if > 0, use parallel batch mode with this number of batches";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @[23] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="pb_nodes";
      desc="if doing parallel batch mode, and cluster has by_node policy, then this is the number of nodes to allocate to the overall job";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[24] {
      name="submit_svn";
      desc="svn revision for the original job submission";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[25] {
      name="submit_job";
      desc="index of job number within a given submission -- equal to the row number of the original set of jobs submitted in submit_svn jobs";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
    };
    data_flags=AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [0]     };
   };
   jobs_archive {
    name="jobs_archive";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @[0] {
      name="tag";
      desc="unique tag id for this job -- all files etc are named according to this tag";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[1] {
      name="notes";
      desc="notes for the job -- describe any specific information about the model configuration etc -- can use this for searching and sorting results";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[2] {
      name="params";
      desc="emergent parameters based on currently selected items in the ClusterRun";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[3] {
      name="status";
      desc="status of job: REQUESTED, CANCELLED, SUBMITTED, QUEUED, RUNNING, DONE, KILLED";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[4] {
      name="status_info";
      desc="more detailed information about status";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[5] {
      name="submit_time";
      desc="when was the job submitted (tracks time from emergent client submission)";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[6] {
      name="start_time";
      desc="when did the job actually start running";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[7] {
      name="end_time";
      desc="when did the job finish running";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[8] {
      name="job_no";
      desc="job number on cluster -- assigned once the job is submitted to the cluster";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[9] {
      name="job_out";
      desc="job output information -- contains (top of) the job standard output and standard error output as the job is running (truncated to top 2048 characters if longer than that) -- full information available in job_out_file";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[10] {
      name="job_out_file";
      desc="job output file -- file name containing full job output information -- file name should be tag.out";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[11] {
      name="dat_files";
      desc="list of data table output (results) files generated by model (space separated) -- these files have the tag in their name, and end in .dat";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[12] {
      name="other_files";
      desc="list of other output (results) files generated by model (space separated) -- these files have the tag in their name but do not end in .dat";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @[13] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="command_id";
      desc="id for this command, assigned by the search algorithm in an algorithm-specific manner (optional)";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[14] {
      name="command";
      desc="emergent command line, up to point of parameters";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[15] {
      name="repo_url";
      desc="name of repository to run job on";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[16] {
      name="cluster";
      desc="name of cluster to run job on";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[17] {
      name="queue";
      desc="if specified, indicate a particular queue on the computing resource";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[18] {
      name="run_time";
      desc="how long will the jobs take to run -- syntax is number followed by unit indicator -- m=minutes, h=hours, d=days -- e.g., 30m, 12h, or 2d -- typically the job will be killed if it exceeds this amount of time, so be sure to not underestimate";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @[19] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="ram_gb";
      desc="how many gigabytes of ram is required?  0 means do not specify this parameter for the job submission -- for large memory jobs, it can be important to specify this to ensure proper allocation of resources";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @[20] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="n_threads";
      desc="number of parallel threads to use for running";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @[21] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="mpi_nodes";
      desc="number of nodes to use for mpi run -- 0 or -1 means not to use mpi";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @[22] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="pb_batches";
      desc="if > 0, use parallel batch mode with this number of batches";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     int_Data @[23] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="pb_nodes";
      desc="if doing parallel batch mode, and cluster has by_node policy, then this is the number of nodes to allocate to the overall job";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[24] {
      name="submit_svn";
      desc="svn revision for the original job submission";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[25] {
      name="submit_job";
      desc="index of job number within a given submission -- equal to the row number of the original set of jobs submitted in submit_svn jobs";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
    };
    data_flags=AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [0]     };
   };
   file_list {
    name="file_list";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @[0] {
      name="file_name";
      desc="name of file -- does not include any path information";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[1] {
      name="tag";
      desc="job tag associated with this file";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[2] {
      name="size";
      desc="size of file -- with typical suffixes (K = kilobytes, M = megabytes, G = gigabytes)";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[3] {
      name="kind";
      desc="type of file";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[4] {
      name="date_modified";
      desc="timestamp for when the file was last modified";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[5] {
      name="date_created";
      desc="timestamp for when the file was first created";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[6] {
      name="svn_file_path";
      desc="path to file in SVN repository, relative to root of svn_repo repository";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[7] {
      name="proj_file_path";
      desc="path to file relative to the parent project directory -- e.g., results/filename.dat";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[8] {
      name="file_path";
      desc="full path to file on local file system, including all parent directories and name of file -- takes you directly to the file";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
    };
    data_flags=AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [0]     };
   };
   cluster_info {
    name="cluster_info";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @[0] {
      name="queue";
      desc="queue that this info relates to";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[1] {
      name="job_no";
      desc="job number or total number of actve jobs";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[2] {
      name="user";
      desc="user name";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[3] {
      name="state";
      desc="current scheduler state -- or description of global state info";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[4] {
      name="procs";
      desc="number of processors for this job or for global state info";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
     String_Data @[5] {
      name="start_time";
      desc="timestamp for when the job was submitted or started running";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
     };
    };
    data_flags=AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [0]     };
   };
   search_algos {
    name="search_algos";
    el_typ=ParamSearchAlgo;
    el_def=0;
   };
   cur_search_algo=NULL;
   last_submit_time=;
   notes=;
   extra_files=;
   svn_repo=;
   repo_url=;
   cluster=;
   queue=;
   run_time=;
   ram_gb=0;
   n_threads=1;
   use_mpi=0;
   mpi_nodes=10;
   parallel_batch=0;
   pb_batches=10;
   pb_nodes=0;
   nowin_x=0;
  };
 };
 data {
  name="data";
  el_typ=DataTable;
  el_def=0;
  save_tables=1;
  DataTable_Group @.gp[0] {
   name="InputData";
   el_typ=DataTable;
   el_def=0;
   save_tables=1;
   DataTable @[0] {
    UserDataItem_List @*(.user_data_) {
     name="UserDataItem_List_56";
     el_typ=UserDataItem;
     el_def=0;
     UserDataItem @[0] {
      name="N_ROWS";
      value 2 0=5;
      val_type_fixed=0;
     };
    };
    name="StdInputData";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @[0] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_64";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="view_panel_wd";
	value 6 0=0.210526317358017;
	val_type_fixed=0;
       };
      };
      name="Group";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=168;
      ar {
       name="ar";
      [540] ;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
      };
     };
     String_Data @[1] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_65";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="view_panel_wd";
	value 6 0=0.210526317358017;
	val_type_fixed=0;
       };
      };
      name="Name";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=168;
      ar {
       name="ar";
      [540] "G_H";"H_I";"I_D";"D_E";"E_F";"F_A";"A_B";"B_C";"C_A";"A_B";
"B_C";"C_D";"D_E";"E_F";"F_A";"A_B";"B_C";"C_A";"A_B";"B_C";
"C_J";"J_K";"K_L";"L_A";"A_B";"B_C";"C_D";"D_E";"E_F";"F_G";
"G_H";"H_I";"I_A";"A_B";"B_C";"C_J";"J_K";"K_L";"L_A";"A_B";
"B_C";"C_J";"J_K";"K_L";"L_J";"J_K";"K_L";"L_G";"G_H";"H_I";
"I_A";"A_B";"B_C";"C_A";"A_B";"B_C";"C_J";"J_K";"K_L";"L_G";
"G_H";"H_I";"I_J";"J_K";"K_L";"L_G";"G_H";"H_I";"I_G";"G_H";
"H_I";"I_G";"G_H";"H_I";"I_J";"J_K";"K_L";"L_G";"G_H";"H_I";
"I_J";"J_K";"K_L";"L_D";"D_E";"E_F";"F_J";"J_K";"K_L";"L_D";
"D_E";"E_F";"F_J";"J_K";"K_L";"L_J";"J_K";"K_L";"L_J";"J_K";
"K_L";"L_J";"J_K";"K_L";"L_G";"G_H";"H_I";"I_D";"D_E";"E_F";
"F_G";"G_H";"H_I";"I_J";"J_K";"K_L";"L_A";"A_B";"B_C";"C_D";
"D_E";"E_F";"F_J";"J_K";"K_L";"L_J";"J_K";"K_L";"L_D";"D_E";
"E_F";"F_G";"G_H";"H_I";"I_D";"D_E";"E_F";"F_A";"A_B";"B_C";
"C_G";"G_H";"H_I";"I_A";"A_B";"B_C";"C_D";"D_E";"E_F";"F_J";
"J_K";"K_L";"L_G";"G_H";"H_I";"I_G";"G_H";"H_I";"I_A";"A_B";
"B_C";"C_D";"D_E";"E_F";"F_J";"J_K";"K_L";"L_J";"J_K";"K_L";
"L_G";"G_H";"H_I";"I_G";"G_H";"H_I";"I_D";"D_E";"E_F";"F_G";
"G_H";"H_I";"I_D";"D_E";"E_F";"F_J";"J_K";"K_L";"L_A";"A_B";
"B_C";"C_J";"J_K";"K_L";"L_A";"A_B";"B_C";"C_J";"J_K";"K_L";
"L_A";"A_B";"B_C";"C_G";"G_H";"H_I";"I_D";"D_E";"E_F";"F_A";
"A_B";"B_C";"C_A";"A_B";"B_C";"C_J";"J_K";"K_L";"L_G";"G_H";
"H_I";"I_G";"G_H";"H_I";"I_G";"G_H";"H_I";"I_A";"A_B";"B_C";
"C_G";"G_H";"H_I";"I_J";"J_K";"K_L";"L_D";"D_E";"E_F";"F_G";
"G_H";"H_I";"I_D";"D_E";"E_F";"F_A";"A_B";"B_C";"C_J";"J_K";
"K_L";"L_J";"J_K";"K_L";"L_J";"J_K";"K_L";"L_G";"G_H";"H_I";
"I_A";"A_B";"B_C";"C_D";"D_E";"E_F";"F_A";"A_B";"B_C";"C_G";
"G_H";"H_I";"I_D";"D_E";"E_F";"F_D";"D_E";"E_F";"F_J";"J_K";
"K_L";"L_G";"G_H";"H_I";"I_G";"G_H";"H_I";"I_D";"D_E";"E_F";
"F_J";"J_K";"K_L";"L_J";"J_K";"K_L";"L_J";"J_K";"K_L";"L_G";
"G_H";"H_I";"I_A";"A_B";"B_C";"C_D";"D_E";"E_F";"F_D";"D_E";
"E_F";"F_D";"D_E";"E_F";"F_A";"A_B";"B_C";"C_A";"A_B";"B_C";
"C_G";"G_H";"H_I";"I_D";"D_E";"E_F";"F_G";"G_H";"H_I";"I_J";
"J_K";"K_L";"L_G";"G_H";"H_I";"I_J";"J_K";"K_L";"L_A";"A_B";
"B_C";"C_D";"D_E";"E_F";"F_A";"A_B";"B_C";"C_G";"G_H";"H_I";
"I_J";"J_K";"K_L";"L_J";"J_K";"K_L";"L_G";"G_H";"H_I";"I_A";
"A_B";"B_C";"C_G";"G_H";"H_I";"I_G";"G_H";"H_I";"I_J";"J_K";
"K_L";"L_J";"J_K";"K_L";"L_D";"D_E";"E_F";"F_A";"A_B";"B_C";
"C_A";"A_B";"B_C";"C_A";"A_B";"B_C";"C_D";"D_E";"E_F";"F_A";
"A_B";"B_C";"C_A";"A_B";"B_C";"C_J";"J_K";"K_L";"L_A";"A_B";
"B_C";"C_G";"G_H";"H_I";"I_D";"D_E";"E_F";"F_J";"J_K";"K_L";
"L_J";"J_K";"K_L";"L_D";"D_E";"E_F";"F_J";"J_K";"K_L";"L_G";
"G_H";"H_I";"I_G";"G_H";"H_I";"I_J";"J_K";"K_L";"L_J";"J_K";
"K_L";"L_J";"J_K";"K_L";"L_G";"G_H";"H_I";"I_G";"G_H";"H_I";
"I_J";"J_K";"K_L";"L_A";"A_B";"B_C";"C_G";"G_H";"H_I";"I_A";
"A_B";"B_C";"C_D";"D_E";"E_F";"F_J";"J_K";"K_L";"L_J";"J_K";
"K_L";"L_A";"A_B";"B_C";"C_D";"D_E";"E_F";"F_D";"D_E";"E_F";
"F_D";"D_E";"E_F";"F_D";"D_E";"E_F";"F_D";"D_E";"E_F";"F_A";
"A_B";"B_C";"C_D";"D_E";"E_F";"F_A";"A_B";"B_C";"C_J";"J_K";
"K_L";"L_D";"D_E";"E_F";"F_A";"A_B";"B_C";"C_G";"G_H";"H_I";
"I_G";"G_H";"H_I";"I_G";"G_H";"H_I";"I_D";"D_E";"E_F";"F_G";
"G_H";"H_I";"I_J";"J_K";"K_L";"L_D";"D_E";"E_F";"F_A";"A_B";
"B_C";"C_G";"G_H";"H_I";"I_D";"D_E";"E_F";"F_A";"A_B";"B_C";
"C_A";"A_B";"B_C";"C_D";"D_E";"E_F";"F_J";"J_K";"K_L";"L_A";
      };
     };
     float_Data @[2] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_78";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="view_panel_wd";
	value 6 0=0.06641604006290436;
	val_type_fixed=0;
       };
      };
      name="Input";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=1;
      cell_geom{ 3;4;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [2] ;;      };
      width=53;
      ar {
       name="ar";
      [3 4 540] 0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
      };
     };
     float_Data @[3] {
      UserDataItem_List @*(.user_data_) {
       name=;
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="view_panel_wd";
	value 6 0=0.06641604006290436;
	val_type_fixed=0;
       };
      };
      name="Output";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=1;
      cell_geom{ 3;4;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [2] ;;      };
      width=53;
      ar {
       name="ar";
      [3 4 540] 0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;1;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;0;0;
0;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
1;0;0;0;0;0;0;0;0;0;
0;0;0;1;0;0;0;0;0;0;
0;0;0;0;0;0;1;0;0;0;
0;0;0;0;0;0;0;0;0;1;
0;0;0;0;0;0;0;0;0;0;
0;0;1;0;0;0;0;0;0;0;
0;0;0;0;0;1;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;1;0;0;0;0;0;0;0;0;
0;0;0;0;1;0;0;0;0;0;
0;0;0;0;0;0;0;1;1;0;
0;0;0;0;0;0;0;0;0;0;
      };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [540] 0;1;2;3;4;5;6;7;8;9;
10;11;12;13;14;15;16;17;18;19;
20;21;22;23;24;25;26;27;28;29;
30;31;32;33;34;35;36;37;38;39;
40;41;42;43;44;45;46;47;48;49;
50;51;52;53;54;55;56;57;58;59;
60;61;62;63;64;65;66;67;68;69;
70;71;72;73;74;75;76;77;78;79;
80;81;82;83;84;85;86;87;88;89;
90;91;92;93;94;95;96;97;98;99;
100;101;102;103;104;105;106;107;108;109;
110;111;112;113;114;115;116;117;118;119;
120;121;122;123;124;125;126;127;128;129;
130;131;132;133;134;135;136;137;138;139;
140;141;142;143;144;145;146;147;148;149;
150;151;152;153;154;155;156;157;158;159;
160;161;162;163;164;165;166;167;168;169;
170;171;172;173;174;175;176;177;178;179;
180;181;182;183;184;185;186;187;188;189;
190;191;192;193;194;195;196;197;198;199;
200;201;202;203;204;205;206;207;208;209;
210;211;212;213;214;215;216;217;218;219;
220;221;222;223;224;225;226;227;228;229;
230;231;232;233;234;235;236;237;238;239;
240;241;242;243;244;245;246;247;248;249;
250;251;252;253;254;255;256;257;258;259;
260;261;262;263;264;265;266;267;268;269;
270;271;272;273;274;275;276;277;278;279;
280;281;282;283;284;285;286;287;288;289;
290;291;292;293;294;295;296;297;298;299;
300;301;302;303;304;305;306;307;308;309;
310;311;312;313;314;315;316;317;318;319;
320;321;322;323;324;325;326;327;328;329;
330;331;332;333;334;335;336;337;338;339;
340;341;342;343;344;345;346;347;348;349;
350;351;352;353;354;355;356;357;358;359;
360;361;362;363;364;365;366;367;368;369;
370;371;372;373;374;375;376;377;378;379;
380;381;382;383;384;385;386;387;388;389;
390;391;392;393;394;395;396;397;398;399;
400;401;402;403;404;405;406;407;408;409;
410;411;412;413;414;415;416;417;418;419;
420;421;422;423;424;425;426;427;428;429;
430;431;432;433;434;435;436;437;438;439;
440;441;442;443;444;445;446;447;448;449;
450;451;452;453;454;455;456;457;458;459;
460;461;462;463;464;465;466;467;468;469;
470;471;472;473;474;475;476;477;478;479;
480;481;482;483;484;485;486;487;488;489;
490;491;492;493;494;495;496;497;498;499;
500;501;502;503;504;505;506;507;508;509;
510;511;512;513;514;515;516;517;518;519;
520;521;522;523;524;525;526;527;528;529;
530;531;532;533;534;535;536;537;538;539;
    };
   };
   DataTable @[1] {
    UserDataItem_List @*(.user_data_) {
     name="UserDataItem_List_75";
     el_typ=UserDataItem;
     el_def=0;
     UserDataItem @[0] {
      name="N_ROWS";
      value 2 0=1;
      val_type_fixed=0;
     };
     UserDataItem @[1] {
      name="MAT_VAL_TEXT";
      value 2 0=1;
      val_type_fixed=0;
     };
     UserDataItem @[2] {
      name="WIDTH";
      value 6 0=3.299999952316284;
      val_type_fixed=0;
     };
    };
    name="UnitNames";
    desc=;
    data {
     name="data";
     el_typ=String_Data;
     el_def=0;
     String_Data @[0] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_76";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="view_panel_wd";
	value 6 0=0.156739816069603;
	val_type_fixed=0;
       };
      };
      name="Input";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=1;
      cell_geom{ 3;4;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [2] ;;      };
      width=0;
      ar {
       name="ar";
      [3 4 1] "A";"B";"C";"D";"E";"F";"G";"H";"I";"J";
"K";"L";      };
     };
     String_Data @[1] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_77";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="view_panel_wd";
	value 6 0=0.156739816069603;
	val_type_fixed=0;
       };
      };
      name="Output";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=1;
      cell_geom{ 3;4;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [2] ;;      };
      width=0;
      ar {
       name="ar";
      [3 4 1] "A";"B";"C";"D";"E";"F";"G";"H";"I";"J";
"K";"L";      };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [1] 0;    };
   };
  };
  DataTable_Group @.gp[1] {
   name="OutputData";
   el_typ=DataTable;
   el_def=0;
   save_tables=1;
   DataTable @[0] {
    name="TrialOutputData";
    desc=;
    data {
     name="data";
     el_typ=int_Data;
     el_def=0;
     int_Data @[0] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_47";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
       UserDataItem @[1] {
	name="view_panel_wd";
	value 6 0=0.2528925538063049;
	val_type_fixed=0;
       };
      };
      name="batch";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=153;
      ar {
       name="ar";
      [170] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
      };
     };
     int_Data @[1] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_48";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
       UserDataItem @[1] {
	name="view_panel_wd";
	value 6 0=0.2528925538063049;
	val_type_fixed=0;
       };
      };
      name="epoch";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=153;
      ar {
       name="ar";
      [170] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
      };
     };
     int_Data @[2] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_49";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
       UserDataItem @[1] {
	name="view_panel_wd";
	value 6 0=0.2528925538063049;
	val_type_fixed=0;
       };
      };
      name="trial";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=153;
      ar {
       name="ar";
      [170] 0;1;2;3;4;5;6;7;8;9;
10;11;12;13;14;15;16;17;18;19;
20;21;22;23;24;25;26;27;28;29;
30;31;32;33;34;35;36;37;38;39;
40;41;42;43;44;45;46;47;48;49;
50;51;52;53;54;55;56;57;58;59;
60;61;62;63;64;65;66;67;68;69;
70;71;72;73;74;75;76;77;78;79;
80;81;82;83;84;85;86;87;88;89;
90;91;92;93;94;95;96;97;98;99;
100;101;102;103;104;105;106;107;108;109;
110;111;112;113;114;115;116;117;118;119;
120;121;122;123;124;125;126;127;128;129;
130;131;132;133;134;135;136;137;138;139;
140;141;142;143;144;145;146;147;148;149;
150;151;152;153;154;155;156;157;158;159;
160;161;162;163;164;165;166;167;168;169;
      };
     };
     String_Data @[3] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_68";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="view_panel_wd";
	value 6 0=0.2528925538063049;
	val_type_fixed=0;
       };
      };
      name="trial_name";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=153;
      ar {
       name="ar";
      [170] "G_H";"H_I";"I_D";"D_E";"E_F";"F_A";"A_B";"B_C";"C_A";"A_B";
"B_C";"C_D";"D_E";"E_F";"F_A";"A_B";"B_C";"C_A";"A_B";"B_C";
"C_J";"J_K";"K_L";"L_A";"A_B";"B_C";"C_D";"D_E";"E_F";"F_G";
"G_H";"H_I";"I_A";"A_B";"B_C";"C_J";"J_K";"K_L";"L_A";"A_B";
"B_C";"C_J";"J_K";"K_L";"L_J";"J_K";"K_L";"L_G";"G_H";"H_I";
"I_A";"A_B";"B_C";"C_A";"A_B";"B_C";"C_J";"J_K";"K_L";"L_G";
"G_H";"H_I";"I_J";"J_K";"K_L";"L_G";"G_H";"H_I";"I_G";"G_H";
"H_I";"I_G";"G_H";"H_I";"I_J";"J_K";"K_L";"L_G";"G_H";"H_I";
"I_J";"J_K";"K_L";"L_D";"D_E";"E_F";"F_J";"J_K";"K_L";"L_D";
"D_E";"E_F";"F_J";"J_K";"K_L";"L_J";"J_K";"K_L";"L_J";"J_K";
"K_L";"L_J";"J_K";"K_L";"L_G";"G_H";"H_I";"I_D";"D_E";"E_F";
"F_G";"G_H";"H_I";"I_J";"J_K";"K_L";"L_A";"A_B";"B_C";"C_D";
"D_E";"E_F";"F_J";"J_K";"K_L";"L_J";"J_K";"K_L";"L_D";"D_E";
"E_F";"F_G";"G_H";"H_I";"I_D";"D_E";"E_F";"F_A";"A_B";"B_C";
"C_G";"G_H";"H_I";"I_A";"A_B";"B_C";"C_D";"D_E";"E_F";"F_J";
"J_K";"K_L";"L_G";"G_H";"H_I";"I_G";"G_H";"H_I";"I_A";"A_B";
"B_C";"C_D";"D_E";"E_F";"F_J";"J_K";"K_L";"L_J";"J_K";"K_L";
      };
     };
     String_Data @[4] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_69";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="view_panel_wd";
	value 6 0=0.2528925538063049;
	val_type_fixed=0;
       };
      };
      name="group_name";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=153;
      ar {
       name="ar";
      [170] ;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
;;;;;;;;;;
      };
     };
     int_Data @[5] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_50";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
       UserDataItem @[1] {
	name="view_panel_wd";
	value 6 0=0.2528925538063049;
	val_type_fixed=0;
       };
      };
      name="phase_no";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=153;
      ar {
       name="ar";
      [170] 2;2;2;2;2;2;2;2;2;2;
2;2;2;2;2;2;2;2;2;2;
2;2;2;2;2;2;2;2;2;2;
2;2;2;2;2;2;2;2;2;2;
2;2;2;2;2;2;2;2;2;2;
2;2;2;2;2;2;2;2;2;2;
2;2;2;2;2;2;2;2;2;2;
2;2;2;2;2;2;2;2;2;2;
2;2;2;2;2;2;2;2;2;2;
2;2;2;2;2;2;2;2;2;2;
2;2;2;2;2;2;2;2;2;2;
2;2;2;2;2;2;2;2;2;2;
2;2;2;2;2;2;2;2;2;2;
2;2;2;2;2;2;2;2;2;2;
2;2;2;2;2;2;2;2;2;2;
2;2;2;2;2;2;2;2;2;2;
2;2;2;2;2;2;2;2;2;2;
      };
     };
     float_Data @[6] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_70";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="view_panel_wd";
	value 6 0=0.2528925538063049;
	val_type_fixed=0;
       };
      };
      name="minus_cycles";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=153;
      ar {
       name="ar";
      [170] 50;50;50;50;50;50;50;50;50;50;
50;50;50;50;50;50;50;50;50;50;
50;50;50;50;50;50;50;50;50;50;
50;50;50;50;50;50;50;50;50;50;
50;50;50;50;50;50;50;50;50;50;
50;50;50;50;50;50;50;50;50;50;
50;50;50;50;50;50;50;50;50;50;
50;50;50;50;50;50;50;50;50;50;
50;50;50;50;50;50;50;50;50;50;
50;50;50;50;50;50;50;50;50;50;
50;50;50;50;50;50;50;50;50;50;
50;50;50;50;50;50;50;50;50;50;
50;50;50;50;50;50;50;50;50;50;
50;50;50;50;50;50;50;50;50;50;
50;50;50;50;50;50;50;50;50;50;
50;50;50;50;50;50;50;50;50;50;
50;50;50;50;50;50;50;50;50;50;
      };
     };
     float_Data @[7] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_71";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="view_panel_wd";
	value 6 0=0.2528925538063049;
	val_type_fixed=0;
       };
      };
      name="sse";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=153;
      ar {
       name="ar";
      [170] 6.413413;7.7454801;6.5011511;5.4536381;5.2237024;5.435976;5.3895855;6.8070683;5.9149995;4.2188129;
5.0809727;6.0722055;4.4351778;4.3270283;4.3873072;4.0629902;6.0618396;4.5276027;3.3386395;3.804054;
6.1341295;4.3376408;4.3208151;5.3447943;3.1144459;3.6424196;4.132894;5.1331987;3.559176;3.836309;
5.0860577;5.0541582;3.1086471;3.0345654;3.0538692;5.1454301;3.5951042;3.8317275;3.7368238;2.3343313;
2.6163106;2.7629066;3.016892;3.3374758;4.0113473;3.302887;2.8469813;2.5293393;3.7094779;3.2853975;
2.5586941;1.656472;1.4953976;3.0932703;1.3450544;1.4479172;2.5073261;1.8940914;2.8294141;2.0324845;
2.8846993;2.3655107;4.2859111;2.6595011;2.2958405;1.953922;2.3161054;1.7629204;3.9114933;2.1003482;
1.6391369;3.6432798;2.0243802;1.7545444;3.2851272;1.6969948;1.8432626;1.675534;1.7926738;2.9690547;
2.2222419;2.1987453;1.4330158;3.4675837;2.0759485;2.0334344;3.9228637;2.1978402;1.768378;1.8714327;
1.86973;1.4236708;3.1324852;1.2215441;1.2958381;2.8327768;0.91646218;1.4218109;1.6123803;1.5229361;
0;1.305687;0.27886665;0.27402669;2.3919137;1.5606724;1.5122297;3.7364252;0.99551702;1.5083649;
0.91385603;0.42552203;1.4358878;1.2140083;0;1.4174734;3.3452892;0.88838768;1.0972668;3.1258492;
0.67920101;0.88548642;2.8464618;0.3607223;0.32337523;1.7375007;0;0.91235602;1.7109733;0.91496468;
1.1291857;2.9120665;0.56881428;1.3519349;1.1954682;0.79540133;1.2529371;2.563225;0.91273671;0.5212692;
2.6275184;0;0.35056704;2.4205439;0.57228839;0.34799552;2.8147883;0.34739369;0.70733368;2.4725213;
0;0.5352757;0.71446997;0;0.31585062;2.9258552;0.25079778;0.69945735;2.6808372;0.53193784;
0.77878261;0.93693775;0.27285627;0.64925396;1.2053602;0;0.32856908;2.3374412;0;0.26439977;
      };
     };
     float_Data @[8] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_72";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="view_panel_wd";
	value 6 0=0.2528925538063049;
	val_type_fixed=0;
       };
      };
      name="ext_rew";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=153;
      ar {
       name="ar";
      [170] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
      };
     };
     float_Data @[9] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_78";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="view_panel_wd";
	value 6 0=0.2528925538063049;
	val_type_fixed=0;
       };
      };
      name="Input_act_m";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=1;
      cell_geom{ 3;4;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [2] ;;      };
      width=153;
      ar {
       name="ar";
      [3 4 170] 0;0;0;0;0;0;0.94999999;0;0;0;
0;0;0;0;0;0;0;0;0;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0.94999999;0;0;0;0;0;0;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0.94999999;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0;0;0;0;
0;0;0.94999999;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0;0;0;0;
0;0;0;0;0;0;0;0;0.94999999;0;
0;0;0;0;0;0;0;0;0.94999999;0;
0;0;0;0;0;0;0;0;0;0;
0;0.94999999;0;0;0;0;0;0;0;0;
0;0;0;0;0.94999999;0;0;0;0;0;
0;0;0;0;0;0;0;0.94999999;0;0;
0;0;0;0;0;0;0;0;0;0;
0.94999999;0;0;0;0;0;0;0;0;0;
0;0;0;0.94999999;0;0;0;0;0;0;
0.94999999;0;0;0;0;0;0;0;0;0;
0;0;0;0.94999999;0;0;0;0;0;0;
0;0;0;0;0;0;0.94999999;0;0;0;
0;0;0;0;0;0;0.94999999;0;0;0;
0;0;0;0;0;0;0;0;0;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0.94999999;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0.94999999;0;0;0;0;0;0;0;0;
0;0;0;0;0.94999999;0;0;0;0;0;
0;0;0;0;0;0;0;0.94999999;0.94999999;0;
0;0;0;0;0;0;0;0;0;0;
0;0.94999999;0;0;0;0;0;0;0;0;
0;0;0;0;0.94999999;0;0;0;0;0;
0;0;0;0;0;0;0;0.94999999;0;0;
0;0;0;0;0;0;0;0;0;0;
0.94999999;0;0;0;0;0;0;0;0;0;
0;0;0;0.94999999;0;0;0;0;0;0;
0;0;0;0;0;0;0.94999999;0;0;0;
0;0;0;0;0;0;0;0;0;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0.94999999;0;0;0;0.94999999;0;0;0;
0;0;0;0;0;0;0;0;0;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0.94999999;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0.94999999;0;0;0;0;0;0;0;0;
0;0;0;0;0.94999999;0;0;0;0;0;
0;0;0;0;0;0;0;0.94999999;0.94999999;0;
0;0;0;0;0;0;0;0;0;0;
0;0.94999999;0;0;0;0;0;0;0;0;
0;0;0;0;0.94999999;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0.94999999;0;0;0;0;0;0;
0;0;0;0;0;0;0.94999999;0;0;0;
0;0;0;0;0;0;0;0;0;0.94999999;
0;0;0;0;0;0;0;0;0;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0.94999999;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0;0;0;0;
0;0;0.94999999;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0;0;0;0;
0;0;0;0;0;0;0;0;0.94999999;0;
0;0;0.94999999;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0;0;0;0;
0;0;0;0;0;0;0;0;0.94999999;0;
0;0;0;0;0;0;0;0;0.94999999;0;
0;0;0;0;0;0;0;0;0;0;
0;0.94999999;0;0;0;0;0;0;0;0;
0;0;0;0;0.94999999;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0.94999999;0;0;0;0;0;0;
0;0;0;0;0;0;0.94999999;0;0;0;
0;0;0;0;0;0;0;0;0;0.94999999;
0;0;0;0;0;0;0.94999999;0;0;0;
0;0;0;0;0;0;0;0;0;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0.94999999;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0;0;0;0;
0;0;0;0;0;0;0;0;0.94999999;0;
0;0;0;0;0;0;0;0;0;0;
0;0.94999999;0;0;0;0;0;0;0.94999999;0;
0;0;0;0;0;0;0;0;0;0;
0;0.94999999;0;0;0;0;0;0;0;0;
0;0;0;0;0.94999999;0;0;0;0;0;
0;0;0;0;0.94999999;0;0;0;0;0;
0;0;0;0;0;0;0;0.94999999;0;0;
0;0;0;0;0;0;0;0;0;0;
0.94999999;0;0;0;0;0;0;0;0;0;
0.94999999;0;0;0;0;0;0;0;0;0;
0;0;0;0.94999999;0;0;0;0;0;0;
0;0;0;0;0;0;0.94999999;0;0;0;
0;0;0;0;0;0;0;0;0;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0.94999999;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0;0;0;0;
0;0;0.94999999;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0;0;0;0;
0;0;0;0;0;0;0;0;0.94999999;0;
0;0;0;0;0;0;0;0;0;0;
0;0.94999999;0;0;0;0;0;0;0;0;
0;0;0;0;0.94999999;0;0;0;0;0;
0;0;0;0;0;0;0;0.94999999;0;0;
0;0.94999999;0;0;0;0;0;0;0;0;
0;0;0;0;0.94999999;0;0;0;0;0;
0;0;0;0;0;0;0;0.94999999;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0.94999999;0;0;0;0;0;0;
0;0;0;0;0;0;0.94999999;0;0;0;
0;0;0;0;0;0;0;0;0;0.94999999;
0;0;0;0.94999999;0;0;0;0;0;0;
0;0;0;0;0;0;0.94999999;0;0;0;
0;0;0;0;0;0;0;0;0;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0;0;0;0;
0;0;0;0;0;0;0;0;0.94999999;0;
0;0;0;0;0;0;0;0;0;0;
0;0.94999999;0;0;0;0;0;0;0;0;
0;0.94999999;0;0;0;0;0;0;0;0;
0;0;0;0;0.94999999;0;0;0;0;0;
0;0;0;0;0;0;0;0.94999999;0;0;
0;0;0;0;0;0;0;0.94999999;0;0;
0;0;0;0;0;0;0;0;0;0;
0.94999999;0;0;0;0;0;0;0;0;0;
0;0;0;0.94999999;0;0;0;0;0;0;
0;0;0;0.94999999;0;0;0;0;0;0;
0;0;0;0;0;0;0.94999999;0;0;0;
0;0;0;0;0;0;0;0;0;0.94999999;
0;0;0;0;0;0;0.94999999;0;0;0;
0;0;0;0;0;0;0;0;0;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0.94999999;0;0;0;0;0;0;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0.94999999;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0;0;0;0;
0;0;0;0;0;0;0;0;0.94999999;0;
0;0;0;0;0;0;0;0;0;0;
0;0.94999999;0;0;0;0;0;0;0;0;
0;0;0;0;0.94999999;0;0;0;0;0;
0;0;0;0;0;0;0;0.94999999;0;0;
0;0;0;0;0;0;0;0;0;0;
0.94999999;0;0;0;0;0;0;0;0;0;
0;0;0;0.94999999;0.94999999;0;0;0;0;0;
0;0;0;0;0;0;0;0.94999999;0;0;
0;0;0;0;0;0;0;0;0;0;
0.94999999;0;0;0;0;0;0;0;0;0;
0;0;0;0.94999999;0;0;0;0;0;0;
0;0;0;0;0;0;0.94999999;0;0;0;
0;0;0;0;0;0;0;0;0;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0;0;0;0;
0;0;0;0;0;0;0;0;0.94999999;0;
0;0;0;0;0;0;0;0;0;0;
0;0.94999999;0;0;0;0;0;0;0;0;
0;0.94999999;0;0;0;0;0;0;0;0;
0;0;0;0;0.94999999;0;0;0;0;0;
0;0;0;0;0;0;0;0.94999999;0;0;
0;0.94999999;0;0;0;0;0;0;0;0;
0;0;0;0;0.94999999;0;0;0;0;0;
0;0;0;0;0;0;0;0.94999999;0;0;
0;0;0;0;0;0;0;0;0;0;
0.94999999;0;0;0;0;0;0;0;0;0;
0;0;0;0.94999999;0;0;0;0;0;0;
0;0;0;0;0;0;0.94999999;0;0;0;
0;0;0;0.94999999;0;0;0;0;0;0;
0;0;0;0;0;0;0.94999999;0;0;0;
0;0;0;0;0;0;0;0;0;0.94999999;
0;0;0;0;0;0;0.94999999;0;0;0;
0;0;0;0;0;0;0;0;0;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0.94999999;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0.94999999;0;
0;0;0;0;0;0;0;0;0;0;
0;0.94999999;0;0;0;0;0;0;0;0;
0;0;0;0;0.94999999;0;0;0;0.94999999;0;
0;0;0;0;0;0;0;0;0;0;
0;0.94999999;0;0;0;0;0;0;0;0;
0;0;0;0;0.94999999;0;0;0;0;0;
0;0;0;0;0;0;0;0.94999999;0;0;
0;0;0;0;0;0;0;0;0;0;
0.94999999;0;0;0;0;0;0;0;0;0;
0;0;0;0.94999999;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0.94999999;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0;0;0;0;
0;0;0.94999999;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0;0;0;0;
0;0;0;0;0;0;0;0;0.94999999;0;
0;0;0;0;0;0;0;0;0.94999999;0;
0;0;0;0;0;0;0;0;0;0;
0;0.94999999;0;0;0;0;0;0;0;0;
0;0;0;0;0.94999999;0;0;0;0.94999999;0;
0;0;0;0;0;0;0;0;0;0;
0;0.94999999;0;0;0;0;0;0;0;0;
0;0;0;0;0.94999999;0;0;0;0;0;
0;0;0;0;0;0;0;0.94999999;0;0;
0;0;0;0;0;0;0;0;0;0;
0.94999999;0;0;0;0;0;0;0;0;0;
0;0;0;0.94999999;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0.94999999;
0;0;0;0;0;0;0;0;0;0;
0;0;0.94999999;0;0;0;0;0;0;0;
0;0;0;0;0;0.94999999;0;0;0;0;
0;0;0;0;0;0.94999999;0;0;0;0;
0;0;0;0;0;0;0;0;0.94999999;0;
      };
     };
     float_Data @[10] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_74";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="view_panel_wd";
	value 6 0=0.2528925538063049;
	val_type_fixed=0;
       };
      };
      name="Hidden_act_m";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=1;
      cell_geom{ 4;4;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [2] ;;      };
      width=153;
      ar {
       name="ar";
      [4 4 170] 0.92095309;0.85790199;0.012692626;5.2579344e-05;2.1983393e-09;0;0.90494251;0.9321174;1.0435083e-05;0.73138058;
0.92403078;0.80571717;0;0.12135394;0.40646857;0.90445203;0.92071342;0.82043475;0.012831494;4.8523611e-07;
3.6558731e-06;0.75135046;0.92806685;0.89197326;0.67825538;6.685529e-07;0.93653578;0.64281327;0.00061523775;0.0068838261;
0.87906837;0.7319833;0.86385787;0.6859805;0.60684013;2.7688515e-05;1.2398887e-07;4.515638e-06;0.89451832;0.71870291;
0.66901702;0.6545828;0.93657351;0.002887011;0.87017274;0.73743892;0.89302415;0.76668936;0.90293038;0.072728582;
0.78912032;0.00076393434;0;0.0082654189;0.76983374;0.88688534;0.00056821387;0.72009832;0.95132965;0.37480783;
0.8423928;0.88312835;0.13864279;0.87173581;0.94258612;0.050780199;0.88328236;0.013225547;0;1.7844113e-09;
0.89141643;0.048414569;0.0014479986;0.92312801;0.92294335;0.76359713;0.00041134303;0.91025251;6.2923834e-07;0.89826745;
0.86939991;0.86956984;9.7125621e-06;0.00015029075;0.83832866;0.095460638;0.84559774;0.88151711;0.0007218041;0.025844621;
0.7630434;0.076633707;3.0864292e-06;0.82280618;0.88996953;0.87361884;0.82638764;0.85125637;0.055337876;8.672326e-09;
0.29802766;0.91315401;0.0659023;0.68745083;0.87059557;0.00018988259;0.90830624;0.034978963;0.066462673;0.013042726;
0.92319423;0.82385308;0.90977997;0.00099812984;0.65816468;0.60431963;0;0;0.9219352;0.71717167;
2.2856016e-06;0.91923708;0.051861439;0.72316641;3.6890256e-08;0.90538359;0.00010171358;0.87089956;0.8691836;2.1006896e-05;
0.87552941;0;8.0616286e-05;2.4844604e-07;0.00063247565;0.85645193;0.72762913;0.81801194;0.93008888;0.82700497;
0.83362281;0.86954838;7.1357543e-05;0.75199944;0.25645438;0.53677684;0.79471922;4.4878092e-08;0.01980032;0.94350111;
5.8345129e-05;9.3521712e-06;0.87115896;0;0.90520066;0.00014093598;0.9173314;1.7992061e-05;0.9237203;0.00011095816;
0.83158636;0.61802834;0.80384159;0.80297893;0.00016803891;0.00014794283;0.90938157;0.0033852176;0.030956237;0.87575978;
4.7269157e-05;0.23396187;6.4861688e-06;0.83720672;0.75296628;0.71219927;0.77022135;0.0014935262;0.84707302;0;
0.0041786977;4.1635183e-05;0.0012400051;0.89111125;0.60167718;0.79285258;0.9268117;0.70094347;0.85115355;0.81490195;
0.0031523253;0.74765885;0.81779003;2.2270039e-09;0.0020696162;0.89595163;1.9314855e-06;0.87356538;0.49662393;0.016194945;
0.0064385468;2.1519129e-06;0.91956425;0.037413128;0.90912676;0.88606262;0.58839166;0.0020460878;0.90168798;0.40655473;
0.86750042;0.014302269;1.8723145e-09;2.6095833e-07;0.68205678;6.0968222e-07;0.0031791707;0.89484698;0.85153151;0.70136732;
8.3873226e-07;0.82994062;0;0.83182561;0.73306489;0.85144466;1.079504e-06;0.65364891;0.8655858;0.71784711;
0.71273518;0.037731923;0.021504458;0.0040547629;8.1151684e-06;0.19829644;0;0.81177098;0.8836478;0.76855111;
0.02088993;0.52490556;0.71710759;2.9516105e-09;0.19912653;0.94074225;0.00036581443;0.00032202131;0.87027156;0;
0.87781197;0.001031509;0.90905154;0;0.91663682;5.9125829e-05;0.58453816;0.01344387;0.61675698;0.79481328;
3.3219903e-06;3.8676467e-06;0.89866716;0.87684518;0.000117528;0.91755968;0.03665581;0.048359856;0.00089262752;0.82223374;
0.015694635;0.83655387;0.00040634652;0.011971555;0.89491242;0;0.71711379;0.80227858;4.2293683e-05;0.5578602;
0.90682262;0.00095660158;0.85126871;0.25375628;0.89218646;2.8072955e-06;0.7643435;8.6138578e-05;0.71904469;0.79915786;
0.0029361465;1.1927307e-05;0.090308473;0.92481166;0.72024131;3.9373472e-06;0.87423146;0;0.6937682;0.029332673;
0.0042897412;0;0.91716504;0.0013856461;0.018410712;8.6301159e-05;0.87530839;0.83991456;1.2946964e-05;0.69435978;
0.86951196;0.037170529;0.00057355314;0.83521295;0.0013311554;0.5840531;0.90898603;0.7676605;0.0039348938;1.365085e-05;
0.55418009;0.76327455;0.21139465;0;0.80357504;0;0.0599913;0.91608638;0.2020658;0.8234883;
0.82397801;0.60333586;4.7456415e-05;0.017881656;0.0011491487;0.85352379;0.056836382;0.84919411;0;0.19878651;
0.89998466;0;0.81233221;0.76027513;0.00025264826;0.063505024;0.76040024;0.85787839;1.351108e-05;0.79822171;
8.1150229e-06;0.57639515;1.7241182e-05;0.02387215;0.053345062;0.00016883045;0;0.88747996;0.038513765;0.89269447;
0;0.78841984;0.90305227;0.85818368;0.92792922;0.85965514;0.001027515;6.9976588e-05;0;0;
0.8184824;0.81424266;0.64848429;0.71761996;0;0;0.73054785;2.1498374e-05;0.83729851;2.2332979e-05;
0.92944473;0.00048662184;0.78566098;0;0.81801784;0.020931059;0;0.6924181;0.27939677;0.9109742;
0.029846078;0;0.89347595;0;0.59391844;1.5983386e-07;8.4583677e-05;0.063007504;0.92262775;0.00079554785;
0.65707237;0.012266514;0.75238973;0.83249211;0.067414172;4.5426751e-09;0.87001157;0;0.81520486;0.75291884;
0;0.20386843;7.4037831e-05;0.50345981;0.67899883;0.0073643788;0.8479858;0.060323179;0.86176497;0;
0.00014891995;0;0.50809342;0.86093438;0.039292246;0.82914984;0.78824586;0.82272273;0.77080888;0.057661407;
9.0154811e-07;0.07117781;0.73560548;4.2599941e-06;1.3831152e-06;0.84197986;2.8862951e-07;0.81608176;0.64586091;0.049521737;
0.0001387613;1.8764257e-09;0.87563872;0.13104618;0.89617366;0.78337127;0.0050971769;0.029421475;0.88344771;0.67246902;
0.82692361;0.0039453544;1.3077916e-08;0;0.23905599;6.839997e-08;0.0014929428;0.85798317;0.6513595;0.67591077;
0;0.63758349;0;0.83281243;0.60110343;0.057205159;0;0.81016487;0.83368194;0.85453236;
0.0011334948;0.0038366963;0.68691289;0;0;0.001219105;0;0.83739722;0.91346908;0.1613251;
0.84811842;0.87412685;5.6995927e-05;0.072747491;0.3596873;0;0.90965796;0.75674552;0.57189727;1.7182397e-06;
0.0014363705;0.9034124;6.0188773e-05;7.5489238e-06;3.5895773e-08;0.25144565;0.7962209;0.77766335;0.51440543;2.0910975e-05;
0.036514997;0.84981084;0.887932;6.2856278e-05;0.80632102;0;0.22900143;0.89148045;1.8188868e-05;0;
0.00073777378;0;2.9558576e-05;0.83036441;0.020443279;0.00023602031;0.63636851;0.00031894757;0.90943056;0.00039380416;
0.86973917;0.31854525;0.0022694999;0.0015989726;0.86739516;0;0.90152663;3.9668441e-05;0.014821636;0.25266141;
0.21603015;0;0.43831399;0.92660737;0.00017364052;0.00098128733;0.80844396;0;0.76634413;0.00011778397;
0.87911558;0;0.89099789;0.0010563112;1.5308797e-05;4.9923869e-09;0.88648677;0.85389471;0.00015887718;0.53502917;
0.81675524;0.018490437;0.0011928543;0.80701625;0;0.0086004669;0.90217423;0.53902543;0.073452294;1.5431589e-05;
0.00062078616;0.72498482;0.7577489;0;0.80239809;0;0;0.88826728;0.56293964;0.80773711;
0.26334703;0.019750323;1.104736e-06;0.0069243908;0.00080571265;0.86151832;0.0036957222;0.38225251;0;0.0040960354;
0.82867199;0;0.00067159813;0.82905209;0;0.80895352;0.73114336;0.83423239;0;0.86208797;
0;0.80041569;0;0.056860629;0.0048096683;0.0003833778;0;0.87012738;0.010657745;0.87462759;
0;0.63488233;0.862324;0.80002511;0.9014864;0.82664388;0.029634662;0.00020329043;0;0.0020172847;
0.83413929;0.85665214;0.86408877;0.0001593746;0.032953259;0;0.14288664;0.011523644;0.80847239;0.043003157;
0.9298926;0.011134122;0.00029386554;3.3284102e-06;0.78316051;0.069110505;0;0.3219929;0.14806318;0.90766031;
0.058401767;2.8240419e-09;0.87753147;0;0.50946498;5.1855393e-05;0.00044926498;0.00026761409;0.90255755;0.0050765518;
0.001975626;0.26302785;0.082440577;0.87982064;0.61045724;0;0.8632654;0;0.86413813;0.09184397;
0;0.00023435777;0.00010582285;0.11250953;0.72149903;0.56235301;0.73885638;3.7876956e-07;0.87631845;0;
9.7565251e-05;0;7.6090978e-06;0.82250929;0.21566129;0.7860201;0.72931683;0.43143234;0.80971533;0.013493691;
0.00014182802;0.00065277808;0.0048963916;0.63455296;0;0.077156782;0.77802879;0;0.0021566595;0.77714199;
0;0.74785769;0.52719688;0.75289452;0;0.85256433;0;0.78859872;0;0.80567455;
0;0.86479622;0;0.88356084;0.34007865;0.79648626;0;0.0034891274;0.03682534;0.097676806;
0.02172412;0.78099674;0.82571828;0.0079176901;0;0;0.77340257;0.70548666;0.63581568;0.54785103;
3.0935389e-06;0;0.70618331;7.9977166e-05;0.74539661;0.021549856;0.92710829;8.3634812e-05;0.00027975324;0;
0.61765069;0.63708735;0;0.0069711953;0.72556138;0;0.247823;0.72725409;0;0.73079818;
0.18581659;0.81053931;3.0558973e-09;0.82716864;0;0.63523781;1.3830645e-08;0.86196476;5.3565983e-09;5.0051149e-06;
0;0.7732448;0.85743535;0.81339628;0;0.0023062164;0.37552804;0.69680893;0.77117264;0.4395729;
0.00032130704;5.565069e-07;7.1705494e-05;0.0019573679;0.90335679;0.70049638;0.76128685;0.013530394;0.00080658006;0;
0.003183566;0.6772483;0.031274322;0.66470397;0.91497183;4.8778413e-05;1.5994865e-05;0;0.88989604;0.81321919;
0.016004583;0.69257247;0.0011689106;0;0.8873595;0.74754989;0.02213202;9.6302589e-05;3.8789096e-07;0.88433915;
0.0020906145;0.00025319992;1.0135864e-06;0.0234828;0.87435502;0.79814839;0.83260638;4.6263989e-07;6.5347976e-08;0.63495845;
0.85547054;0.00013882801;0.00059775787;0.0022906803;0.16810976;0.89151555;0;2.8669947e-06;2.9262335e-09;0.0027448365;
0.008316285;0.63180792;1.1616532e-05;0.042381369;0.26956478;0.023378339;0.89654273;7.9944584e-06;0.87811577;0.00067170145;
0.0053171595;0;0.87973785;0;0.90411866;1.1362722e-07;0.7178492;0.0029771675;0;0;
0.00062178995;0.83749396;0;2.1059022e-07;0.78878766;0;0.74060464;0;0;0.0060897404;
0.88386029;0.80137646;0.0070735253;0;0.0027376793;0.85284901;0.00029793769;0.5814212;0.8419435;0.0035932949;
0.82965702;0.00042464145;0;0;0.85741299;0.0081844814;0.70371479;0.00031973509;0.80147415;0.6300323;
0.86539984;0;0.004200438;0;0.0065815165;0.75975686;0.099635385;0.85902286;9.3229843e-05;0.56601554;
9.5750397e-07;0.00093944924;9.6521699e-06;0.70733666;0.64096421;0.00091868744;0;0;0.0097580142;0.85565066;
0;6.1801329e-06;0.78972614;0;0.7244671;0;2.3028183e-06;0.0074130455;0.87765568;0.66673619;
0.00049381005;0;0.63250464;0.82644928;0.00081259158;0.53732324;0.75942749;0;0.7913357;0.00023374063;
0;0;0.87660307;0.22139591;0.022122614;4.1201922e-05;0.49213138;0.073135793;0.84301835;0;
0.71947867;0;0;0.74494487;0.66277301;0.79587877;1.4705835e-05;0.033008177;6.4041387e-07;0.0020640872;
0.0018489704;0.69598967;0.0036946635;3.5580499e-05;0;0.7633068;0.77444381;0;0;0.75134534;
0;0.65147018;0.77388173;0.01053425;1.7587867e-05;0.8907851;4.0335766e-05;0.081773452;0;0.522421;
0;1.2989467e-05;0;0.86074847;0.0047682407;0.83413935;0;0.015076035;0.82636553;0.62660521;
0.80583054;0.79886919;0.0035639489;0.037312757;1.7743971e-05;7.0273229e-05;0.88411862;0.7151041;0.75090998;0.0041169911;
0.00028213055;0;0.0023680988;0.49659011;0.18497671;0.41141793;0.9112578;0.00099419267;3.588348e-07;0;
0.84776413;0.037612788;0.0015637827;0.78604257;0;0;0.18183473;0.78272575;1.2531517e-12;0.57630479;
0.00013135061;0.81616336;0;0.5970695;4.9784026e-06;0.72155583;0.84572017;0.51586354;0.77236032;1.9531819e-06;
0;0.78296238;0.76309311;0.00029423367;0.0027244212;2.6538399e-07;0.63496566;0.85814404;0;0.001073696;
2.9938817e-06;4.8041456e-06;1.9432096e-07;0.85974574;0.0016717248;0.20293979;0.73455268;0;0.86812079;0;
0.85103929;0.3155548;0;4.2583351e-06;0.00083958422;0;0.8753491;0.073935889;7.8174025e-06;0.6586138;
0;0.001765719;0.83362252;0;0.0045696897;0.74097407;0;0.2245868;0.70276654;0.34898645;
0.00081930973;0.8282491;0;0.80509073;0;0.87392765;0.00062967296;3.9690189e-05;0;0.61677778;
0.41239905;0.55775315;0;0.80953473;8.1690181e-05;0.79736018;0;0.64301932;5.3188629e-05;0.56776434;
2.4823735e-06;0;0.75745553;0.75211793;0.81325209;2.0346921e-05;0.040790398;0;0.16173992;0.0012588957;
0.74591374;0.0085678939;0.91350478;0.0012355085;0;0.00021091998;0.85336137;0.72151792;0.67488235;0.81845093;
0;0;0.7166127;0.080903225;0.0041577173;0.0078321565;0;0.86282063;0;0.0011642314;
1.2690216e-05;0.0029137353;0.84252155;0;0.82655936;2.1268854e-05;0;0.86811948;0.10434321;0.00064245955;
0.0008908434;8.8406494e-05;0.78116447;0.79021728;0.00251394;0.056004483;0.025454301;0;0.022595586;0.52180147;
0.00031691918;0.0045331218;0.26251912;0.0066756741;0.88021386;2.6492856e-07;0.86233884;0.0036320444;0.0028941096;0;
0.84822202;0;0.88893747;9.5923873e-09;0.76415944;0.11493427;0.72849333;0.76948953;0;0;
4.8525912e-06;0.14169835;1.7225688e-09;0.64524525;6.8510098e-10;0.82664233;0;0.053158604;0.00068634853;0.77106392;
0.79000914;0;0.82992387;0.00059431704;0;0.86065358;0.0034070988;0.00030716433;0.0058723381;1.3039394e-05;
0.79042113;0.73821557;0.071675271;0.025344307;0.23230763;0;3.1586515e-05;0.7842797;0.51613253;0.00119932;
0.20159081;0;0.85007143;0;0.72450334;0.69674838;0;5.408964e-05;0.10343465;0;
0.81403762;0.00019045401;0.78633803;0.038369887;0.0014438013;0.86144495;0;0;0.17426109;0.83381671;
1.7801136e-07;0.00054671097;0.031329453;0.54357958;0;0.51809716;0.00093468098;0.61684269;0.74270207;0;
0.82145238;0.0029209657;0;0.85233945;0.0012713133;0.00020894132;0.013383782;6.31256e-07;0.78581667;0.71239311;
0.24557047;0.013249234;0.16223966;0;1.9624684e-05;0.00040335077;0.012503112;0.8565532;0.035563767;0.0064281719;
0.58315146;0;0.82677925;0.09236072;0;0;0.78329855;5.2896881e-05;0.88732827;0.021609673;
4.0232285e-06;0.00016516459;0;0.0023520633;0.78932953;0;0;0.77871746;0;0.51129258;
0.84031427;0.00055305695;0.64706272;0.85903144;0.0040657553;0.015943261;0;0.79376084;0;5.7363592e-05;
0;0.81740391;0.15666686;0.82547289;0;0.0043871924;0.70992601;0.36570826;0.26655382;0.78746623;
0.0040947301;0.058207948;0.00057162147;2.3977057e-06;0.86752778;0.80481923;0.73036277;0.01953594;2.8082317e-07;0;
0.021521939;0.66453725;0.013281991;0.054426569;0.89099497;0.042316504;3.4774621e-05;0.016618075;0.81398207;1.8352568e-05;
0.86387205;0.7027635;0;0;3.882015e-07;0.018276202;3.0540737e-09;0.72919834;0.00019529954;0.83096701;
1.1603408e-06;0.28594351;0.0015051322;0.0031889607;0.7752713;0.042901058;0.004470537;9.6437452e-06;5.7694206e-07;0.72817558;
0.81462306;0.7011714;0.01130385;0;0.80062366;0.50892109;3.2169519e-05;2.9259644e-07;0;4.1927866e-05;
0.32047805;0.71812302;0.77636325;5.0353292e-06;6.3105059e-09;0;0.78994185;0;0.007753754;0.87507957;
0;0.00020069067;0.0045053014;0;0.81588119;0.28003883;2.4876617e-05;0.47927564;0;0.013992879;
0.84623903;0;0.0010942381;0.73855084;0;0.17539467;0.71589237;0.011757109;0.0032035965;0.83103156;
7.0299327e-05;0.77850604;0;0.83148444;0;0.82103586;0.00020592212;0.83912522;0.17337781;0.15335058;
0;5.7177549e-06;5.1991656e-06;0.68530071;0;0.75822473;2.7629774e-06;0.097733028;3.0164873e-09;0;
0.70900512;0.63521874;0.79469603;4.734841e-09;0.00069236645;0;0.29035491;0.00019853494;0.67470753;0.0001752508;
0.90283537;0.00018469646;0;0.095879026;0.5662812;0;0.00032969302;0.77275169;0;1.7193547e-07;
0;0.029339423;0;3.863991e-06;0.86203361;0;0.39544615;0.78710747;0.62908268;0.49848858;
0.7567935;0;0.78031129;0.74156809;0;0;0;0;0.20640123;0.85743421;
0.011486634;0;0.00046556373;0.0043648942;0.01894884;0.87469482;0.47375977;0.67688221;0;0;
0.81112891;0.00087459933;0.0058351876;0.53418481;4.3511398e-07;0;0;9.4023835e-06;0;0.79213047;
0.75710905;0.88203508;9.2117836e-05;0.80643964;0;0.0002607303;0.79927862;0;0.5405798;0.72928697;
0;0.052113306;0.51754332;0.059759717;0;0.75649858;0;0.62082833;0;0.89517742;
0;3.0075898e-06;0.00011236275;0.74232382;0.48028672;0.67524368;0;0.048833404;7.0984046e-05;0.74568862;
1.3011235e-05;0.20751311;9.5671185e-06;0.77316117;0.0004331611;2.2836814e-06;0.8902837;0.018136373;0.14216162;0.00013529306;
0;0;0.00038690056;0.82646382;0.54637063;0.012859508;0.89287138;0.02680268;0.00077838951;0.62591147;
0.46782339;0;0.00048660027;0.77637732;0;1.1006714e-05;0;0.082232937;4.1103675e-08;1.6609069e-05;
0.85778189;0;0.42835242;0.75434655;0.55066949;0.39811623;0.77553838;0;0.7941938;0.00053768989;
0;0;0;0;0.70933747;0.7724418;0.50393182;0;0.043077987;0;
0;0.75255936;0.10737695;0.042968757;0;0.0090108318;0.035790484;0.81591636;0;0.69952244;
0;9.2738605e-07;0;0;0;0.78063273;0.86674559;0.84216118;0.0020940255;0.00073105423;
0;0.00049663743;0.7729032;0;0.019622955;0.7950691;0;0.78330392;0.73156267;0.026482314;
0.0070822733;0.81924522;0.0074796844;2.3843788e-05;0;0.83448648;1.364414e-05;1.9922406e-06;0;0.71996593;
0.031953238;0.60326153;0;0.77232873;1.3064084e-05;0.73918712;4.781502e-06;0.75746328;3.3874379e-08;0.07380823;
0;0.00011232602;0.76569217;0.75016785;0.75340581;0.010103011;1.643901e-07;0;0.36649394;0.0028618951;
0.021915138;1.3297975e-05;0.87406844;0;9.1636554e-07;0.20513518;8.9850058e-05;0.60086143;0;0.070338294;
0.82474172;0;0.55667323;0.7640928;0;0.00044325675;0.56962264;0.012831737;2.1432777e-05;0.78796238;
0;0.0003385676;0;0.88829273;0;3.5120342e-05;0.0024263018;0.77701271;0.70443213;0.3262302;
0;1.3564177e-05;4.7338792e-05;0.78048456;1.1847263e-05;0.48299906;5.4595656e-08;0.18556912;0.47602087;0;
0.86322331;0.0042546159;0.0010530722;0;2.878364e-07;0;1.9681743e-06;0.83824801;0.64001894;0.00055338768;
0.89169425;0.14845173;0.000815609;0.037511583;0.0010937318;0.66750801;0;2.8820285e-05;0.79165655;0;
0.51617843;0.71014947;0;0.026324753;0.58414263;0.21136484;9.5627593e-07;0.72042936;0;0.1304242;
0;0.84264082;0;0.00075283577;0;0.8422879;0.039769873;0.69494933;0;0.0020296832;
0.00072674348;0.70958424;0.0047817486;0.69818079;0.00047213183;0.070128776;0.66295654;0;0.87389743;0.17747355;
0.00049561477;0;0;0;4.7947806e-06;0.84823298;0.026892001;0.00051621115;0.83931935;0.40400425;
0.0013771128;0.0013853946;0.0033211759;1.0530673e-06;0;0.027427144;0.7671746;0;0.0022097051;0.82207453;
0;0.062803023;0.81665897;0.0042969096;0.17301658;0.81442982;0.0038959091;8.7951696e-05;0;0.84678227;
0;2.9975548e-05;0;0.77081698;0.51364291;0.67508221;0;0.0074996129;0.0004541894;0.7027753;
0.00070511969;0.62609214;2.1579523e-05;0.076812059;0.69289339;0;0.86611557;0.11162277;0.00070404279;0;
0;0;1.0703074e-05;0.84485137;0.043799654;0.0010448882;0.84779936;0.29363576;0.0018617096;0.0049490915;
0.82892334;0.030195629;0.033712573;0.79859155;0;0;0.7230227;0.77890438;3.4880604e-06;0.010635568;
0;0.76119798;0.0034862568;0.00030216051;3.5732202e-05;5.570741e-06;0.6726864;0;0.62514168;3.6693127e-06;
0;0.71486145;0.37787873;2.5934464e-06;0.72960991;0;0.67146325;0.72580916;0;0;
0.049558476;0;0.59212589;2.103375e-06;0.0033817503;2.812691e-06;0.00016932641;0;0.8365525;0;
0.7825048;0.59674996;0;0;0.83023304;0;0.82993686;2.9567536e-06;0.43887246;0;
0.00086961617;0.83566499;1.5951817e-07;0;7.7968725e-05;0.17956433;0;0.0029126438;0.81052744;0;
0.00179007;0.59077281;0.030773591;0.78944069;0.70318991;0;0.70406258;0.6329248;0;0;
0;0;0.47808474;0.82852775;0.0021537114;0;8.3533532e-06;0;0.0039307829;0.85964113;
0.73028046;0;0;0;0.44930515;0.68097514;0;0.0088888556;3.1845115e-08;0.0001489143;
0;0;1.6342278e-07;0.77383339;0.85821044;0.63618809;0.79407573;0.095482185;0.59327185;0.84659433;
0;0;0.0073099583;0.50245607;0.0011849928;0.0024947217;0;0.77621323;0;3.4421195e-05;
0.0019378506;0;0.0754961;0;0.68246305;6.4966321e-06;8.1057306e-07;0.8182165;0.12615748;6.3671428e-06;
0.73745275;0;0.8002708;0.76767707;9.238795e-08;0;0.025116561;0.001889219;0.01315814;4.7117584e-05;
0.59065711;5.6454805e-06;2.7717294e-07;0;0.81263685;8.934313e-06;0.00035299762;0.85774177;0;0;
0.82048774;0;0.80283457;0.022497678;5.6748179e-09;1.1082603e-05;0;0.0068440866;0.82029438;0;
0.0002534969;0.79615355;0;0.053012997;0.79979616;0.030139329;0.22285117;0.79416728;1.2572741e-06;0.00081000943;
0;0.87632638;0;1.7768503e-05;0;0.74671507;0.034025934;0.64099395;0;0.0088112485;
0.00029413513;0.71409243;7.4256229e-07;0.28659728;1.0429504e-07;0.78537875;8.5549701e-08;0.00013168069;0.37152454;0.73297048;
0.79402816;0;0;0;0.67576081;0.00070217141;0.0017225018;2.9868153e-07;0.77421111;0;
1.1069649e-05;0.79477954;0.32580483;1.495239e-07;0;0;0.0036233237;0.89166063;0;0;
0.82342386;0;0.65479565;0;0.048599273;0;0.84539723;0.0056678685;0.00034790541;0;
0.0083476575;0.84457618;0.00081085198;9.779667e-05;0.79125434;0;0.88353002;0.00020179192;0;0;
0.670708;0.00029980464;0.67925525;0.063215569;0.79036254;0;0.60260546;0;0.62388682;0;
6.0708197e-05;0.6809085;0.78507149;0.64143968;0.0029507603;0;0.00067520328;3.8129827e-05;0;0.022159629;
0.29378471;0;0.0019190123;0.82921404;3.4432122e-07;0;9.7550219e-06;0.07649374;0;0.0035256743;
0.82117164;2.2685176e-06;0.0021177982;0.59107399;0.0066991886;0.78798014;0.61960298;7.8961595e-05;0.60469568;9.2603295e-05;
0;0;0;0;0.84198529;0.24128656;0.68062127;0;0.079881862;0;
0.0032210879;0.85888356;0.073199578;0.079624906;0;6.866303e-07;0.64472014;0.67648578;0;0.020008737;
1.3414751e-06;4.7262021e-09;0;3.220182e-05;0;0.69293052;0.83455789;0.86434686;3.6285542e-06;0.081664056;
0;4.5941502e-05;0.76253235;0;0.046975676;0.8348335;0;0.28231466;0.77386034;0.0089963023;
0.0089836111;0.75588655;0;1.2915054e-07;0;0.86860889;0;0.00028268437;0;0.79286057;
0.36581191;0.70567667;0;0.0063014906;5.7308105e-05;0.64899397;0;0.56996495;0;0.0024687331;
0.0028621429;2.9387433e-05;0.8344;0.0086367643;0.47501543;0;0;0;0.00010763023;0.81411201;
0.023807932;0.00047236614;0.83364439;0;0.0017506385;0.77300346;7.3724601e-05;0.043620896;0;0.00019057264;
0.77910405;0;0.054307081;0.82039511;0;0.11470696;0.77498168;0.018012853;0.003607858;0.76996577;
0;0;0;0.83136702;0;1.1625136e-06;0;0.692496;0.0074630701;0.41772461;
0;0.74559301;4.9184138e-05;0.71184617;0;0.75137514;0;0.010853376;0.67649055;0;
0.83681178;0.005196284;0.0010511065;0;0;0;1.472129e-05;0.82282364;0.49329218;4.0691607e-06;
0.85755432;0.028606154;8.5485126e-06;0.00061819959;0.2150121;0;0.0025568441;0.8379752;1.1492635e-05;0;
6.2171486e-05;0.067847595;0;0.0076651145;0.82163304;1.256495e-05;0.0010744062;0.51255244;0.0052885087;0.80306357;
0.81586576;0.10586077;0.64857632;0.00015088165;0;0;0.051741559;0;0.64306849;0.80854392;
0.0048583108;0;0.001901974;0;0;0.81423175;0.81922519;1.1064709e-06;0;3.321387e-05;
0.63642824;0.73268116;0.00092669681;0.0012339326;0.00019604919;0.050598629;0;0.00012783101;0;0.77922499;
0.8416276;0.00014541106;0.7104165;0.49648207;0.50437385;0.82065523;0;0;0.0041644052;0.63885677;
6.7037753e-08;0.011199056;0;0.71342957;0;0;0.0047703963;1.8252798e-05;0.61019135;0.54938388;
0.48838553;9.9898652e-06;0;0.47390771;0.71822965;1.3499636e-05;2.3276078e-05;0;0.58514434;0.7652216;
0;0;0;0;0.064316206;2.3689159e-05;0.52010942;1.5248528e-05;0;0;
0.81334835;0;0.00056309428;0.86303985;0;0;0.75654817;0;0.77927333;0.00071842968;
0.030743193;0.00056488719;0.019035822;0.8366577;0.011509469;0;3.6076824e-07;0.00619525;0.0011458953;0.0026456099;
0.81575358;0.0069013233;0.0215632;0.42905217;0.024937853;0.86537552;0.0018268763;0;0.38552773;0.41659433;
0;0;0;0;0.76172072;0.55334944;0.61291933;0;0.066244572;0;
0.37601602;0.89556068;0.077430382;0.81255132;0;0;0.77523625;0.02010636;0.010267491;0.019624408;
0;3.134361e-05;0;0.03212953;0;0.66442347;0.72345173;0.8903681;0.039124481;0;
0;0;0.00013910135;0.8966828;0;0;0.77506381;0;0.69370908;0;
0.30241418;0;0.85637856;0.011938576;0;0;0.0029155656;0.83349574;0.0016875854;0.0013793382;
0.8144837;0.00021363734;0.8501361;5.2259122e-05;0;0;0.81339794;1.6659953e-06;0.40299332;0.16910084;
0.17110656;0;0.61344177;0;0.54171014;0;1.2130331e-06;0.81564099;0.81673557;0.18217534;
0.28651404;0;0.0064153029;0;2.9692334e-05;0.51315695;0.76777941;0.006107267;0.67005569;0.84528893;
0;0;0.0002915783;0.36191121;0.0068227304;0.00020290918;0;0.77127153;0;0;
0.02738223;0;0.54060358;0;0.70987535;0.00011924867;0;0.80531663;0.044187773;6.8565227e-05;
0.055227198;0;0.75455737;0.74566936;0;0;0.001202642;0;0.05653245;0.0037956154;
0.67522293;2.1517317e-05;0;0;0.7686044;0;0.00077312486;0.86964095;0;0;
0.60032398;0;0.79437155;0.0011016452;0.034932293;0;0;0;0.0010319341;0.89535356;
0;0;0.77709079;0;0.66754055;0;0.29534429;0;0.85038424;0.056042098;
1.1974178e-07;0;0.0026570209;0.77246445;0.073140487;0.017897852;0.85560209;0.00039565167;0.83576864;1.3718989e-05;
0;0;0.82709241;1.3057182e-07;0.0060014715;0.38188469;0.59404284;0;0.094573855;0;
0.81227261;0;0.2088199;0.74910539;0.87410355;0.00027032651;0.004950955;0;0.48769054;0;
0;0.0021404892;0.047467526;6.5548907e-06;0.0070617157;0.838269;0.00011553628;0;0;0.01579657;
2.3073439e-07;0.00097180146;0.80924696;0.00086483301;0.0032674826;0.51000255;0.00083061832;0.83098811;0.01432097;0.0031815001;
0.75894052;0.0093607176;0;0;0;0;0.5734669;0.71989852;0.66948384;0;
0.060957052;0;4.959236e-05;0.88504463;0.61643153;0.34635514;0;0;0.75850075;0.056411415;
0;0.0012572253;0;0.00088157051;0;6.8173809e-05;0;0.70536417;0.80115223;0.75094509;
0;0.028053563;0;0.00022265295;0.7908774;0;0.0046310155;0.79272091;0;0.013009224;
0.77767408;0.1369088;0.054097686;0.79555428;0;9.6915358e-08;0;0.87528974;0;1.7901689e-06;
0;0.78321373;0.34621885;0.69635952;0;3.7980786e-05;4.7411952e-05;0.61934239;4.8102333e-07;0.41542497;
0;0.084294163;2.0127342e-07;1.1088662e-06;0.58771408;0.73359495;0.72788465;0;0;0;
0.41522002;0.0011429564;0.0036914726;0;0.81836921;0;0;0.5920372;0.70469749;0.05249868;
0.6658113;0.80922776;0;0;0;0.67386669;2.813516e-08;0.03000609;0;0.68752587;
0;0;0.026601348;3.4608291e-08;0.64540672;0;0.68084323;3.4527569e-05;0;0.78967005;
0.057170197;8.0955055e-05;0.007294164;0;0.73065329;0.72705859;0;0;6.1100174e-05;0;
0.0071390793;0.80860108;0.069486052;2.4791936e-05;0.0018933327;0;0.8546946;0;0.72740382;0.61157167;
0;2.8743498e-06;0.080502808;0;0.66500831;0.22884461;0.73939615;0.00030302152;0.70106173;0.84757686;
0;0;0;0.28925776;0.011810826;3.0680189e-06;0;0.77413487;0;1.6552126e-06;
0.03401779;0;0.10883288;3.2652449e-07;0.67852062;8.2215469e-05;0;0.7966572;0.081712678;0.00038075881;
0.35634792;0;0.77740836;0.75455731;0;0;0.00024079718;6.0701154e-06;0.189714;0.00038089196;
0.33726931;9.9503515e-05;0;0;0.76634836;0;0.0066442285;0.84391487;0;0;
0.74772143;0;0.73733664;5.6491231e-08;0.035238888;0;0;0;5.0376409e-05;0.89154798;
0;0;0.77605885;0;0.66998321;0;0.0085497517;0;0.84728652;0.043620761;
4.0398467e-09;0;0.002656348;0.77679133;0.014316937;0.014529658;0.84504926;1.3658428e-05;0.82257533;3.9055281e-05;
0;0;0.82761073;3.1618427e-08;0.0063100718;0.54519063;0.029673904;0;0.73928654;0;
0.20525821;0;0;0.77360868;0.80168396;0.42288452;0.034577705;0;0.00035985638;0;
7.7599485e-05;0.71728802;0.071933635;0;0.0059960387;0.83321881;0;0;0;0.042547975;
0;0.00026667892;0.81477123;7.3433566e-06;0.0012386902;0.5492121;3.1767893e-06;0.79518878;0.39879245;0.54813814;
0.32297832;0.00029258375;3.1719981e-07;0;0.00014035348;0;0.75220066;0.41488191;0.29029971;0;
0.020280384;0;0;0.88590646;0.84776789;0.0033374347;0;0;0.6608327;0.0090328744;
0.016832476;0.1166041;0;0.6459772;0;8.1918615e-06;0;0.8225947;0.71828365;0.00023076622;
0;0.026304116;0;0.0013193798;0.79299223;0;0.0011649221;0.80626178;0;0.027096331;
0.78419185;0.058935378;0.019655429;0.78956842;0;1.9359008e-07;0;0.87298739;0;1.6508125e-07;
0;0.75448853;0.40052405;0.65676445;0;3.8941821e-06;0.00024467849;0.63241583;1.0808701e-07;0.58694828;
0;0.0045539443;6.3598122e-07;0;0.6364007;0.66415071;0.7269522;0;0;0;
0.24537751;0.0016057614;0.0067775669;0;0.82613701;0;0;0.67697555;0;0.039854668;
0;0.00023646103;0.78484803;0;0.0037577981;0.80586064;0;0.029512964;0.7753886;0.051420387;
0.0021372617;0.77250355;0;0;0;0.87501574;0;7.7504801e-08;0;0.75541139;
0.21538833;0.40512908;0;6.7400833e-05;0.0001373836;0.72585976;0;0.67673504;0;0.0096029341;
      };
     };
     float_Data @[11] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_78";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="view_panel_wd";
	value 6 0=0.2528925538063049;
	val_type_fixed=0;
       };
      };
      name="Output_act_m";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=1;
      cell_geom{ 3;4;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [2] ;;      };
      width=153;
      ar {
       name="ar";
      [3 4 170] 0.96308982;0.0003200887;0.002857114;0.91531336;0.93623853;0.96882224;0.45638469;0.001079053;0.00016081792;0.0047297473;
0.94478381;0.97080082;0.96619284;0.89655179;0.91709757;0.91317576;0.89270294;0.9552018;0.090952396;2.4939138e-05;
9.4760275e-05;1.6240152e-05;0.84263533;0.95604098;0.95584118;0.80316705;0.5684976;0.90721625;0.92705798;0.95002258;
0.70679212;0.00028712934;0.82278186;2.6879319e-05;0.88714302;0.94537032;0.90616965;0.22106336;0.0024485993;0.80804038;
0.89149541;0.92656869;0.76352948;0.0022008463;0.88999891;0.43392399;0.91606808;0.95224977;0.9232924;1.6046368e-08;
2.6034435e-08;4.5072206e-06;0.84135646;0.95787942;0.024226697;0.81270367;0.86638647;0.89641476;0.73317713;0.95453238;
0.94742298;0.01277303;0.88362259;0.85731143;0.94020194;0.94370252;0.71863133;0.012003822;0;2.3569068e-08;
0.85587955;0.94693685;0.94631261;0.92259896;0.90714037;0.8793543;0.8728655;0.9046126;0.75903863;0.00029205164;
6.8375681e-05;0;1.3504523e-06;0.86113453;0.88012558;0;2.8385404e-05;0.0038193474;0.89946467;0.94951898;
0.036662247;0.90702081;0.04427857;0.90574634;0.8728382;0.95758605;0.84936541;0.82908964;1.2746781e-05;0.096136346;
0.79779762;0.93211216;0.88359463;7.558046e-06;0.93078411;0.82508248;0.7336638;0.92529678;0.92294902;0.95296568;
0.94863164;0.92828697;0.00015864044;0.078993559;0.87152535;0.00084331178;0.91967547;0;6.844002e-10;0.00024440748;
0.89774793;0;0.82008934;0.54294246;0.89935696;0.93821973;0.0012434148;0.93324059;0.0080805179;0.75256419;
0.011782609;0.92403716;0.62097722;0.80464917;0.00047706332;0.43969184;0.73523426;0.90710849;0.85149914;4.7313306e-06;
0.91610789;0.62998849;0.7694701;0.8991648;0.042238582;0.9214533;0.93310952;0.034391243;0.55232936;0;
0.46752164;0.8769483;0.85873795;3.4850615e-05;0.78625435;0.76859832;0.88526469;3.8741013e-07;1.2183968e-05;0.013799718;
0.6968047;0.94913429;0.091645092;0.80753815;0.86211967;0.8874228;0.21134615;0.93536651;0.92039996;0.012672915;
0.95008951;0.42169163;0.89450812;0.88457286;0.58368057;0.87743765;0;1.3169793e-07;0.0061144605;0.88963127;
0.89485431;0.94879788;0.94814926;0.92727262;2.9074685e-05;0.052101359;0.84769416;0.00085893273;0.88590014;0;
6.7321866e-07;1.3012634e-05;0.010054969;0;0.0013370123;0.77254856;0.88917124;0.8995145;0.011414257;0.87607187;
0.00019404509;0.70720398;0.86651123;0.92165494;0.83153397;0.94133991;0.94581151;0.9128288;0.0064229756;0.61260527;
0.89740211;0;0.85618365;5.8539325e-05;0.00018944667;5.7999227e-07;0.94411927;0.92467535;0.94014591;0.79663432;
0.007075706;0.79087526;6.9831607e-05;0.55072123;3.2023159e-05;2.2297132e-07;0.00061663421;0.22634274;9.8928402e-05;0.0004465112;
0.90609902;0.73062813;0.00042341335;0.034742061;0.69040322;0.79482067;0.89664221;0.87782568;0.3276782;0.76635158;
0.87251949;0.0024379035;0.0008456136;0.80474448;0.86587894;0.94584227;0.83444649;0;0.00016333944;0.02307318;
0.77706283;0.90903693;0.85204846;0;0.79570055;0.0064746663;0.85533404;0.9195112;0.73266214;0.00040686975;
0.00012360746;0.0034068613;0.88660854;0.92985165;4.8848765e-08;0.89556015;6.0142724e-05;0.80383265;0.00022737702;9.4382193e-07;
0.79301816;0.0001478373;0.89879584;0.82285589;0.87111211;0.85205162;0.096540533;0.93676084;0.95911604;0.83665442;
0.72581095;0.00041492685;0.8757596;0.02633018;0.85871071;0.00021130219;0.00025415572;0;0.89841026;0.94067991;
0.94276911;0.0038671799;0.82672048;0.0048884233;0.0096271709;0.85733581;5.7345351e-05;1.3677514e-05;2.8856164e-06;0.00031636062;
0.89234316;0.026691463;0.91199994;0.003934009;0.78371668;0.87459505;1.7541851e-06;0.8948403;0.032978438;0.81625712;
0.012667529;0.01034774;0.62690306;0.099192545;6.9068556e-05;0.74972731;0.00011501728;0.82453114;0.039219443;0;
0.88015932;0.9053759;0.87842768;0.83307517;6.2696396e-05;0.88754594;0.88182336;8.5378324e-06;0.05996865;0;
0.13207988;0.72277129;0.82732403;0.012267835;0.87444204;0.8442024;0.84717125;1.3526456e-05;6.593551e-06;0.0082687316;
0.50122315;0.93394017;0.046969961;0.62789398;0.7720865;0.88268048;0.0056528426;0.90595746;0.79763937;0.87794065;
0.93903321;0.0019747519;0.90443373;0.011446156;0.66975641;0.85411769;0;2.6585534e-05;0.00011109316;0.025858801;
0.93495816;5.3132977e-11;0.87271869;0.062726408;0.00021215336;0.91640323;0.00023515981;0.00027730135;0;0.20984329;
0.86820555;0.92587888;0.9280479;0.73685658;0.91236174;0.030022448;0;0.88728756;0.00063342333;0.0036503365;
0.084020741;0.66156852;8.1151586e-05;0.8680746;0.89878452;0.54201353;0.94754374;0.8782829;0.0013004838;0.76075202;
0.087105215;7.3819203e-05;1.5088136e-07;9.0607655e-10;0.75293082;0;0.61458105;0.93872058;0.92353153;0.84191996;
0.00085790636;1.7551592e-05;0.78726608;0.002525727;0.68944037;1.2018511e-06;0.00051082118;0.00024512148;0.00010738039;1.7327661e-06;
0.87542498;0.83355993;0.00010142363;0.00062487234;0.57064003;0.81042963;0.86611938;0.79149109;0.25576329;0.01671668;
0.71220231;0.00024779263;0.00028960159;0.89473617;0.85599571;0.93401933;0.85061383;0;8.1135273e-05;0.0058139404;
0.017788567;0.72150844;0.0052883457;0;0.00011800004;0.14576621;0.90127617;0.91030318;0.85473901;0.0060386304;
0.013459024;0.66859692;0.84793216;0.88122255;1.6982049e-09;0.87492472;5.8598503e-06;0.76658505;0.0025705753;3.3660733e-08;
0.70626676;0.0009146611;0.87468749;0.70533407;0.8468734;0.70935035;0;0.018170573;0.9244132;0.40258104;
0.36786059;1.2380366e-05;0.86248082;2.4048779e-05;0.86983281;0.038226757;0.61790097;0;0.87281716;0.94159234;
0.87231445;0.013359586;0.50895065;0.0026584864;0.00040505818;0.74334252;0.00046531513;0.00037759013;9.2145565e-06;0.00046460883;
0.83772022;0.057090733;0.94094896;0.0028936199;0.88747579;0.83468586;0.02030745;0.6559127;1.7973609e-05;2.7882394e-05;
0.072876915;0.0045056934;0.13423418;0.6644783;4.0811057e-05;0.78260344;1.4046443e-05;0.57903534;0.071148649;1.8155883e-06;
0.87155539;0.89227813;0.78359193;0.04396189;0.14356449;0;0.00081827864;0.22614969;0.89224887;0.89392829;
0.78970164;0.14664094;0.00025578926;0.35155728;0.75279331;0.8933351;0.015947279;0.70800376;0.86855853;0.85221165;
0.8273018;1.1399267e-08;0.00089837564;0.81921875;0.00012967311;5.8421454e-05;0.00125407;0.8048467;0.00036024587;0.87291253;
0.93842268;0.30838162;0.012541613;0.00061208982;0.85645568;1.3182292e-05;0.86309236;0.056448508;0.15166822;0;
0.70244598;0;0.00021092145;0.0023339344;0.76931936;0.86773509;0.36590046;0.048795331;0.0010188307;0.82156396;
0.7974475;0.8886354;0.74319673;0.18060008;0.77090275;0.81377321;3.1970967e-07;0.00063444604;0.017610207;9.8688375e-05;
0.53855395;0.037165925;0.86491704;0.91584808;0;8.8234651e-07;0.89102542;0.60075182;3.2377252e-06;0.24063036;
0.80473846;0.044239663;0.76796615;0.88585454;0.00063588284;0;0.85402054;0;0.76448178;2.9280476e-05;
0.00013289126;0.38392022;1.0556057e-06;0.28075927;0;0.64255768;0.78812224;0.9188962;0.88618338;0.0082562855;
0.30579233;0.0068528005;0;0.83527672;0.00010626398;0.25003663;0.48762769;0.86328971;0.0001136147;0.89140064;
0.87049311;0.81805432;0.93297911;0.72818619;0.0066208374;0.05586857;0.0047029164;0.00025407001;0;2.6949166e-08;
0.69912529;0;0.80426133;0.93850994;0.034056854;0.020231977;0.71879762;0.70211512;0.35041368;0.45866141;
0.00098890241;0.00037551811;0.00050751062;0.0019162474;0.14902556;0.89289206;0.94508845;0.29940152;0.097531632;0.00032875212;
0.30104166;0.5006128;0.0016266995;0.00031962764;0.66897547;4.2055754e-06;0.7221871;0.0009989487;6.5993277e-06;0.77750605;
0.0029590395;0.89131463;0.023832964;0.50307715;0.014275514;0.88306296;5.0991493e-05;0.81328106;0.78207517;0.93860906;
0.26994711;0.052616771;0.68402904;0.51528347;0.33769307;0.19722283;0.017541189;0.00045788399;0.005258814;0.0019502385;
0.059385449;0.74582285;0.93688774;0.010531206;0.0020537034;0.00045082811;0.58290803;0.39462292;0.74288875;0.10083531;
0.16455708;0.0069246236;0.72521257;0.00044354482;0.00032005651;0.66830146;0.60854936;0.87162268;0.63616633;0.0042825174;
0.00021069133;0.74448228;0.018879272;0.023450773;9.6898948e-05;1.0684598e-06;0.0086311195;0.071809873;0.91268736;0.0019939058;
0.67027068;0.78219581;0.27846649;0.0054275836;0.87302929;0.20563866;7.7352728e-05;0.86385077;0.00033935133;0.63251185;
2.6099865e-06;0.00020593035;0.58070213;0.0001834642;0.83493644;0.029983558;0.80546325;0.85619211;0;1.6389344e-05;
0.87960875;0.49020016;0.00057718408;0.013517402;0.80360556;0.025512794;0.78761464;0.79902202;0.05242312;0;
0.00056065293;0;0.00042504343;8.5592589e-10;0.8133027;0.51968449;0.0031292469;0.84444052;1.2964783e-11;0.80174482;
0.72511232;0.88576728;0.78605896;0.37381014;0.036738563;1.4410163e-05;0;0.64334446;0.00033169737;0.21015643;
0.73474312;0.80154616;0.00038026203;0.83141667;0.9054383;0.00045039685;0.92621636;0.63698804;0.68711668;0.85459512;
0.00095245632;0.00096654019;0;1.9989125e-07;0.0042912229;0.0066189361;0.26117802;3.5842291e-05;2.9086877e-05;0.05445705;
0.85051233;0.83784497;0.73905933;0.00021034319;0.024197951;0.00013476472;0.83156508;0.82941967;0.50979632;0.00023433202;
1.5328977e-05;0.73628175;6.9307527e-05;0.83906698;0.083378173;0.57254094;0.0034713699;0.67970639;0.0020915563;0.91543019;
0;0.1426003;0.89376211;0.10225546;0.034837238;0;0.82902259;0.0026432148;0.80573094;0.03592509;
0.71127272;0;0.66915512;1.3602273e-08;0.77589059;1.1858749e-06;0.0012994288;0.44033489;0.0075583067;0.80245006;
0.0065352456;0.76903456;0.00076621701;0.82153296;0.085927054;0.83558774;3.4339992e-06;5.4726534e-08;0;0.066392012;
0.13617869;0.63210851;0.85048687;0.81556875;6.5207016e-05;0.26796889;0.8391341;0.79641885;0.91567588;0.57717156;
0.00018112156;0.031692684;0.013299243;0.00015979349;8.3033767e-11;0.00046063674;0.65413791;4.6813616e-06;8.45261e-06;5.2613205e-11;
0.00030069423;5.630236e-05;0.3108055;0.7991972;0.66002595;0.85855418;0.0067199655;0.80910391;0.0012733523;0.60938382;
0.061337568;0.85001701;2.0388095e-06;0.00083211018;0;0.054659776;0.44404387;0.62850761;0.86527503;0.72220922;
0.00028363231;0.0063687097;0.83824533;0.02232023;0.79476339;0.81764036;0.0069070989;0.83026171;0.02475369;0.0097377533;
0.0053680977;0.37246129;0.001685526;0.0044263997;0.01766968;5.7494503e-06;0.040765375;1.2243643e-06;0.81123841;0.0025498287;
0.16054206;0.83302891;2.7550039e-05;0.024899369;0.81826466;0.8346948;0.040196255;0.82979828;1.0363946e-05;0.0042255167;
0;0.054190457;0.62280589;0.53608668;0.88013744;0.62506247;0.00015261373;0.0027024504;0.0003397323;0.80635995;
0.90074503;0.052282389;0.70345134;0.0012182884;0.57992208;0.44474384;2.9973547e-05;0.003799438;0.1034874;0;
0.0023487825;0.038956366;6.3976149e-06;0.46765214;0.74907827;0.002161945;0.73598742;8.1636545e-06;0.77084309;0.023935257;
0.90674746;0.0083066346;0.25678456;0.62512571;0.00050239277;0.6900211;0.00052709359;0.0054017543;0.024915904;0.00020143663;
0.69002873;3.2153712e-06;0.70725638;0.88219351;0;7.6642417e-09;0.77957022;0.35426036;4.5357033e-06;0;
0.83459592;0.54398626;0.52760285;0.70250869;0.00082679698;0;0.015547719;0;0.0033239722;5.4032833e-05;
0.0059238151;0.63968945;0.23449393;0.88909793;0.78628039;0.87477678;0.00043416629;0.010688192;0.6811226;0.68419367;
0.048935674;0.042039178;0;0.026722863;0.00039412809;0.0043137101;0.23888539;0.0056175091;0.88452041;0.82178706;
0.73692524;2.8556464e-05;7.1291724e-05;0.82739162;0.0003296611;0.83346039;0.0036404459;0.54767692;0.024151383;0.78664321;
0.00026631649;0.14209332;0.049758729;0.0018459932;0.00025322349;0.025741436;0.83938271;0.74095321;0.69598442;0.0004681978;
0.016372126;6.4632699e-10;0.86562806;0.67880476;0.044089343;0.0010518201;0.86464977;0.048641548;0.23100579;0.0092599588;
0.4545213;0.82788682;0.0070132972;4.9198024e-06;5.6774306e-06;0.88720608;0;0.11344585;0.85014927;0.027471242;
0.031582568;0.00048128667;0.84952903;0.0015564369;0.7709772;0.00071318634;0.69491893;0;0;0.79473174;
1.1193953e-06;0;0.86319005;4.8029415e-06;0.071495838;0.74945444;0.54124492;1.6519824e-08;0.76793355;0.00060895027;
0.00022320956;1.8921942e-06;0;0.024463667;0.67901409;0.78981531;0.55272722;0.83307356;0.0014733553;0.75687206;
0;0.0054435679;0.75635463;0.038583845;4.490764e-11;0.047478639;0.83394688;0.74287009;0.52138275;8.137148e-05;
9.8248368e-11;3.8184353e-05;0.59763646;0.68886495;0.72634119;1.7579669e-05;0.00028154301;0.23861614;0.56336421;0.78182811;
0.026816027;6.8159956e-08;0.0054941773;4.2930307e-05;0.83803582;0.86118197;0.58671868;0.0034181117;0.14508715;0.71319383;
0;0.80414814;0.51849741;0.00065054721;0.0039305165;0.00064180198;0.0053969733;0.92159444;0;2.1429623e-06;
0.009899199;0.76878005;1.2155263e-07;0.47264722;0.77200401;0.0010256029;0.8042227;0.79288608;0.080218665;0;
0;0.75395083;0.00014525389;7.0936483e-07;0.83254021;1.8589541e-05;0.011495883;0.69076663;0.52032471;6.704581e-05;
0.7439031;0.0070131277;0.61218554;0.27300096;0;0.055203594;0.066169217;0.86950624;0.08861348;0.023656333;
0.6924805;0.75456631;5.061313e-06;0.00075896305;0.00107734;0.87087923;3.1318175e-06;0.67239457;0.68915582;0.0013278758;
0.4632799;0.11461948;6.0213551e-07;0.020200245;0.007448859;0.69785166;0.0042957533;1.1619782e-05;0.00042867544;0.57588428;
0.62923902;0.31905213;0.0045305742;0.00019872817;0.093530335;0.70282263;0.87880951;0.029710269;0.071622789;0.00041318726;
0.0008886935;0.63492322;0;0.55255711;0.0067852726;0.26774415;0.34627235;0.76641452;0.0002070287;0.89069444;
4.9329276e-07;0.047517639;0.88400847;0.62435979;0.067472585;0.027250592;0.85179263;0.048413817;0.18619236;0.032565206;
0.051522546;0;0.59476143;0.004474014;0.35709932;0.079603679;0.39625779;0.20677552;0.034276929;0.0010172578;
0.0053460803;6.6088651e-05;0.88759089;0.75014734;0.7105335;0.0037056126;0.76999235;0.10469493;0;0.5692668;
0.039585277;0.0079689939;0.031289291;0.01298142;0.091849223;0.91205215;0;0.0071584526;0.00044559652;0.7388615;
0;0.0090458207;0.15671113;0.0038674879;0.84455156;0.89484316;0.59430343;0;0.67053622;0.0041897851;
0.049878906;0.033596475;0.10736807;0.65606791;0.043579847;6.1010583e-06;0.03680104;0.00049045781;0.88772339;0.80180562;
0.26353696;0.24340735;0.36230561;0.40253705;0;0.052437559;0.22375841;0.12010787;0.26776889;0.078047208;
0.019547334;0.90306705;0;4.1932621e-05;0.00042249297;0.510068;0;3.5142077e-06;0.11976099;0.6666224;
0.77532709;0.92277062;0.097715572;4.4130974e-07;0.053046808;0.44090882;0.0009592821;0.19683145;0.52807826;0.044003945;
0.083710238;4.176937e-05;0.20636234;0.0010406397;0.90687096;0.19743401;0.47495005;0.047137193;0.52347559;0.24720453;
0;0.25716975;0.094511032;0.093816385;0.075743504;0.094436564;0.39010313;0.90940094;0;0.00029757968;
0.0005982786;0.46151903;0;0.00010558914;0.12859711;0.53138912;0.70511711;0.92358339;0.21595141;1.0697219e-06;
0.062087305;0;0.61345083;7.8482472e-06;0.0013311068;0.00016321008;4.5559886e-05;0.67172104;1.6680099e-08;0.47155324;
0.80189097;0.73574549;0.65469062;0.78225267;0.42118716;3.4738451e-07;0;0.68679744;0.0030915798;0.0053805364;
0.71645617;0.36484948;1.7862765e-05;0.0052232221;0.65677303;0.77934605;0.69548064;0.021416917;1.1685166e-07;0.0125775;
0.0017099605;0.00017928463;1.0319034e-06;0.82536179;0.75838876;0;0;0.084395342;0.0014402096;0;
0.83041072;0.39587447;0.068158299;0.69789362;0.0055777882;0;0.71306491;0.31089148;0.018762313;0.00028140307;
0;0.0024307098;0.69964492;0.83703887;0.3885178;0.70259547;1.063765e-05;0.72472167;0;0.016228903;
0.38789222;0.78725225;0.022990171;0.00073613267;0.38965401;0.051038861;0.60141122;0.41434404;2.6697313e-07;0.54230058;
0.034817014;0.043207347;0.026551867;0;0.43501192;0.013893174;0.16366455;0.0213707;0.05544284;0.82151437;
0.041392453;0.6523205;0.0088745663;0.45444611;0.026057377;0.80588025;0.51542091;0.00059536513;0;0.72165513;
0.31770906;0.0056819846;0.8140291;0.0083236648;6.9865212e-07;0.0058618579;0.00051349483;0.024865478;0.00040561208;0.85733479;
0;0.15795943;0.43909836;0.0038746365;0.062490832;0.86028755;0.69208765;5.9503321e-08;0.03916721;0.029575178;
0.0025098645;0.28623602;0.39005262;0.073184706;0.46320307;4.5891852e-07;0.32708412;1.6674412e-06;0.90267396;0.12256197;
0.12742689;0.0017431371;0.023521557;0.57637972;1.3795382e-05;0.77137142;0.7001757;0.0097654145;0.016499419;0.00025622232;
0.0051951986;0.9161976;4.7263951e-05;0.20069695;0.86222136;0.067211293;0.57610118;0.7128275;0.8728931;0.0041374019;
0.0034591774;0.0010768605;0.017044067;0.0022095549;0.52321482;0.90808165;0.78398591;0.18690415;0.011464147;0.00011406548;
0.024770649;0.010370746;0.3391313;9.982783e-06;0.0075311805;0.0032561561;0.40996498;0.78312552;0.90163481;1.1663404e-06;
0.69568759;0.0007283038;0.14234427;0.082794443;0;0;0.16146789;0.00014620152;0.83661073;0.058171146;
0.030916946;0.03233926;0;0.65329063;0.00039063944;0.0058843424;7.8331177e-05;0.7663188;0.68958771;4.7029207e-05;
0;0.047081735;0.0020708682;4.9621315e-07;0.82164031;0.49866468;0.05947236;0.59919971;0.066248707;0;
0.56582743;0.23051867;0.6828779;0.64742893;0;0.00026667592;0.22722882;0.86161768;0.2570869;1.4773818e-06;
0.3585695;0.00061808788;4.0197745e-05;0.012223152;0.024219206;0.72165549;0.025069391;0.019641502;0.62513131;0.60989761;
0.76729268;0.033946272;3.1690473e-07;0.01299803;0.010144294;0.27392763;0.025740981;0.0074008307;0.0016355501;0.60060161;
0.40158746;0.069745637;0.041504081;4.1526589e-05;0.17344099;0.023728793;0.89821035;0.32320631;0.42425701;0.0032921175;
0.47632813;0.56866091;0;0.13596919;0.076175556;0.098988019;0.1104067;0.016227517;0.15971491;0.90897149;
0;2.9782466e-05;0.002897433;0.75696844;5.1001823e-08;0.74123877;0.78426057;0.00039905543;0.059510149;0.79296595;
0.0034551439;0.018391337;0.070419073;0.072234929;0.0053772489;0.38373962;0.36852127;0.082578994;0.076591261;6.788929e-05;
0.17211403;0.001900885;0.90223509;0.31189233;0.030540217;0.0009281931;0.0022410965;0.24308927;0;0.55795538;
0.0062015159;0.45398521;0.14680609;0.77526885;0.0065268148;0.89531898;2.5470564e-07;0.00093134586;0.00074806402;0.64062732;
0;4.9080536e-05;0.019958334;0.057523541;0.77705783;0.90986168;0.52849424;2.9601924e-06;0;0.034264356;
0.0060006622;8.5608735e-05;0.8336001;0.58207619;0.052493576;0.54174882;0.0029485847;0;0.53165805;0.18719877;
0.65576124;0.001600706;0;0.040359914;0.077386938;0.86144114;0.032627605;0.056733854;0.00048602611;0.83615959;
6.7236811e-10;0.32242963;0.50510651;0.69251865;0.52844959;0;0.00015206156;0;0.0045899558;0.56355679;
1.0056525e-05;0.76789039;0.058042593;1.8045763e-05;0.16394842;0;0.29376298;0.30941957;0.25133079;0.0070941676;
0.0022030636;0.7778759;0.0053910925;0.28400654;0.0079171062;0.75419778;0.58587241;0.011620786;0.11558858;0.002919114;
0;0.65478784;0.0078467065;0.037884254;0.70520371;0.18352696;0.17624885;0.76153874;0.00068950385;0.035970245;
0.0020993804;0.8473196;1.0014055e-06;0.24171633;0.12812263;0.051468812;0.020287517;0.85760105;0.67822468;2.9361594e-05;
0;0.017098093;0.0054043792;0.001062823;0.8519823;0.67421937;0.5838061;0.20625754;0.0024671908;0;
0.24545497;0.016894441;0.00099218485;0.54678267;0;0.44432169;0.80152458;0.86106569;0.55814344;1.8742088e-05;
0.0070240726;1.1836798e-07;5.7097694e-08;0.00076741289;0.42205358;0.00045000826;0.00022289495;0.0019277319;0.71275383;0.816432;
0.72502589;0.00074172381;8.6097162e-07;0.0020618287;0.023045361;0.72729731;0.00061671453;0.90277839;0.77559525;0.55784291;
0.0031783762;2.3030428e-07;0.1983805;0.00047556782;0.3546716;0;0.00044814975;0.00027436524;0.044283714;0.72198975;
0.90353096;1.4968697e-05;0.49499133;8.2743092e-05;0.44876158;0.0065132594;0;0;0.44113874;0.043852676;
0.58009785;0.36528262;0.040083207;0.57895517;1.4408091e-06;0.75765055;0.034945611;0.00015926576;0.00036820944;0.00037092029;
0.67115688;0.00040600938;0.039213151;0;0.43819904;0.070296869;0.14815266;4.1689611e-05;0.049013007;0.82699531;
0.35665059;0.49451956;0.00097506447;0.13471168;0.034436654;0.59208703;3.5012495e-06;0.013878738;0;0.27618647;
0.23883198;0.38027912;0.84150922;0.15600605;4.055824e-05;0.14367788;0.003574338;0.0034678222;0.00020037766;0.85528439;
9.7673706e-07;0.34200725;0.050095022;0.27582824;0.10334557;0.8343671;0.34406325;3.676186e-06;0.012370648;0.9011094;
0.75649744;0.41037172;0.0025899499;0;0.33693165;0.00023421439;0.32396901;0;0.00047400338;0.0007434953;
0.070588827;0.49502486;0.8980298;0;0.076350674;7.7911418e-06;0.58991146;0.0035037803;0;0;
0.45358825;0.45510831;0.79895079;0.32121018;0.7751556;0.0064024874;0;0.037389416;0.3756814;3.8787781e-05;
0.0004244741;0;0.76704872;3.3895049e-07;0;0.010755553;0.0097618252;0.0014352229;0.84520262;0.58940113;
0.44627857;0.33596697;0.048601888;0;0.25462878;0.020849913;0.0051921941;0.019374495;0;0.66724992;
0.43405059;0.87052941;0.51196802;3.6615356e-06;0.39234138;4.7559988e-05;1.1488368e-09;0.0085389437;0.733832;0.082086004;
0.0026873972;0;0.67522061;0.53085637;0.67087168;0.063285343;5.7102316e-06;0.13616453;0.11754499;0.003385474;
0.014692928;0.01258141;0.0059064636;0.17996983;0.31887284;0.047154203;0.25669137;6.0293411e-07;0.39244592;8.1034334e-05;
0.88925683;0.30126524;0.50377578;0.0053481357;0.4254306;0.53055227;0;0.067176998;0.19073726;0.018291824;
0.06058649;0.00015772364;0.082518816;0.9052065;0;0.018061664;0.84526324;0.39476919;0.35144904;0.3149744;
0.84406686;0.022988614;0.016394943;2.4992376e-05;0.0099619199;0.0067843911;0.0093653025;0;0.088056892;0.41215187;
0.20671704;1.6748161e-05;0.012144919;0.8192693;0.17284028;0.41303456;0.045221798;0.36167571;0.086027801;0.56200588;
1.8837994e-10;0.0003431348;0;0.19861068;0.044066917;0.38223088;0.83219069;0.3544805;0.00043790025;0.197028;
0.77425778;0.00018032576;0.63365287;0.41783682;0.0018273916;0.74604601;8.4554275e-09;0.0011940384;4.9675377e-06;0.068185136;
5.1076255e-05;0.6068604;0.0613297;0;0.33935025;0.02786717;0.18117772;0.00078011578;0.10694049;0.83076233;
0.50079715;0.34057537;0.00092882436;0.076776959;0.0048707789;0.66754383;0.0012642063;0.0097498689;0;0.50382793;
0.4341718;0.085413665;0.82946604;0.0037681744;0.00041736959;0.090233207;0.034949157;0.046598565;0.0055626016;0.7779969;
0;0.028754631;0.26634419;0.092470102;0.038206358;0.83839786;0.66432226;0.001091314;0.0065848245;0.90061653;
0.72934067;0.28410026;0.0097307209;0;0.25322512;0.00029103781;0.31504905;0;0.0022262302;0.0019480132;
0.062796742;0.49628776;0.88138169;0;0.099279858;4.9872593e-05;0.69868785;0.0035576611;0;0;
0.33017284;0.53908986;0.083156578;0.30242291;6.9423377e-06;0.69423354;0.00068153162;0.77398181;0.58128297;0.011573147;
0.0013916651;0.00063741842;0.077244639;0.25399321;0;0.015065626;0.0077483226;5.0143131e-05;0.8439616;0.52235645;
0.28794369;0.39480266;0.075413764;0;0.37082872;0.013636785;0.58131868;0.052100636;0;0.000870116;
0.39858603;0.85189927;0.45065847;2.0930891e-06;0.058375668;1.336718e-05;4.2675047e-08;0.55796289;0.64814138;0.003136429;
0.00047804229;0;0.19265963;2.330182e-07;0.0002541843;0.64968657;0.00016508874;0.85626715;0.60264444;0.00012071667;
0.0010069337;0.02253372;0.0053569688;0.29265472;0.43687817;0.026042134;0.14073631;5.3348771e-08;0.27231461;0.00039596122;
0.89121848;0.23283064;0.57320946;0.004366525;0.43342078;0.28462368;7.4500595e-06;0.08073315;0.095584936;0.033427693;
0.084021203;0.0028133795;0.25870803;0.90712649;0;0.0011569427;0.76343077;0.38100043;0.25918758;0.37144676;
0.86869425;0.010414165;0.022760628;7.5055364e-06;0.046320703;0.048086077;0.0028598378;0.066496752;0.0083070165;0.28454828;
0.37597078;0.083501548;0.083448879;6.1092561e-07;0.19653775;0.00090884604;0.89424598;0.26308581;0.51419818;0.011524293;
0.34073877;0.067696944;5.0103998e-05;0.26723439;0.12314855;0.080371186;0.25593433;0.02672418;0.042811558;0.90371335;
      };
     };
     float_Data @[12] {
      name="EndOfW_act_m";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=1;
      cell_geom{ 1;1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name=;
      [2] ;;      };
      width=0;
      ar {
       name=;
      [1 1 170] 0.73585039;0.81459492;0.89070296;0.84442061;0.79475421;0.78481978;0.79286754;0.68243527;0.84108406;0.69652587;
0.71487534;0.7926138;0.667229;0.6847778;0.67950183;0.64839089;0.52749223;0.67475539;0.52048779;0.65148938;
0.57939023;0.60192186;0.60574204;0.55546641;0.41764298;0.5182631;0.56041908;0.49551621;0.56407732;0.49473783;
0.4325549;0.48689866;0.44718802;0.50003672;0.50205255;0.43837333;0.45228624;0.51435971;0.38172078;0.30772614;
0.31669968;0.4542405;0.41796479;0.33179617;0.38216913;0.42488006;0.45482242;0.4737944;0.36180976;0.40945125;
0.38064039;0.2810238;0.26009533;0.42628998;0.38047141;0.32041255;0.42195719;0.25751352;0.43264249;0.44199303;
0.2834498;0.36215377;0.26801252;0.39601803;0.27847773;0.29252747;0.41559026;0.38983595;0.34367257;0.39809841;
0.28176913;0.35140979;0.20745289;0.39266121;0.24582562;0.35915738;0.34950364;0.40822694;0.2587887;0.21706602;
0.23866698;0.34659091;0.23655096;0.3717612;0.3081392;0.34495893;0.36791867;0.32458457;0.2487171;0.27534428;
0.19233903;0.24636185;0.22044784;0.23149931;0.23537649;0.21275803;0.26294586;0.31359309;0.32388338;0.18062069;
0.20265824;0.32208177;0.25742769;0.20020609;0.22475408;0.29674554;0.25413594;0.33137965;0.20744872;0.30287722;
0.22743767;0.25753871;0.23219407;0.19124584;0.18833968;0.31259063;0.22790658;0.28555518;0.28424737;0.20256072;
0.2301569;0.28149962;0.27734715;0.13974464;0.18510386;0.2100997;0.094141632;0.21206596;0.24108493;0.19402316;
0.29465818;0.20376322;0.23691866;0.22461554;0.14467618;0.19161752;0.18818405;0.22942032;0.1569571;0.29041368;
0.16303727;0.300172;0.25519359;0.15328941;0.20547348;0.19751285;0.23880583;0.26407415;0.18424898;0.30863017;
0.17258091;0.2686066;0.18992686;0.23586081;0.27565807;0.294808;0.29963985;0.20681092;0.17178212;0.34938836;
0.2257145;0.30043668;0;0.28122213;0.27274877;0.14747414;0.18266572;0.2996653;0.17386992;0.27020031;
      };
     };
     float_Data @[13] {
      name="Copy_o_act_m";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=1;
      cell_geom{ 3;4;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name=;
      [2] ;;      };
      width=0;
      ar {
       name=;
      [3 4 170] 5.384378e-07;0.94687968;0.00060638104;1.5060665e-10;0.95621419;0.8028546;0.96789926;3.1749057e-06;0.96135354;0.14604776;
0.95583719;0.94811726;0.037949193;0.966326;0.00066719961;2.8242204e-05;0.94918942;0.85348141;0.96910608;0.4994148;
0.96712095;0.00053947349;0.95113987;0.95458198;0.0001777492;0.9544068;0.86219573;0.0018705465;0.94808304;0.79972434;
0.9705497;0.90945309;0.96591288;0.073164798;0.94229275;0.93929356;0.00038249855;0.92038178;0.84289962;0.01343313;
0.94583523;0.2451126;0.96772325;0.70794904;0.95966864;0.71115041;0.93253416;0.92039025;0.0093183815;0.86370409;
0.028641008;0.6572687;0.9455356;0.85809654;0.95624733;0.00015155096;0.87133718;0.89278579;0.85034662;0.93612689;
0.00016170826;0.93923366;0.089843944;4.7336234e-05;0.9279747;0.88038367;0.94897068;0.22611141;0.93284255;0.81842893;
0.93668431;0.92244267;0.20863345;0.91064465;0.72748286;0.00076302374;0.83141345;0.025560791;0.9448474;0.86415088;
0.95812011;0.72799772;0.86965591;0.75954026;0.81342852;0.87261158;0.00015325923;0.016878193;0.93980956;0.79112595;
0.9440214;8.8796165e-05;0.62896967;0.85835057;0.83713907;0.92554295;0.069843076;0.65540618;0.90983129;0.69032305;
0.91999531;0.74277985;0.95520866;0.0067304606;0.92797917;0.8143115;0.83620292;0.83191961;0.0023934839;0.0013785067;
0.93413132;0.27741247;0.54759234;0.41436461;0.78665864;0.96371776;0.91795284;0.7140373;0.74788594;0.00016501005;
0.8147456;0.83632457;0.017713305;0.30484229;0.89784551;0.78287041;0.87825501;0.19589765;0.76879919;0.89073312;
0.33465949;0.91455644;0.48619118;0.8254407;0.88337225;0.7881189;0.90387374;0.02920826;0.94995224;0.6269654;
0.92612499;0.037438892;0.73272771;0.7934196;0;0;0;0;0;0;
0;0;0;0;0;0;0.10960958;0.0039031659;0.77933878;0.84988582;
0.87987483;0.73169446;0.91235083;0.15611164;0.76805955;0.90231353;0.040591247;0.84192079;0.073977157;0.89878529;
0.01271236;0.0016585365;0.30145633;0.84705704;0.88031662;0.9041751;0.8643679;0.88739467;0.73549312;0.62458247;
0.044912525;0.0024473986;0.92731988;0.5617035;0.24957474;0.59985763;0.32181501;0.95929176;0.89579082;0.64617038;
0.73892599;0.0002741401;0;0;0;0;0;0;0;0;
0;0;0;0;0.049965605;0.69585031;0.90345532;0.8066628;0.77206302;0.10380282;
0.81936061;0.9561885;0.91370291;0.050189238;0.21444131;0.00025569776;0.85231978;0.86668283;5.6813556e-06;0.67619258;
0.73452455;0.0031108914;0.77697521;0.90163261;0.91116643;0.0010151559;0.33898333;0.0011295788;0.00038427813;0.00038801157;
0.00038641621;0.00039622901;0.00039106235;0.00040800523;0.00023340035;0.00044671795;6.6778306e-08;0.00022699041;0.00021361734;0.00039166416;
0.013732859;0.78047335;0.092831954;0.00026311484;0.87885445;0.51373577;0.91277051;0.00038008328;0.89081299;0.77602762;
0.9086476;0.82254422;0.0048952778;0.92245448;0.034882899;0.0016249819;0.68829167;0.93112564;0.89406979;6.2472493e-05;
0.35476127;0.66657096;0.8983103;0.86862886;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0.91058195;0.83872062;
9.673868e-05;0.0083605405;0.00099044165;0.77083498;0.059640676;0.86984801;0.69882947;0.31137246;0.017497467;0.69364142;
0.84673321;0.61084825;0.27301937;0.62491375;0.74288625;0.86438119;0.00043481868;0.28639156;1.3500347e-05;0.85378617;
0.031346139;0.842623;0.17893335;0.0040817074;0.75204891;0.83506465;0.93097538;0.54932141;0.87049574;0.0003800742;
0.44559529;0.026222082;0.85882944;0.82220578;0;0;0;0;0;0;
0;0;0;0;0;0;0.12647526;0.0008830817;0.72369027;0.8124162;
0.77499032;0.67869061;0.80225313;0.0020652362;0.51328075;0.88210279;0.25888163;0.73891538;0.87069201;0.79079831;
0.66422766;0.00033625765;0.00012306179;0.74396324;0.35176387;0.90382528;0.1902831;0.82264066;0.050713863;0.098467313;
0.0003363454;0.88966626;0.00029614425;0.00011582152;0.78536218;0.92544174;0.79563463;8.8498375e-10;0.67875284;0.017911807;
0.92256337;0.38795713;0.4369626;0.53921992;0.029651731;0.14818761;0.30198902;0.87748259;0.65548587;0.00013832313;
0.87698859;0.7269609;0.85798341;0.03059157;0.32907751;0.87974983;0.00011265808;0.012485147;0.80440325;0.46064672;
0.21087183;0.77761805;0.80574244;4.9430206e-08;0.85886592;0.16410947;0.17728302;0.0020567309;0.91189092;0.63790625;
0.029137114;0.24341673;0.015219844;0.94523299;0.76149023;0.69162679;0.40831929;0.0020581738;0.00051285827;0.0006875461;
0.00074160355;0.00074870704;0.00055392197;0.00054627296;0.00027449266;0.00084060698;0;0.00053236081;2.6102166e-06;0.00068920967;
0.0059443722;0.0049927658;0.80341411;0.0088205906;0.50675321;6.406138e-05;0.73555034;0.40475959;0.88577521;0.83503532;
0.76390553;0.42517596;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0.84581482;0.59358686;
3.5684556e-05;0.030144831;0.0020865295;0.66951227;0.039032724;0.80319375;0.72120965;0.45920831;0.33117875;0.004701491;
0.40095603;0.86797947;0.00090919173;0.33160958;2.5677264e-06;0.80675805;0.01074793;0.8091771;0.22989875;0.27430236;
0.048309822;0.73657352;0.84906644;0.028750049;0.82872844;0.88713551;0.9146052;0.00067508244;0.68233734;0.43467274;
0.010883439;0.00070845167;0.034400508;0.81199414;1.9414035e-08;2.5880981e-05;0.00031474914;0;2.4546037e-07;8.4761305e-06;
8.0352976e-08;6.7408412e-09;0;3.9068959e-07;0;0.00032856636;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0.3806501;0.50783992;0.29835552;0.14257611;0.75450987;0.75712359;0.70610797;0.00093660422;0.0093648843;0.71626967;
0.76188862;0.77723277;0.00050518528;0.3177439;0.25903386;0.0023619514;0.70274758;0.83085793;0.58057332;0.69355708;
0.1200868;0.031018659;0.88849121;0.8156299;0;0;0;0;0;0;
0;0;0;0;0;0;0.013861141;0.58606893;0.0025442105;0.0012908194;
0.83347058;0.91813511;0.090804629;2.542577e-05;6.6291184e-05;0.87435234;0.90627551;0.76650625;0.0028693911;0.00010833243;
0.53098291;0.67609161;0.60380799;0.81350863;0.099162057;0.00010070675;0.72356135;0.89006829;0.77304643;0.00084775343;
0.67975718;0.76213837;0.0014647142;0.00054905063;0.066828862;0.69449329;0.021235686;0.4339354;0.55286968;3.8143971e-06;
0.84621894;0.50588459;0.85598689;0.59735781;0.0045176279;0.66893035;0.0059843594;0;0.84710771;0.063336127;
0.89177936;0.37382561;0.015002645;1.3723878e-08;0.82491046;0.89068407;0.0013860794;0.15415756;0.48370016;0.13826892;
0.68762934;0.81354213;1.342932e-08;0.0011626838;0.00069002307;0.41641271;0.65143371;0;0.028509326;0.79207647;
0.89904386;0.0038904492;0.056431465;0.005444855;0.75126165;0.89419293;0.77877444;0.1000628;0.81287211;0.32836276;
0.058384407;0.11959751;0.0059707919;0.010255042;0.76344746;0.10923585;0.86541051;0.54522693;0.41922766;0.0005683346;
0.0001720388;0.24304491;0.29700267;0.22853827;0.0056221569;0.25273237;0.010580685;0.31689328;1.1946806e-06;0.016342314;
0.0014438214;0.0087996684;0.36659408;7.1678173e-08;0.87006605;0.031371336;0.79249322;0.21790345;0.00027177844;0.00020098929;
0.24829045;0.87758279;0.72178537;0.55917853;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0.088006049;2.7963883e-06;0.66145092;0.75059283;0.11076839;0.67113489;0.67505121;0.0026888975;
0.74299484;0.81184471;0.36688235;0.023506697;0.00099843752;0.68916041;0.288221;0.0013501112;0.00031095845;0.65922475;
0.00056434731;0.54578972;0.75886643;0.0017234519;0.69686073;0.73421592;0.27788427;0.48941028;0.27841854;0.0021014912;
0.28172037;0.28111088;0.488509;0.0021494241;0.0070086042;0.0044200127;0.28037071;0.28984123;0.60389411;0.0013767077;
0.0018714939;0.79366589;0.88290608;2.3499375e-05;0.62948459;0.10258226;0.51233906;0.80423129;0.04817922;0.28479367;
0;0;0;0;0;0;0;0;0;0;
0;0;0.31459296;0.050067;0.1857983;0.2654185;0.69274527;0.77384585;0.01199714;0.16356555;
0;0.8427307;0.59846103;0.48930013;0.4041388;4.442405e-06;0.38298979;0.41470861;0.26608822;0.00044165627;
0.12075011;0.40719122;0.00038416876;0.0060472097;1.6527811e-06;0.13039678;0.36056814;0.71587002;0.002518768;0.00085141452;
0.12387277;0.76267672;0.042297874;0.071757145;0.59722829;0.00040560088;0.85228723;0.47393143;0;0;
0;0;0;0;0;0;0;0;0;0;
0.029614123;0.00045150792;0.033238363;0.032409642;0.020686034;0.00042004482;0.0061323326;0.034764893;0.0004176464;0.0073386086;
2.6930065e-06;0.0015389638;0.021599013;0.0041056438;0.49525186;0.10296555;0.6586054;0.5682627;0.00075877708;0.57731563;
0.32653546;0.5547654;0.70230108;0.094575115;0;0;0;0;0;0;
0;0;0;0;0;0;0.012378195;1.5828937e-05;0.015755309;0.015462173;
0.0072086304;0.00043099729;0.0089464309;0.017133493;0.00046491803;0.0033317655;9.6691485e-07;0.00043383086;0.0019882601;0.00188464;
0.0018775394;0.0019233959;0.0019127277;0.00056829746;0.0011228953;0.0020107855;1.0916414e-05;0.0013826789;7.8819357e-06;0.0018891725;
0.002037093;0.0039318497;0.0047128485;2.2713632e-06;0.00029895469;0.0037456239;0.0037939795;0.0028513174;0;0.0012758353;
0.0025413486;0.0040726704;0.00085683033;0.51897162;0.016123109;0.07259804;0.40100574;0.0015279232;0.82252508;0.51058984;
0.74428117;0.0016060683;0.57422799;0.64914811;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0.0007776579;0.68090194;
0.0015759051;0.0049607777;0.0059825615;0.78657019;0.83082455;0.0014181148;0.77191126;0.00075142545;0.84920049;0.012909423;
0.60622394;1.3131194e-07;0.049947277;0.76201582;0.86660349;0.00094041124;0.00035578798;0.57632542;0.22959659;0.81834018;
0.392425;0.014714847;0.0068301717;0.028786361;0.028729212;0;0.00048177119;0.020619553;0.021785978;0;
0;0.0030324347;0.0052908715;0.033249948;0.0004998506;0.0010614177;0.0011236169;0.00098722626;0.0011629662;0.0010743206;
0.0010286231;0.0036095358;0.00091358845;0.0031463497;0.00059496769;0.0010651159;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0.0014453762;0.0010405448;0.0013670119;0.001378611;0.0010653068;5.1211409e-05;0.0010389835;0.0013579959;2.3750815e-07;0.0013872557;
0;0.0010198365;0.052517675;0.79474258;0.0012395732;1.4428258e-06;0.00016148528;0.73394209;0.80712628;0;
0.72935724;0.31676945;0.7866708;0.36254844;0.0061165048;0.83069527;0.0046494403;3.3877207e-08;0.014601687;0.6284892;
0.79294151;0;0.73129231;0.003471771;0.80786741;0.6653949;1.6147876e-06;0.006396357;0.05901207;0.0054559102;
0.47708371;0.13832057;0.60787016;0.14795291;0.86516029;0.81751972;0.77967262;0.0033669374;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0.017932061;0.0032056472;0.73417962;0.76448494;0.36435655;0.64726782;0.031339873;0.037179649;
0.42726579;0.48296118;0.0039058006;0.010373117;0.0078940345;0.0035274052;0.0046850704;0.0012995583;0.00093125977;0.00067320792;
0.006604657;1.7209968e-06;0.00092968839;0.0048329839;0.00066655834;0.005648558;0.017550271;0.019020438;0.010473579;1.502614e-05;
0.016468769;0.0085915551;0.0051966486;0;0;1.7324353e-05;0.0045033861;0.021920864;0.029213337;3.7311636e-06;
0.11392853;0.11402042;0.13228647;0.0049498775;0.0050366325;0.064255662;0.00052925636;0.07122691;0.0048232963;0.12154222;
0;0;0;0;0;0;0;0;0;0;
0;0;0.17769021;0.79962873;0.016365776;0;0.0079786796;0.77181077;0.35282496;0;
0;0.00031680436;0.6752274;0.83237314;0;0.24258748;0.020443954;0.00042033609;1.2861526e-05;0.84004217;
0.012802854;0.017477475;0.78511715;0.7397384;0.81472659;0.0086614415;0;0;0;0;
0;0;0;0;0;0;0;0;0.010401495;0.8090598;
0.0052575539;9.9215518e-05;0.38489497;0.66123956;0.78064692;0;0.36647564;2.2186261e-05;0.72230351;0.15749249;
0.0088158827;0.14282967;0.43110603;0.18573187;0.13664082;0.155362;0.27204916;0.61693341;0.34508425;0.39506167;
0.10194793;0.17323202;0;0;0;0;0;0;0;0;
0;0;0;0;0.024261206;0.026309032;0.0066786502;0;0.010152472;0.0090566576;
0.017245904;0;0;5.5626113e-08;0.0070841508;0.026400257;0.035000242;0.31759688;0.12425549;0.10032479;
0.36001584;0.55921727;0.27720571;0.12199739;0.24437842;0.5918234;0.55504525;0.16812655;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0.23243663;0.048891872;0.61627984;0.75915784;0.034957737;0.32860911;0.4050495;0.52891523;
0.71525609;0.00065625639;0.00013022077;0.02038341;0.80209327;0.02123291;0.21403314;0.00777339;0.76199102;0.80331516;
0.0011598459;1.0801477e-05;7.7449309e-05;0.048819676;0.6982671;0.69468272;0;0;0;0;
0;0;0;0;0;0;0;0;0.030040735;0.022167157;
0.020047925;0.026494578;0.019769534;0.00083235034;0.0084950756;0.0046551051;0.0015272545;0.019323546;3.9988801e-05;0.0083451103;
0.84201914;6.4559626e-06;0.76586843;0.066190012;0.40275285;0.074367099;0.2592743;0.0029300512;0.0079696197;0.84968543;
0.077198386;0.0084459772;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0.001881131;3.284415e-10;3.6108975e-08;0.0018841575;
0.0033596773;0;0;0;0;0;0;0.00020942562;0;3.9191022e-05;
0.00012522933;0;3.1808138e-09;7.4745736e-07;0;0;0;0;0;3.5068456e-07;
0;0.23309185;0.092915654;0.082161501;0.516038;0.022480497;0.69214249;0.48216304;0.75086951;0.62458211;
0.096680537;0.0025994708;0;0;0;0;0;0;0;0;
0;0;0;0;0.020183906;0.27150494;0.27305186;0.2706449;0;0.000258607;
8.1244013e-07;0.47369486;0.27413991;0;0;0.00031050772;0.71660674;0.69657695;0.53636414;9.6760974e-05;
0;0.59036189;1.1016127e-06;0.068308026;0.010452376;0.028766606;0.028697908;0.74525148;0.0067442935;0.00010367776;
0;0.0013869521;0.746858;0.8455354;0.0090564666;0;0.12060513;0.77176023;0.86799681;5.5010059e-05;
0;0;0;0;0;0;0;0;0;0;
0;0;5.474401e-06;0.58217454;0.0013500799;0.57743412;1.5700026e-08;0.051526822;0.75795478;0.092765838;
0.88269728;0.028452462;0.26710102;0;0.16450049;0.11776701;0.11691166;0.005425177;0.0081291022;0.0085982196;
0.17665836;1.0263619e-07;0.13188402;0.061805442;0.012208093;0.0028764373;0.0063032778;0.016307808;0.011292212;1.8021376e-05;
0.015853487;0.01424428;0.01206542;0;0;5.6928318e-08;0.011900365;0.017234793;9.9312047e-07;0.0064287568;
0.15333048;0.11123434;0.046678793;0.17465459;0.083003186;0.65516299;0.52565223;0.5154804;0.55441326;0.35067517;
0;0;0;0;0;0;0;0;0;0;
0;0;0.012583798;0.052358568;0.0080120983;5.6399415e-07;0.036370575;0.021990443;0.027978528;0;
0;1.0519028e-05;0.018030174;0.055516582;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0.0050256718;0.0027591772;0.0048053525;0.01036946;0.40544611;0.77289611;0.0027511849;0;0.50153822;0.7977221;
0.74923843;0.0061857956;0.79916441;1.8875155e-06;0.22435886;0.36433518;0.39020604;0.5522294;3.571904e-06;0.0031389976;
0;0.76051843;0.089034148;0.23356062;0;0;0;0;0;0;
0;0;0;0;0;0;4.8009852e-08;0.21180421;0.25575575;0.42684937;
0.22998935;0.55019033;0.33533919;0.23059899;0.37013546;0.14203021;0.02724633;0.21293697;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0.00010868988;0.0031714218;0.0031872732;0.0032350377;0;0;0.0034693312;0.0032623857;
0.0034714481;2.1664994e-09;0;2.6338425e-05;7.1950155e-05;0.50624138;0.40340698;4.787868e-06;0.013825579;0.29851308;
0.66455752;0;0.7127409;0.70593214;0.25849161;0.0040734042;0;0;0;0;
0;0;0;0;0;0;0;0;0.061900824;0.089461803;
0.070681676;0.00088554947;0;0.039169855;2.7653942e-07;0.035551481;0;0.0090567572;9.9364001e-08;0.07508105;
0.033437889;0.66259694;0;0.1861095;0.58939016;5.1281052e-08;0.60553348;0.0029454001;0.79327494;2.6416259e-05;
0.65909314;1.1974268e-07;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0.0011697905;0.51341534;0.47192869;5.3780983e-05;0.00023386895;0.52379221;0.006409822;0.37176254;1.1393738e-06;0.045315504;
0.087438717;0.040311925;0.0066758865;0.035903193;0.00033458346;0.0036228129;0.00073374354;0.87094206;0.0045530726;0.0034029;
0.38557652;0.78709948;0.87910324;4.2540989e-08;0;0;0;0;0;0;
0;0;0;0;0;0;0;0.013122885;0.025604544;0.024345104;
9.9770077e-06;0.0040233368;0.0091253929;0.034133419;0.01176201;0.0047179032;0.003717599;0;0.016586438;0;
0.742495;4.5390878e-09;0.0082784332;0.75006604;4.2733546e-08;2.6828064e-07;0.30384964;0.862984;0.78017902;0.0081939008;
0;0;0;0;0;0;0;0;0;0;
0;0;0;1.1149707e-08;0.23923621;0.00058873487;0.017075369;0.44998443;0.017218325;0.091782317;
0.64776236;0.76379555;0.73622268;0.037361547;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0.011942026;0.018920638;0.061763398;0.080938645;0.14144734;0.6326412;6.5044396e-06;0.10888196;0.70597392;0.63112789;
0.76765257;0.079193443;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0.074361011;2.0701998e-06;0.049054697;0.06673681;
0.090450749;6.2310335e-08;0;0.029792815;0;0.015265988;1.680911e-05;0.076634713;0;0;
0;0;0;0;0;0;0;0;0;0;
0.0022158842;0.22190022;0.24183616;6.9557929e-05;4.31877e-07;0.23614118;0.0015974835;0.20563096;3.256391e-06;0.050883427;
0.034242343;0.051859193;0.12130478;0.40460923;0;0.59432954;0.42825955;0;0.52063352;0.56847209;
0.68768471;0.0056528603;0.1029506;4.0241983e-09;0;0;0;0;0;0;
0;0;0;0;0;0;0;0.2291763;0.073680669;0.01675065;
0;0.41337538;0.51365358;0.084892146;0.80035204;0.67779887;0.44104573;0;0.51668459;0;
1.1795521e-05;0.001211107;0.72581726;0.66564649;2.8110891e-09;0;3.748275e-09;0.80906564;0.72243088;0.31600186;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0.00010532593;0.095946871;0.0014800481;0.002560454;0.66643405;0.048155949;0.076181851;
0.61755461;0.70523256;0.75029665;0.060913164;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0.0013154791;
0.058276009;0.0047888709;0.00013609012;0.66326833;0.10883664;0.093507841;0.62234282;0.64518213;0.65139568;0.046053745;
      };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [170] 0;1;2;3;4;5;6;7;8;9;
10;11;12;13;14;15;16;17;18;19;
20;21;22;23;24;25;26;27;28;29;
30;31;32;33;34;35;36;37;38;39;
40;41;42;43;44;45;46;47;48;49;
50;51;52;53;54;55;56;57;58;59;
60;61;62;63;64;65;66;67;68;69;
70;71;72;73;74;75;76;77;78;79;
80;81;82;83;84;85;86;87;88;89;
90;91;92;93;94;95;96;97;98;99;
100;101;102;103;104;105;106;107;108;109;
110;111;112;113;114;115;116;117;118;119;
120;121;122;123;124;125;126;127;128;129;
130;131;132;133;134;135;136;137;138;139;
140;141;142;143;144;145;146;147;148;149;
150;151;152;153;154;155;156;157;158;159;
160;161;162;163;164;165;166;167;168;169;
    };
   };
   DataTable @[1] {
    name="EpochOutputData";
    desc=;
    data {
     name="data";
     el_typ=int_Data;
     el_def=0;
     int_Data @[0] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_51";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
       UserDataItem @[1] {
	name="view_panel_wd";
	value 6 0=0.1917293220758438;
	val_type_fixed=0;
       };
      };
      name="batch";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=153;
      ar {
       name="ar";
      [0]       };
     };
     int_Data @[1] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_52";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="NARROW";
	value 1 0=1;
	val_type_fixed=0;
       };
       UserDataItem @[1] {
	name="view_panel_wd";
	value 6 0=0.1917293220758438;
	val_type_fixed=0;
       };
      };
      name="epoch";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=153;
      ar {
       name="ar";
      [0]       };
     };
     float_Data @[2] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_58";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="view_panel_wd";
	value 6 0=0.1917293220758438;
	val_type_fixed=0;
       };
      };
      name="avg_sse";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=153;
      ar {
       name="ar";
      [0]       };
     };
     float_Data @[3] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_59";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="view_panel_wd";
	value 6 0=0.1917293220758438;
	val_type_fixed=0;
       };
      };
      name="cnt_err";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=153;
      ar {
       name="ar";
      [0]       };
     };
     float_Data @[4] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_60";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="view_panel_wd";
	value 6 0=0.1917293220758438;
	val_type_fixed=0;
       };
      };
      name="avg_ext_rew";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=153;
      ar {
       name="ar";
      [0]       };
     };
     float_Data @[5] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_61";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="view_panel_wd";
	value 6 0=0.1917293220758438;
	val_type_fixed=0;
       };
      };
      name="avg_cycles";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=153;
      ar {
       name="ar";
      [0]       };
     };
     float_Data @[6] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_62";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="view_panel_wd";
	value 6 0=0.1917293220758438;
	val_type_fixed=0;
       };
      };
      name="epoch_time_tot";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=153;
      ar {
       name="ar";
      [0]       };
     };
     float_Data @[7] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_63";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="view_panel_wd";
	value 6 0=0.1917293220758438;
	val_type_fixed=0;
       };
      };
      name="epoch_time_usr";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=153;
      ar {
       name="ar";
      [0]       };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [0]     };
   };
  };
  DataTable_Group @.gp[2] {
   name="AnalysisData";
   el_typ=DataTable;
   el_def=0;
   save_tables=1;
   DataTable @[0] {
    name="TrialOutputData_col_Hidden_act_m_Cluster";
    desc=;
    data {
     name="data";
     el_typ=float_Data;
     el_def=0;
     float_Data @[0] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_53";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="X_AXIS";
	value 1 0=1;
	val_type_fixed=0;
       };
       UserDataItem @[1] {
	name="MAX";
	value 6 0=6.244562149047852;
	val_type_fixed=0;
       };
      };
      name="X";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
      ar {
       name="ar";
      [107] 0;0;0;0;0;3.0045478;3.0045478;3.1923099;3.1923099;3.2170348;
3.1923099;3.1923099;3.1923099;3.1923099;3.2170348;3.1923099;3.1923099;3.1923099;3.0045478;3.0045478;
3.0045478;3.1923099;3.1923099;3.2897472;3.1923099;3.1923099;3.1923099;3.1923099;3.2897472;3.1923099;
3.1923099;3.1923099;3.0045478;3.0045478;0;0;0;3.0045478;3.0045478;3.8363934;
3.0045478;3.0045478;3.0045478;3.0045478;3.8363934;3.8363931;4.5441923;4.5441923;4.9301319;4.5441923;
4.5441923;4.5441923;4.5441923;4.9301319;4.9301319;5.159307;4.9301319;4.9301319;4.9301319;4.9301319;
5.159307;4.9301319;4.9301319;4.9301319;4.5441923;4.5441923;3.8363931;3.8363934;3.8363931;4.5441923;
4.5441923;5.0633388;5.0633388;5.2207346;5.0633388;5.0633388;5.0633388;5.0633388;5.2207346;5.0633388;
5.0633388;5.0633388;4.5441923;4.5441923;4.5441923;5.0633388;5.0633388;5.4300542;5.0633388;5.0633388;
5.0633388;5.0633388;5.4300542;5.0633388;5.0633388;5.0633388;4.5441923;4.5441923;3.8363931;3.8363934;
3.0045478;3.0045478;0;0;0;0;0;      };
     };
     float_Data @[1] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_54";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="PLOT_1";
	value 1 0=1;
	val_type_fixed=0;
       };
       UserDataItem @[1] {
	name="MAX";
	value 6 0=11.80000019073486;
	val_type_fixed=0;
       };
       UserDataItem @[2] {
	name="MIN";
	value 6 0=0.2000000029802322;
	val_type_fixed=0;
       };
      };
      name="Y";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
      ar {
       name="ar";
      [107] 4.15625;4.15625;4.15625;4.15625;2;2;1;1;0.5;0.5;
0.5;0.5;1;1.5;1.5;1.5;1.5;1;1;2;
3;3;2.5;2.5;2.5;2.5;3;3.5;3.5;3.5;
3.5;3;3;2;2;4.15625;6.3125;6.3125;4.5;4.5;
4.5;4.5;6.3125;8.125;8.125;6.25;6.25;5.5;5.5;5.5;
5.5;6.25;7;7;6.5;6.5;6.5;6.5;7;7.5;
7.5;7.5;7.5;7;7;6.25;6.25;8.125;10;10;
9;9;8.5;8.5;8.5;8.5;9;9.5;9.5;9.5;
9.5;9;9;10;11;11;10.5;10.5;10.5;10.5;
11;11.5;11.5;11.5;11.5;11;11;10;10;8.125;
8.125;6.3125;6.3125;4.15625;4.15625;4.15625;4.15625;      };
     };
     String_Data @[2] {
      UserDataItem_List @*(.user_data_) {
       name="UserDataItem_List_55";
       el_typ=UserDataItem;
       el_def=0;
       UserDataItem @[0] {
	name="PLOT_2";
	value 1 0=1;
	val_type_fixed=0;
       };
      };
      name="Label";
      col_flags=SAVE_ROWS|SAVE_DATA;
      is_matrix=0;
      cell_geom{ 1;      };
      calc_expr {
       expr=;
      };
      dim_names {
       name="dim_names";
      [0]       };
      width=0;
      ar {
       name="ar";
      [107] ;;;;;;;;;"D";
;;;;"A";;;;;;
;;;"G";;;;;"J";;
;;;;;;;;;"K";
;;;;;;;;"H";;
;;;;;"F";;;;;
"I";;;;;;;;;;
;;;"C";;;;;"E";;
;;;;;;;"L";;;
;;"B";;;;;;;;
;;;;;;;      };
     };
    };
    data_flags=SAVE_ROWS|AUTO_CALC;
    auto_load=NO_AUTO_LOAD;
    auto_load_file=;
    keygen 4 0=0;
    row_indexes {
     name="row_indexes";
    [107] 0;1;2;3;4;5;6;7;8;9;
10;11;12;13;14;15;16;17;18;19;
20;21;22;23;24;25;26;27;28;29;
30;31;32;33;34;35;36;37;38;39;
40;41;42;43;44;45;46;47;48;49;
50;51;52;53;54;55;56;57;58;59;
60;61;62;63;64;65;66;67;68;69;
70;71;72;73;74;75;76;77;78;79;
80;81;82;83;84;85;86;87;88;89;
90;91;92;93;94;95;96;97;98;99;
100;101;102;103;104;105;106;    };
   };
  };
 };
 programs {
  name="programs";
  el_typ=Program;
  el_def=0;
  tags=;
  desc=;
  Program @[0] {
   name="StatWordLearn";
   short_nm="StWrLr";
   tags=;
   desc="Generates Word Stream for 4 3-syllable words";
   flags=NO_STOP_STEP;
   objs {
    name="objs";
    el_typ=taNBase;
    el_def=0;
   };
   types {
    name="types";
    el_typ=DynEnumType;
    el_def=0;
   };
   args {
    name="args";
    el_typ=ProgVar;
    el_def=0;
   };
   vars {
    name="vars";
    el_typ=ProgVar;
    el_def=0;
    ProgVar @[0] {
     name="unit_names";
     var_type=T_Object;
     object_type=DataTable;
     object_val=NULL;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
   };
   functions {
    name="functions";
    el_typ=Function;
    el_def=0;
   };
   init_code {
    name="init_code";
    el_typ=ProgCode;
    el_def=0;
    InitNamedUnits @[0] {
     desc=;
     flags=0;
     orig_prog_code=;
     input_data_var=.projects[0].programs[0].vars[0]$$;
     unit_names_var=$.projects[0].programs[0].vars[0]$;
     network_var=NULL;
     n_lay_name_chars=1;
     max_unit_chars=-1;
    };
   };
   prog_code {
    name="prog_code";
    el_typ=ProgCode;
    el_def=0;
    LocalVars @[0] {
     desc=;
     flags=0;
     orig_prog_code=;
     local_vars {
      name="local_vars";
      el_typ=ProgVar;
      el_def=0;
     };
    };
    PrintExpr @[1] {
     desc="1= 3= syllable";
     flags=CAN_REVERT_TO_CODE;
     orig_prog_code="Print: .projects[\"StatLearn_1stTry\"].data.gp[\"InputData\"][\"StdInputData\"][0,0,0]";
     expr {
      expr=".projects[\"StatLearn_1stTry\"].data.gp[\"InputData\"][\"StdInputData\"].data[\"Input\"][:,:,1]";
     };
     my_mask=NULL;
     debug_level=NULL;
    };
    PrintExpr @[2] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     orig_prog_code="Print: .projects[\"StatLearn_1stTry\"}.data.gp[\"InputData\"][\"UnitNames\"].data[\"Output\"]";
     expr {
      expr=".projects[\"StatLearn_1stTry\"].data.gp[\"InputData\"][\"UnitNames\"].data[\"Output\"][:,:,1]";
     };
     my_mask=NULL;
     debug_level=NULL;
    };
   };
   step_prog=NULL;
   step_n=1;
  };
  Program @[1] {
   name="StatWordLearnNew";
   short_nm="StWrLr";
   tags=;
   desc=;
   flags=NO_STOP_STEP;
   objs {
    name="objs";
    el_typ=DataTable;
    el_def=0;
   };
   types {
    name="types";
    el_typ=DynEnumType;
    el_def=0;
    DynEnumType @[0] {
     name="Input";
     desc=;
     enums {
      name="enums";
      el_typ=DynEnumItem;
      el_def=0;
      DynEnumItem @[0] {
       name="I_C";
       value=0;
       desc=;
      };
      DynEnumItem @[1] {
       name="I_F";
       value=1;
       desc=;
      };
      DynEnumItem @[2] {
       name="I_I";
       value=2;
       desc=;
      };
      DynEnumItem @[3] {
       name="I_L";
       value=3;
       desc=;
      };
      DynEnumItem @[4] {
       name="I_B";
       value=4;
       desc=;
      };
      DynEnumItem @[5] {
       name="I_E";
       value=5;
       desc=;
      };
      DynEnumItem @[6] {
       name="I_H";
       value=6;
       desc=;
      };
      DynEnumItem @[7] {
       name="I_K";
       value=7;
       desc=;
      };
      DynEnumItem @[8] {
       name="I_A";
       value=8;
       desc=;
      };
      DynEnumItem @[9] {
       name="I_D";
       value=9;
       desc=;
      };
      DynEnumItem @[10] {
       name="I_G";
       value=10;
       desc=;
      };
      DynEnumItem @[11] {
       name="I_J";
       value=11;
       desc=;
      };
      DynEnumItem @[12] {
       name="I_NInput";
       value=12;
       desc=;
      };
     };
     bits=0;
    };
    DynEnumType @[1] {
     name="Output";
     desc=;
     enums {
      name="enums";
      el_typ=DynEnumItem;
      el_def=0;
      DynEnumItem @[0] {
       name="O_C";
       value=0;
       desc=;
      };
      DynEnumItem @[1] {
       name="O_F";
       value=1;
       desc=;
      };
      DynEnumItem @[2] {
       name="O_I";
       value=2;
       desc=;
      };
      DynEnumItem @[3] {
       name="O_L";
       value=3;
       desc=;
      };
      DynEnumItem @[4] {
       name="O_B";
       value=4;
       desc=;
      };
      DynEnumItem @[5] {
       name="O_E";
       value=5;
       desc=;
      };
      DynEnumItem @[6] {
       name="O_H";
       value=6;
       desc=;
      };
      DynEnumItem @[7] {
       name="O_K";
       value=7;
       desc=;
      };
      DynEnumItem @[8] {
       name="O_A";
       value=8;
       desc=;
      };
      DynEnumItem @[9] {
       name="O_D";
       value=9;
       desc=;
      };
      DynEnumItem @[10] {
       name="O_G";
       value=10;
       desc=;
      };
      DynEnumItem @[11] {
       name="O_J";
       value=11;
       desc=;
      };
      DynEnumItem @[12] {
       name="O_NOutput";
       value=12;
       desc=;
      };
     };
     bits=0;
    };
   };
   args {
    name="args";
    el_typ=ProgVar;
    el_def=0;
    ProgVar @[0] {
     name="input_data";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].data.gp[0][0]$$;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
   };
   vars {
    name="vars";
    el_typ=ProgVar;
    el_def=0;
    ProgVar @[0] {
     name="unit_names";
     var_type=T_Object;
     object_type=DataTable;
     object_val=NULL;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
   };
   functions {
    name="functions";
    el_typ=Function;
    el_def=0;
   };
   init_code {
    name="init_code";
    el_typ=ProgCode;
    el_def=0;
    InitNamedUnits @[0] {
     desc=;
     flags=0;
     orig_prog_code=;
     input_data_var=.projects[0].programs[1].args[0]$$;
     unit_names_var=.projects[0].programs[1].vars[0]$$;
     network_var=NULL;
     n_lay_name_chars=1;
     max_unit_chars=-1;
    };
   };
   prog_code {
    name="prog_code";
    el_typ=ProgCode;
    el_def=0;
    LocalVars @[0] {
     desc=;
     flags=0;
     orig_prog_code=;
     local_vars {
      name="local_vars";
      el_typ=ProgVar;
      el_def=0;
      ProgVar @[0] {
       name="next_word";
       var_type=T_Int;
       int_val=0;
       objs_ptr=0;
       flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[1] {
       name="current_word";
       var_type=T_Int;
       int_val=0;
       objs_ptr=0;
       flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[2] {
       name="input_unit";
       var_type=T_DynEnum;
       dyn_enum_val {
	enum_type=.projects[0].programs[1].types[0]$$;
	value=0;
       };
       objs_ptr=0;
       flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[3] {
       name="output_unit";
       var_type=T_DynEnum;
       dyn_enum_val {
	enum_type=.projects[0].programs[1].types[1]$$;
	value=0;
       };
       objs_ptr=0;
       flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[4] {
       name="words_to_run";
       var_type=T_Int;
       int_val=9;
       objs_ptr=0;
       flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[5] {
       name="syllables_in_words";
       var_type=T_Int;
       int_val=3;
       objs_ptr=0;
       flags=SAVE_VAL|LOCAL_VAR|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[6] {
       name="words_completed";
       var_type=T_Int;
       int_val=0;
       objs_ptr=0;
       flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[7] {
       name="rnd_number";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=SAVE_VAL|LOCAL_VAR|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[8] {
       name="current_syllable";
       var_type=T_Int;
       int_val=1;
       objs_ptr=0;
       flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
     };
    };
    AssignExpr @[1] {
     desc="Initializes a previous word, since none exist currently";
     flags=CAN_REVERT_TO_CODE;
     orig_prog_code="current_word = 1";
     result_var=.projects[0].programs[1].prog_code[0].local_vars[1]$$;
     expr {
      expr="Random::IntMinMax(1, 5)";
     };
    };
    PrintExpr @[2] {
     desc="1= 3= syllable";
     flags=CAN_REVERT_TO_CODE;
     orig_prog_code="Print: .projects[\"StatLearn_1stTry\"].data.gp[\"InputData\"][\"StdInputData\"][0,0,0]";
     expr {
      expr=".projects[\"StatLearn_1stTry\"].data.gp[\"InputData\"][\"StdInputData\"].data[\"Input\"][:,:,1]";
     };
     my_mask=NULL;
     debug_level=NULL;
    };
    ForLoop @[3] {
     desc=;
     flags=0;
     orig_prog_code="for (i=1; 1<= words_to_run; i++)";
     loop_code {
      name="loop_code";
      el_typ=ProgCode;
      el_def=0;
      RandomCall @[0] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       orig_prog_code="rnd_number = Random::ZeroOne()";
       result_var=.projects[0].programs[1].prog_code[0].local_vars[0]$$;
       object_type=Random;
       method=Random::IntMinMax;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=int;
	 type="int";
	 name="min";
	 required=1;
	 def_val=;
	 expr {
	  expr="1";
	 };
	};
	ProgArg @[1] {
	 arg_type=int;
	 type="int";
	 name="max";
	 required=1;
	 def_val=;
	 expr {
	  expr="5";
	 };
	};
       };
      };
      ForLoop @[1] {
       desc=;
       flags=0;
       orig_prog_code="for (current_syllable = 1; current_syllable <= 3; current_syllable++)";
       loop_code {
	name="loop_code";
	el_typ=ProgCode;
	el_def=0;
	AssignExpr @[0] {
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 orig_prog_code="input_unit = []";
	 result_var=.projects[0].programs[1].prog_code[0].local_vars[2]$$;
	 expr {
	  expr="I_C";
	 };
	};
	PrintVar @[1] {
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 orig_prog_code="Print:input_unit";
	 message=;
	 print_var=$.projects[0].programs[1].prog_code[0].local_vars[2]$;
	 print_var2=NULL;
	 print_var3=NULL;
	 print_var4=NULL;
	 print_var5=NULL;
	 print_var6=NULL;
	 my_mask=NULL;
	 debug_level=NULL;
	};
	If @[2] {
	 desc=;
	 flags=0;
	 orig_prog_code="if (current_syllable = 3)";
	 cond {
	  expr="current_syllable == 3";
	 };
	 true_code {
	  name="true_code";
	  el_typ=ProgCode;
	  el_def=0;
	  AssignExpr @[0] {
	   desc=;
	   flags=CAN_REVERT_TO_CODE;
	   orig_prog_code="output_unit =";
	   result_var=.projects[0].programs[1].prog_code[0].local_vars[3]$$;
	   expr {
	    expr=".projects[\"StatLearn_1stTry\"].data.gp[\"InputData\"][\"StdInputData\"][\"Input\"][next_word,1,:]";
	   };
	  };
	 };
	};
	Else @[3] {
	 desc=;
	 flags=0;
	 orig_prog_code="else";
	 else_code {
	  name="else_code";
	  el_typ=ProgCode;
	  el_def=0;
	  AssignExpr @[0] {
	   desc=;
	   flags=CAN_REVERT_TO_CODE;
	   orig_prog_code="output_unit = .projects[\"StatLearn_1stTry\"].data.gp[\"InputData\"][\"StdInputData\"][\"Input\"][current_word,1,:]";
	   result_var=$.projects[0].programs[1].prog_code[0].local_vars[3]$;
	   expr {
	    expr=".projects[\"StatLearn_1stTry\"].data.gp[\"InputData\"][\"StdInputData\"][\"Input\"][current_word,current_syllable + 1,:]";
	   };
	  };
	 };
	};
	AddNewDataRow @[4] {
	 desc=;
	 flags=0;
	 orig_prog_code=;
	 data_var=$.projects[0].programs[1].args[0]$;
	};
	SetUnitsVar @[5] {
	 desc=;
	 flags=0;
	 orig_prog_code=;
	 input_data_var=$.projects[0].programs[1].args[0]$;
	 set_nm=1;
	 offset=NULL;
	 unit_1=$.projects[0].programs[1].prog_code[0].local_vars[2]$;
	 unit_2=$.projects[0].programs[1].prog_code[0].local_vars[3]$;
	 unit_3=NULL;
	 unit_4=NULL;
	};
	DoneWritingDataRow @[6] {
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 orig_prog_code="DoneWritingDataRow: table = input_data";
	 data_var=$.projects[0].programs[1].args[0]$;
	};
       };
       init {
	expr="current_syllable = 1";
       };
       test {
	expr="current_syllable <= 3";
       };
       iter {
	expr="current_syllable++";
       };
      };
      AssignExpr @[2] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       orig_prog_code="current_word = next_word";
       result_var=$.projects[0].programs[1].prog_code[0].local_vars[1]$;
       expr {
	expr="next_word";
       };
      };
     };
     init {
      expr="words_completed=0";
     };
     test {
      expr="words_completed < words_to_run";
     };
     iter {
      expr="words_completed++";
     };
    };
   };
   step_prog=NULL;
   step_n=1;
  };
  Program @[2] {
   name="Stat3";
   short_nm="Stat3";
   tags=;
   desc=;
   flags=NO_STOP_STEP;
   objs {
    name="objs";
    el_typ=taNBase;
    el_def=0;
   };
   types {
    name="types";
    el_typ=DynEnumType;
    el_def=0;
    DynEnumType @[0] {
     name="Input";
     desc=;
     enums {
      name="enums";
      el_typ=DynEnumItem;
      el_def=0;
      DynEnumItem @[0] {
       name="I_A";
       value=0;
       desc=;
      };
      DynEnumItem @[1] {
       name="I_B";
       value=1;
       desc=;
      };
      DynEnumItem @[2] {
       name="I_C";
       value=2;
       desc=;
      };
      DynEnumItem @[3] {
       name="I_D";
       value=3;
       desc=;
      };
      DynEnumItem @[4] {
       name="I_E";
       value=4;
       desc=;
      };
      DynEnumItem @[5] {
       name="I_F";
       value=5;
       desc=;
      };
      DynEnumItem @[6] {
       name="I_G";
       value=6;
       desc=;
      };
      DynEnumItem @[7] {
       name="I_H";
       value=7;
       desc=;
      };
      DynEnumItem @[8] {
       name="I_I";
       value=8;
       desc=;
      };
      DynEnumItem @[9] {
       name="I_J";
       value=9;
       desc=;
      };
      DynEnumItem @[10] {
       name="I_K";
       value=10;
       desc=;
      };
      DynEnumItem @[11] {
       name="I_L";
       value=11;
       desc=;
      };
      DynEnumItem @[12] {
       name="I_NInput";
       value=12;
       desc=;
      };
     };
     bits=0;
    };
    DynEnumType @[1] {
     name="Output";
     desc=;
     enums {
      name="enums";
      el_typ=DynEnumItem;
      el_def=0;
      DynEnumItem @[0] {
       name="O_A";
       value=0;
       desc=;
      };
      DynEnumItem @[1] {
       name="O_B";
       value=1;
       desc=;
      };
      DynEnumItem @[2] {
       name="O_C";
       value=2;
       desc=;
      };
      DynEnumItem @[3] {
       name="O_D";
       value=3;
       desc=;
      };
      DynEnumItem @[4] {
       name="O_E";
       value=4;
       desc=;
      };
      DynEnumItem @[5] {
       name="O_F";
       value=5;
       desc=;
      };
      DynEnumItem @[6] {
       name="O_G";
       value=6;
       desc=;
      };
      DynEnumItem @[7] {
       name="O_H";
       value=7;
       desc=;
      };
      DynEnumItem @[8] {
       name="O_I";
       value=8;
       desc=;
      };
      DynEnumItem @[9] {
       name="O_J";
       value=9;
       desc=;
      };
      DynEnumItem @[10] {
       name="O_K";
       value=10;
       desc=;
      };
      DynEnumItem @[11] {
       name="O_L";
       value=11;
       desc=;
      };
      DynEnumItem @[12] {
       name="O_NOutput";
       value=12;
       desc=;
      };
     };
     bits=0;
    };
   };
   args {
    name="args";
    el_typ=ProgVar;
    el_def=0;
    ProgVar @[0] {
     name="input_data";
     var_type=T_Object;
     object_type=DataTable;
     object_val=$.projects[0].data.gp[0][0]$;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
   };
   vars {
    name="vars";
    el_typ=ProgVar;
    el_def=0;
    ProgVar @[0] {
     name="unit_names";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].data.gp[0][1]$$;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
   };
   functions {
    name="functions";
    el_typ=Function;
    el_def=0;
   };
   init_code {
    name="init_code";
    el_typ=ProgCode;
    el_def=0;
    InitNamedUnits @[0] {
     desc=;
     flags=0;
     orig_prog_code=;
     input_data_var=.projects[0].programs[2].args[0]$$;
     unit_names_var=.projects[0].programs[2].vars[0]$$;
     network_var=NULL;
     n_lay_name_chars=1;
     max_unit_chars=-1;
    };
   };
   prog_code {
    name="prog_code";
    el_typ=ProgCode;
    el_def=0;
    LocalVars @[0] {
     desc=;
     flags=0;
     orig_prog_code=;
     local_vars {
      name="local_vars";
      el_typ=ProgVar;
      el_def=0;
      ProgVar @[0] {
       name="input_unit";
       var_type=T_DynEnum;
       dyn_enum_val {
	enum_type=.projects[0].programs[2].types[0]$$;
	value=0;
       };
       objs_ptr=0;
       flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[1] {
       name="output_unit";
       var_type=T_DynEnum;
       dyn_enum_val {
	enum_type=.projects[0].programs[2].types[1]$$;
	value=0;
       };
       objs_ptr=0;
       flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[2] {
       name="next_word";
       var_type=T_Int;
       int_val=0;
       objs_ptr=0;
       flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[3] {
       name="current_word";
       var_type=T_Int;
       int_val=0;
       objs_ptr=0;
       flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[4] {
       name="words_completed";
       var_type=T_Int;
       int_val=0;
       objs_ptr=0;
       flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[5] {
       name="words_to_run";
       var_type=T_Int;
       int_val=180;
       objs_ptr=0;
       flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[6] {
       name="current_syllable";
       var_type=T_Int;
       int_val=0;
       objs_ptr=0;
       flags=SAVE_VAL|LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
     };
    };
    ResetDataRows @[1] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     orig_prog_code="ResetDataRows:  table = input_data 
";
     data_var=$.projects[0].programs[2].args[0]$;
    };
    RandomCall @[2] {
     desc=;
     flags=CAN_REVERT_TO_CODE;
     orig_prog_code="current_word = Random::IntMinMax(1,5)";
     result_var=.projects[0].programs[2].prog_code[0].local_vars[3]$$;
     object_type=Random;
     method=Random::IntMinMax;
     meth_args {
      name="meth_args";
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=int;
       type="int";
       name="min";
       required=1;
       def_val=;
       expr {
	expr="0";
       };
      };
      ProgArg @[1] {
       arg_type=int;
       type="int";
       name="max";
       required=1;
       def_val=;
       expr {
	expr="4";
       };
      };
     };
    };
    ForLoop @[3] {
     desc=;
     flags=0;
     orig_prog_code="for (words_completed = 0; words_completed < words_to_run; words_completed++)";
     loop_code {
      name="loop_code";
      el_typ=ProgCode;
      el_def=0;
      RandomCall @[0] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       orig_prog_code="next_word = Random::intMinMax(1,5)";
       result_var=.projects[0].programs[2].prog_code[0].local_vars[2]$$;
       object_type=Random;
       method=Random::IntMinMax;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=int;
	 type="int";
	 name="min";
	 required=1;
	 def_val=;
	 expr {
	  expr="0";
	 };
	};
	ProgArg @[1] {
	 arg_type=int;
	 type="int";
	 name="max";
	 required=1;
	 def_val=;
	 expr {
	  expr="4";
	 };
	};
       };
      };
      ForLoop @[1] {
       desc=;
       flags=0;
       orig_prog_code="for (current_syllable = 1; current_syllable <=3; current_syllable++)";
       loop_code {
	name="loop_code";
	el_typ=ProgCode;
	el_def=0;
	AssignExpr @[0] {
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 orig_prog_code="input_unit = I_C";
	 result_var=.projects[0].programs[2].prog_code[0].local_vars[0]$$;
	 expr {
	  expr="current_word * 3 + current_syllable";
	 };
	};
	If @[1] {
	 desc=;
	 flags=0;
	 orig_prog_code="if (current_syllable ==3)";
	 cond {
	  expr="current_syllable == 2";
	 };
	 true_code {
	  name="true_code";
	  el_typ=ProgCode;
	  el_def=0;
	  AssignExpr @[0] {
	   desc=;
	   flags=CAN_REVERT_TO_CODE;
	   orig_prog_code="output_unit = I_C";
	   result_var=.projects[0].programs[2].prog_code[0].local_vars[1]$$;
	   expr {
	    expr="next_word * 3";
	   };
	  };
	 };
	};
	Else @[2] {
	 desc=;
	 flags=0;
	 orig_prog_code="else";
	 else_code {
	  name="else_code";
	  el_typ=ProgCode;
	  el_def=0;
	  AssignExpr @[0] {
	   desc=;
	   flags=CAN_REVERT_TO_CODE;
	   orig_prog_code="output_unit = 1";
	   result_var=$.projects[0].programs[2].prog_code[0].local_vars[1]$;
	   expr {
	    expr="current_word * 3 + current_syllable + 1";
	   };
	  };
	 };
	};
	AddNewDataRow @[3] {
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 orig_prog_code="Add New Row:  table = input_data";
	 data_var=$.projects[0].programs[2].args[0]$;
	};
	SetUnitsVar @[4] {
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 orig_prog_code="set units var: unit_1=input_unit unit_2=output_unit unit_3=? unit_4=? 
";
	 input_data_var=$.projects[0].programs[2].args[0]$;
	 set_nm=1;
	 offset=NULL;
	 unit_1=$.projects[0].programs[2].prog_code[0].local_vars[0]$;
	 unit_2=$.projects[0].programs[2].prog_code[0].local_vars[1]$;
	 unit_3=NULL;
	 unit_4=NULL;
	};
	DoneWritingDataRow @[5] {
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 orig_prog_code="DoneWritingDataRow:  table = input_data 
";
	 data_var=$.projects[0].programs[2].args[0]$;
	};
       };
       init {
	expr="current_syllable = 0";
       };
       test {
	expr="current_syllable <=2";
       };
       iter {
	expr="current_syllable++";
       };
      };
      AssignExpr @[2] {
       desc=;
       flags=CAN_REVERT_TO_CODE;
       orig_prog_code="current_word = next_word";
       result_var=$.projects[0].programs[2].prog_code[0].local_vars[3]$;
       expr {
	expr="next_word";
       };
      };
     };
     init {
      expr="words_completed = 0";
     };
     test {
      expr="words_completed < words_to_run";
     };
     iter {
      expr="words_completed++";
     };
    };
   };
   step_prog=NULL;
   step_n=1;
  };
  Program_Group @.gp[0] {
   name="LeabraAll_Std";
   el_typ=Program;
   el_def=0;
   tags="Leabra, Std, All";
   desc="The full set of programs for training a standard Leabra network";
   Program @[0] {
    name="LeabraBatch";
    short_nm="Batch";
    tags="Leabra, Std";
    desc="Iterate over training runs (a batch of training runs) -- just a simple loop that calls training program";
    flags=0;
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=.projects[0].networks[0]$$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="network to operate on -- updates batch counter on network and passes it to train program";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.projects[0].data.gp[0][0]$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="datatable with training patterns -- not used by this program, but passed to train program";
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="batch";
      var_type=T_Int;
      int_val=10;
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="batch counter";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="init_batch";
      var_type=T_Bool;
      bool_val=1;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="initialize batch counter at start of run -- turn off if using \"parallel batch\" mode to run different batches on different processes";
      init_from=NULL;
     };
     ProgVar @[2] {
      name="max_batch";
      var_type=T_Int;
      int_val=10;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="maximum number of batch runs to perform";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     NetCounterInit @[0] {
      desc="initializes local batch counter and batch field on network";
      flags=0;
      orig_prog_code=;
      network_var=.projects[0].programs.gp[0][0].args[0]$$;
      local_ctr_var=.projects[0].programs.gp[0][0].vars[0]$$;
      counter=Network::batch;
      update_after=0;
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     If @[0] {
      desc=;
      flags=0;
      orig_prog_code=;
      cond {
       expr="init_batch";
      };
      true_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       NetCounterInit @[0] {
	desc="initializes local batch counter and batch field on network";
	flags=0;
	orig_prog_code=;
	network_var=$.projects[0].programs.gp[0][0].args[0]$;
	local_ctr_var=$.projects[0].programs.gp[0][0].vars[0]$;
	counter=Network::batch;
	update_after=0;
       };
      };
     };
     Else @[1] {
      desc=;
      flags=0;
      orig_prog_code=;
      else_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       MemberAssign @[0] {
	desc="just set directly to current batch value";
	flags=0;
	orig_prog_code=;
	obj=$.projects[0].programs.gp[0][0].args[0]$;
	path="batch";
	expr {
	 expr="batch";
	};
	update_after=0;
       };
      };
     };
     WhileLoop @[2] {
      desc="the main loop over training runs";
      flags=0;
      orig_prog_code=;
      loop_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       ProgramCall @[0] {
	desc="run the training program -- sets the network and input_data args";
	flags=0;
	orig_prog_code=;
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  expr {
	   expr="network";
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DataTable;
	  type="DataTable*";
	  name="input_data";
	  required=1;
	  def_val=;
	  expr {
	   expr="input_data";
	  };
	 };
	 ProgArg @[2] {
	  arg_type=bool;
	  type="bool";
	  name="no_prompts";
	  required=1;
	  def_val=;
	  expr {
	   expr="true";
	  };
	 };
	};
	target=.projects[0].programs.gp[0][1]$$;
	targ_ld_init="*LeabraTrain*";
       };
       NetCounterIncr @[1] {
	desc="increment the local batch counter and copy to network";
	flags=0;
	orig_prog_code=;
	network_var=$.projects[0].programs.gp[0][0].args[0]$;
	local_ctr_var=$.projects[0].programs.gp[0][0].vars[0]$;
	counter=Network::batch;
	update_after=0;
       };
      };
      test {
       expr="batch < max_batch";
      };
     };
    };
    step_prog=.projects[0].programs.gp[0][4]$$;
    step_n=1;
   };
   Program @[1] {
    name="LeabraTrain";
    short_nm="Train";
    tags="Leabra, Train, RndSeedList";
    desc="A complete training run of a Leabra network: iterating over epochs until the network has learned the task.  Also has a list of random seeds that are tied to the network batch counter, providing consistent runs regardless of what happens in the training of each network, or where it is run (e.g., on different processors)";
    flags=0;
    objs {
     name="objs";
     el_typ=RndSeed;
     el_def=0;
     RndSeed_List @[0] {
      name="rnd_seeds";
      seeds {
       name="seeds";
       el_typ=RndSeed;
       el_def=0;
       RndSeed @[0] {
	name="RndSeed_1";
	seed{ 485936059;-159222840;-537112039;-1657647547;145613063;-1791523128;2106607544;-1034072828;-1405541685;1168591446;-1104551075;-1127380090;-44191968;-1499147300;1736139940;957219368;-255442472;1215508088;-1969285425;-275598348;653340551;-1337458856;126150808;-1810818033;-753007047;-3965189;-1612984334;-1550812725;-106193559;1574491375;1258381316;269520664;1019497624;1050120217;1251490559;-1433193383;-443196661;1591489101;-1277262814;677331143;-1599074901;1214502102;-2111109123;775593670;2072156746;2066088644;484279527;97914450;-681867126;2062364478;1284856589;-1308993553;-1806858827;-618287000;-1741365907;962905090;-978032894;-934073186;-286933;-527813885;-254730436;1525877528;-863845861;404581303;1749118579;1124701499;540666404;1277338743;-622327598;-201698374;-1902114493;-1763807252;120227630;-1335823505;478175051;816954338;-824634762;-1548229258;931437330;-1278488471;-656441977;1223960933;-1003038522;-855117044;513731647;718924848;1018158918;-1295414027;1958071499;668460555;815179185;-34465744;-321136773;-1655489867;1799559569;-1390991825;-1261755103;-755342800;1857751425;174079971;492744691;-1775667644;848371716;763348475;-1573294225;-985314454;1167126999;-394989607;-780907666;-348514450;-2073062545;-102400144;1759826895;-1975333193;1340959451;2060440181;1556749368;-1771658254;-3531226;-2082295280;-801512558;-2036964946;-816999082;1071212548;294399504;-211501875;23772100;2146695379;1898417498;280852584;721955210;-1288094219;1031774711;852039160;-539008162;-757466824;-1963137073;7285098;-2098523812;-1801770847;-1972681765;1787815466;2082460293;1909633699;-467194758;1032867150;-2005975464;146261013;16947677;996735430;-92307020;-793109302;-2007765787;-1590356292;-900749424;186632346;-635793570;1790858574;-1578635319;845299382;-213113746;-1216105310;1392501698;774715282;-2020470978;1634410321;1580542774;26967130;911882794;165637435;1463266289;663373403;-374245997;568160893;-1139928833;-342943360;2058431583;389468103;541227317;-108384356;-933633681;-552813487;-1895026928;-696437551;-1436010094;1423754889;1863392354;-2069483830;-334398044;1656091296;-553131197;1836706047;-172303626;1251508330;-1311707655;1554397130;-1409505573;736556386;-115457424;-811285722;175295329;164112142;-230693040;491171722;1704598590;-391914328;-1502964923;-1412556078;-1873156896;-1457373189;-628195569;92900495;-144311233;1692180609;1081070422;-1080495830;-394424928;-1916134104;-1635845012;-869108159;-1526727962;578683089;1004350547;893380766;973428022;-617708241;-1831659714;-681883761;-719247584;-1443156812;2080377524;-1733159088;-939780542;-702246514;-2060655989;-1917865480;1113981582;797346392;-1467634266;-165263709;121994768;1095847233;1680522034;91170578;1245777166;-888131872;-760284283;743305941;-1316500479;-1898571480;1444243596;-1019169380;-1257062473;317751398;-1201455300;-1095622027;-1241888525;1734263062;2035842581;502166247;48362791;929601640;-525612530;-1790792408;102747290;-12573749;1642866418;-1750570518;-1149832812;-2142202053;-280482933;-1753418313;-1212297607;-1698739560;1855642068;1383984924;-1234117499;1547452760;-131241421;1594791431;-248223882;1698524994;547144073;-668357336;1984583187;1709283383;-571476884;2089015274;-1174539305;-813616854;-1520019633;-449599612;-1699129241;1110502910;1654939073;1900330471;-1291255066;-1185535715;1859703141;-1386929761;417220893;10378910;1030742916;109209667;2031353503;376963975;602776693;888635484;-1411718784;-224949377;-271358686;1869385788;-1129279927;1977305040;-72798289;-1309221865;851382917;-470909770;1388777895;-1266299459;136209563;-1676565144;1113718292;1882553484;-929261083;829345539;-1164621707;-1343338694;2141655648;845621902;710658384;371342811;597269427;97663468;-228317334;-1703297348;2018373702;-1303983020;396535104;-497388653;-1636325084;918885203;-1638069227;1322194282;-1542015089;1712054522;-1460463775;656488042;1797206830;805067240;1342480870;-305561470;-1781809851;1117629796;63141691;1032429226;-69561226;-1042141042;1511235079;-478638139;-1175736186;-15775363;-103911904;-833146822;1858308329;-171889419;1493197948;-832992320;1802797151;-398789497;-1950802554;-1351595385;1959892205;-506065263;-1522670832;493697425;-824356691;-1438649313;1302975979;417439949;1907173213;1726268617;-955732890;2104562264;215801757;-1608892558;845019314;235430333;1841804821;-1698198679;-834452035;1896821629;1978707316;1861946802;122041385;700155576;555524132;-218467391;-418349288;-616261066;-871746183;-453286733;-522130686;-276348424;-1802937189;820931314;-370559728;1386257686;-1928312149;-1241454778;1291494254;-866000026;-653081227;-565309653;-989830042;1235528312;-494861219;785320119;-1269210923;1442268534;1492916375;-122160429;830424502;1400825973;648268652;108007237;155514083;91691578;345793678;2070260659;-505610008;-1944313498;1857270308;1379800906;-201108151;-1694809627;-592011049;-1511331495;-234044003;1679656717;239056244;-1654018947;-210106667;-727238103;-1287623090;1199976889;76879702;-2086060883;498123;-321236520;-387088343;946867285;1830902861;2124552129;1525227654;2014516746;-727673057;-973235243;1615725368;-519059384;1534536291;1549806711;-386485668;-480102326;-1679931491;2086623884;250556531;-1133467086;-1965631804;656192499;977603509;-1636532928;533446370;615990019;-1472262903;505940530;-1298216554;1704049985;1032252446;-1754712139;-984290285;-2126138319;-1084988159;-1385203950;354519860;136757609;-1968537261;-1448058916;-1661623682;574716117;-1219384589;1615490048;825239377;1816190434;1099630461;-952151589;-609229784;783092200;703206010;-963471851;750845602;1054288351;694476273;220760844;-1061402188;96273964;655686998;-600507671;-812369330;1288255326;-1851936391;-1785800058;501799956;-550401563;1587642304;-1386434008;-1743731050;-688943511;-1667241000;-884623095;-909222662;-1527058106;-1426418210;2014567895;1516768634;-1667160428;1599373628;439067680;-1427316048;2141500491;-1501774524;627778737;-960547607;-416867225;391887242;-1740566647;-204896529;1210747189;-324995170;-2125481972;-1638589022;1406095933;-1821274166;1077396487;303140478;-1818187817;-1425656277;-1819389616;837351806;1491132123;2012256296;-2005337260;-1114230506;-200207603;-615447376;-2023774262;-1879098348;1400143067;-1514410448;-1862550039;1096921831;9612527;1190339453;1682857503;-1105513974;1287194461;1299457410;24832486;-906731530;1886845666;-1419151159;63851858;-1660721770;-88127071;-1488076504;-1640844847;1810830719;1178987255;1494047568;-212180424;-187214197;-1812206099;-1975334767;-910897338;505722241;-333142226;1445465099;-125559747;-1393666878;379728397;-1792952721;-639086512;-2115428849;1349046898;387945649;-1025546968;1467215691;1322386567;619807028;1238945755;-793006758;322897782;1326848488;150269000;1896596164;1413629718;1540513137;-1676685425;824859137;-236515898;-1830167013;-1127283904;892902766;26737867;-2066980483;55079042;-78121038;-1357286338;836958742;1157395225;-1764146460;-1529971413;1049711771;702174870;	};
	mti=624;
	is_gauss_double_cached=0;
	cached_gauss_double=0;
       };
       RndSeed @[1] {
	name="RndSeed_2";
	seed{ 485936060;1653210413;891383390;-2033002215;1528568491;1862369047;1513351604;511709552;1273745720;-342881146;2049645955;-329566635;-731220486;217173066;1337930560;-1683750476;10031838;1401896871;1713238672;513231944;2138808444;-1810614682;-372180598;-1279540188;-904480490;-812236190;209000799;1516231062;-1704745041;-808993698;1076237775;827578469;-609915655;-1569994557;-1405321913;-607495844;-2042488417;1192501270;1690171449;-766450113;-523963948;1677752572;-1076223749;1602437992;297519513;-1926731126;-1683173418;87192275;874461295;-1534219524;-1856478104;478304261;-2069207251;784063680;41998326;-1608394171;924589371;2052660096;560390943;-2030292362;-1985217536;382041863;437705985;-28198236;-1582103773;-1707875002;-1861822442;971109415;-488688985;-2036023559;1712368717;-153311677;96851848;1813893361;-1826365702;-129912797;1779145964;1409990350;1946357497;1895800871;-895974066;-1365390158;798749122;-1321913379;-505885105;-721153967;1100239536;781998380;261864116;-1975059107;-1926050347;974406958;256305538;880718503;-634856639;-968699031;2070356786;1542205056;1519936071;-2103428095;829048979;1607093604;-939616705;-1854184941;1201654301;469219701;154060947;684772714;775210302;85065699;1698656253;1155074779;-1805258126;-66677087;1805918300;1805486628;655904269;213303446;1564754340;-1164823664;-632980718;-709056722;-685766085;-324796269;-453949108;-929680472;311813621;853989160;1615809352;1234289998;-1035788371;-701391319;442360086;337155123;-1503214683;1926271082;8338879;-1904765980;1184723016;-80519592;-1858081421;-1369364702;1545900078;-1327560166;-1962028024;1194590851;-697659428;-1574823282;24995280;983923621;-1342696017;-1003150632;815461375;1504623412;1586641283;-83541275;-1238729894;439140949;1945839911;1395036829;1156666412;-1568847006;-1201332862;-1423039453;594602665;532678226;241328384;-105298521;-1009172900;1336898340;383400771;-1331348198;-359992540;-16593392;-1024952019;114519509;-1274785095;2098706296;467281007;-1919367298;1684803744;-739264198;71472435;-394123050;1560746433;886368633;926998135;-857312082;1477942781;113324329;-1314498837;-947782740;-71175221;695416489;-850132369;-1738227361;-1866068107;-1129592392;1523654952;-211810572;-849481925;1973180897;132666922;-2014545571;-1831290297;521366278;471429164;1413795371;1822413154;-539977760;-641111967;-402611843;1897801098;1841902508;1657010455;-281539451;1065002934;220107175;-124594499;-1374918703;691659291;-795629436;-551371487;601477449;988717997;1803102498;566621873;-1359606344;-1937640122;1617111225;-722368130;-1001774024;4251439;-1085196940;786447992;-718348733;1143861292;149084078;883766932;1754774867;1030526026;-1657267165;-1088961801;-865597284;-1576960337;706514998;-1611936700;1715670677;290321756;294914629;-1932920013;762598480;1043600524;157222969;-747388805;1106454615;-2015432466;274160157;-461696141;-905601997;974934004;866197577;1188548307;-1332675615;-415966057;-101565587;1180782960;-1089365088;1739201014;-675123584;1986966973;1091784763;-1406946830;568239297;1883851319;1427844705;-466965260;-903385720;2113575917;-1530605261;-1175403923;1494425060;-858957453;1676753483;1449368142;-284612280;-87855435;1414796525;1725075004;-556022734;-1844862601;-1956163252;1801966314;-666699044;449270305;1719537964;1529404649;-1079029583;725590729;1572326264;-239728407;-1107509377;798782079;930620490;1675095138;744898368;-152029838;460689352;231457564;-1567492287;1203661221;1210348267;-733572726;1249426758;534687037;909836108;49964600;-1727640235;-1874783343;1244357950;-720983525;1666184377;1233782234;1838384042;-363432261;-1733472291;1060625217;1076251372;-709925431;741491707;370353745;759593024;-588795252;1541470904;-1929450165;1452191772;-1890188863;-466284992;358972609;-1777040776;960546166;1853099747;1877922432;627513148;-541112316;-1875629284;-1518726608;876867861;1852136357;2105797905;1515853998;1569351018;-506640489;1448571589;-1337512778;-873662361;1076331736;-1549890558;981024102;-1451568987;-1079070133;-917214922;-686956461;666128635;1146570611;-1211550873;849696071;-1093753486;-1541392736;-731889317;911860010;1796952325;-952230904;1087370444;162024279;-1558689334;-1131862688;617296675;1820191049;-260271389;266327004;-1498197175;-1486880491;622247570;-1678552294;606052857;-1476908609;-211182060;-1796821097;-603126706;1653270759;-1648690619;379960971;2083098976;551175631;35803958;1150073818;-485797388;336955137;-1899704844;261613982;2118564583;-801713072;1334260050;385933907;-1061374124;-1074600471;625769038;-457047970;1363602250;401799473;-158430480;-549593477;-457244939;914767532;-1590376581;1491170653;-1102738707;-380454675;-920889975;280664854;-63441069;-123837386;-208607344;-48363097;1669239645;-716152586;793534292;-1821273648;-2020217977;1171462695;1146202285;-735078004;-1226957284;2123493768;1888853440;951748569;2000272210;306926709;857600224;1188555288;1915076246;637796941;-1326768356;574379666;-1038070953;1582935522;-1130031282;2041437884;-520681646;1402420663;1655423121;-608171372;1989148248;1448868835;-2025565199;-1098437721;1328711394;-1118587815;-804791118;-49558367;379088823;-1074920447;2032284158;154677867;991176968;-1742636550;-448603989;99181596;-932479775;1516976384;148244540;-1870832252;791453111;16919053;817270268;468050504;-1748840379;-951898911;582199561;1100383085;-1800755331;594546173;278719412;-369601560;-1555111780;1889873468;-694885128;2116398063;157365455;2118491797;-647969201;157346280;-708742539;-993177476;1284356874;-833572793;369488069;-1886098261;1481920928;542793593;-921801294;-1220804149;1075857220;-1581052623;342458904;854011250;581235189;-364735323;643530107;1788630661;-946419693;-1476558768;183338075;1845947625;2010882443;1977587574;-2121895176;-1435948888;1457915673;-1271617920;-1418771117;1077261311;645198657;-719797327;-983729849;-459129374;-1538861868;-776830850;-2120574878;-2010546190;-1385763901;1544310329;-1438722515;2058529185;681807415;-1490842421;-1663230362;1027376014;204007201;-306521311;535537799;1155186273;-288457217;2059899532;-1140504382;-12290590;2118053096;1106979601;1603506037;-1993822486;-1962988625;-1832463767;871975264;1799247114;-1570278782;-1869173076;-575665453;-1209166274;566649819;-1649239401;-498877446;-1272943505;1573658164;1831160349;-618448063;-966085312;-1678810970;1956964076;-1860242758;337788114;-2050202859;-1806997169;976601758;-1230088044;340474733;-529086143;2036317003;1963294836;-65188500;403240463;1436556592;-266223717;704704831;1077077795;1001678003;1559529449;546097363;-1328994165;1305301338;805817909;534886968;406745704;-55259815;179318996;1198569975;1622672994;-1799716252;371722900;-444505413;484994288;76508425;1429133287;-1672526311;1720196611;-170857689;1732184978;-837403042;649159185;200133654;-744272624;53581282;1022629518;843114091;-2675299;-23031875;2021090910;1300053220;-566061629;1789450027;166223870;201248675;-1977931587;-1229042486;	};
	mti=624;
	is_gauss_double_cached=0;
	cached_gauss_double=0;
       };
       RndSeed @[2] {
	name="RndSeed_3";
	seed{ 485936061;-829323630;979677239;-242748234;428566637;-2049079290;-968045158;-2122121628;798815302;-40905305;177212862;-899540479;-424848170;-224692970;-124752297;-799900877;-221820416;-1185886656;-686771684;-1144922802;-268567792;2081831316;1218999519;-1424823891;-716318429;1086900665;657657266;1096198485;958054976;692249437;-2036631345;412573184;1191581216;-836410330;-1336193093;-1413516000;-1004115826;1224062150;740282793;2002790612;-2002970319;752630856;-1793175406;33741051;605744691;-1350679220;-1660283404;-1133162435;-403480565;-1046402215;-868268876;-2051208346;1852441256;-1445036574;121932182;-1765437851;-1913172517;136959958;-874664536;-200079438;1551286801;388309133;1609321695;258941397;1489393225;-429616471;1926289236;-822840884;-402543121;-1070536095;-1050088720;1690680614;877559723;1190650304;1071864431;757142806;1576015866;409717076;1116758642;-1127521618;-1765803476;1977766519;-1448759584;-1188892291;-327205265;-1416663823;-276232395;-798638427;-374010410;1437102690;-715056023;-1502941139;1208150503;1704746523;1338182304;252336868;636870740;559576453;-466122021;-1356898405;179869889;-1646621302;2075107086;1976682578;1044214823;309899980;-723405082;1680913860;-1394531291;574431952;-311423874;-1219571008;472971514;-1687812845;929896743;1687276502;-92505273;2146436681;2030502622;-1469679246;-646260312;-1549704208;-1060704012;1345470702;589071815;-1169602816;2130122312;-1167598516;234989894;-1826078945;-1905103885;243240856;156499836;-297719695;293074816;-599251449;1055597596;1977367445;1825682926;-157110570;26343317;1562930006;96790753;-243840428;-684071965;-1612068879;786558577;-1730900952;-1744582874;-1593059895;1537342637;1339341939;-1763353710;-2022887319;1407868369;-665103445;1701112292;54449398;-2105824340;-1016276411;-626289602;-508485198;1841366135;2143545649;-530206572;2076212024;1064378147;792724598;-841029322;1077043090;-368418647;1081679293;1624659928;-595408310;1373233275;2137840337;1119593664;-1401271850;-225602218;1746495548;1081722309;-1287853303;1646173965;-2105136013;802095693;822222362;1118292732;1623161740;-2121976739;-450002632;834244613;-127172680;-337545081;-1257295659;-1711123307;105983830;-2085178446;-418507467;241321236;-1756826197;-1092657803;-1721397316;-181377856;-1487332166;529452388;-1392669375;292984637;962875616;167495984;1867583681;-1036886894;1163861768;-345894815;589490559;-2110515471;1668946358;2129663243;1530963915;1758678412;179900028;-114879544;1687122676;-237995897;-212193037;-581582960;2002731232;-999030105;-643117161;1720064584;-1158123342;220374614;-1911970091;2012799675;832372299;789804929;-1373032496;-1483390778;1927770689;1362383918;737894010;-317615854;302470566;1766105456;1485843336;351043329;-1236490918;-1776200530;-232098605;888366856;1466101537;1977645210;1381468450;-656288053;-1400715803;-388910047;1494238313;-1763793400;1861803251;420130428;-1376046097;2053132933;-976932071;-321121208;1807558046;-702877757;1898862537;985311986;-708905851;-1126420502;-2015752299;1820391073;289205807;-1077272421;1180679790;163088861;-1734301116;1651287218;-35273036;-973056439;-531257783;466499146;124716619;691576753;-1700545808;-700300138;-1158951706;-1175856366;1022295663;-1183004181;-945267954;-679419325;783123555;-1459407053;-1792737158;1210148990;-980209086;-2067882547;105974484;-1735345458;-794501209;-633929504;1365366204;187070911;-443662198;1097320509;566107357;327068003;-548155326;340456409;1426085586;459156853;-860975776;-868432825;652071949;1415225179;444467645;-417661491;2015060355;-1937110136;-613848911;-293891718;1038690046;1808552312;629466880;1041114180;-1160203239;10388205;-1558872632;-2142127110;564060705;1704583503;-2140495087;886866635;344669796;-2079382846;651261711;-20709061;277050473;1476927423;442709321;-1046013919;-742082369;815628162;-873602655;1174911042;276598472;1896177218;1315245258;-12341133;36736397;868437759;-1370643718;1704985912;-344157730;-885009773;-640867277;-207816620;-1674212680;-1955379512;-589100775;-584613206;1143078678;-1064438659;-951392991;1360632278;-1689337280;-1814694024;288419473;-1443841627;1726259028;684350203;-1016907398;-835293391;-1621515729;1096946231;-1897261371;1006402811;408724352;-1467219206;563864915;-109058501;-852374123;-2100993108;1543140133;-1486245196;1213262159;501795656;1352252651;-182008874;-1377091186;1589168578;188085878;-764845034;45529810;-1882187676;-856541239;972103230;-519954941;-1176250482;974256075;-247502937;569813317;600422091;-1259027798;-1823164964;382832683;1006757261;1936918328;1506696213;-767751811;110833232;-1422780629;1195840969;573284741;1531570199;838228045;1905069313;-1550114143;1211295473;1245417043;-1528362498;1231212049;917626358;-1649460811;-1006258725;2105104353;1476824330;-1151497726;-1061063764;-1861989192;349688080;796331263;1592105291;-1197206045;765004919;1884199846;367053207;615668040;-1122188514;646379459;2016156839;-716823241;-1560181954;91743335;72957279;983961400;204536534;694779437;979361409;-680733786;-1598697765;-413417888;1489639891;2085327775;757255452;-633148973;272011480;-1359823103;1796405497;-729746525;44089324;-543881751;-681864928;-1279197282;20141660;519852061;-1388961213;-1435021704;-1217969674;1538562841;854133326;-57225059;-1183392210;1811887413;-1818963106;1985454375;98167770;1495775455;615300980;382246563;1954599727;370733319;-1677403995;-2039751994;1811690808;327909986;1199498384;-1990670308;-739179586;1866571898;1260594545;-1175013605;-201220151;-1179834721;893731551;-46810390;261648605;227921442;-2108127396;686864393;-843813247;-1797182145;917995527;1041908666;-525253542;-302867946;-943781565;1259464763;82684638;1984379283;-219751784;-1102171098;-1950492620;1813329231;1527171016;-854170288;-1353423165;-1836002006;156140238;731634509;401914985;-549353354;1041528115;690981418;802684574;365692003;-1433683939;729890122;953141826;-49930213;457147274;-1908817531;1141611351;-1777381117;158040187;-1501002338;983643300;121735885;935229947;659191074;-453154170;-73452138;-862985497;426543635;-398743905;-369739347;247783880;-1124524533;2107288753;1296061333;-1608044662;-727872817;218296484;2037167837;-440147210;191932884;-484346160;-930099604;-1891706119;131709494;2097635198;1987880524;2085082003;-645030707;-815063686;39281650;-2070613328;-1081932687;1329024663;1207585127;1624280440;-1202940936;893201886;-1480529709;-177556045;639951023;-1047310773;-1208324951;-1230936903;296866570;576626486;1426241683;-1562970656;1502803569;-101897096;-1564646960;-758186972;1235967150;570309207;-1025075808;646071965;326820672;-1445401968;437956587;-2011615991;173451946;-668184218;-691131346;1177978135;-866825723;-798135114;525058754;258714340;-1876266417;872763325;1206885614;-1156721751;543688662;-199843890;1124909890;-480450863;1391162685;1028022032;789779381;-1375361585;-1299177144;-1246511462;923896929;-525120081;1258468167;2028679946;-1670838076;-1332973940;-1133273483;	};
	mti=624;
	is_gauss_double_cached=0;
	cached_gauss_double=0;
       };
       RndSeed @[3] {
	name="RndSeed_4";
	seed{ 485936062;983109623;-1414562955;965698806;-44795118;-1314412870;-26919266;2126428408;755710789;-2096541886;-657095606;973554136;-1274965436;1674587051;-1306184672;-159267975;-2094765774;1509437441;-1600458734;-1744222621;-889606823;1740410519;63735620;1458618859;707312490;1178839787;1401923692;1875560476;1424193677;-1793754279;335175173;-1942305512;576761186;1654381003;2073036500;-548557012;1253000367;-1951844661;-208458125;1643856471;922432022;-981301033;-175804466;-787164916;-1400864233;1055100790;1271381948;-980038976;-319792609;1641056573;1096499422;2026958638;-659061569;-1483474335;-350895035;1267328469;1379016924;1667775594;-882763407;-2022699979;-281067281;-1809389223;196658213;2044735448;-369294883;1810074327;1777093808;68942616;-1777211204;1339064635;318834216;382391823;-1191347405;-1387932770;1410267350;-1359725538;793424728;-1445275131;204915729;-1459653628;369753262;1525403383;-2122035872;1548351997;635141312;-828704747;-2105432316;-122479691;-2106043098;1661328269;1151437462;84376814;-799954878;-385275134;1906868419;1638964969;1209063912;-1264407986;157539422;-739885191;103110022;1177121859;-480235408;101034182;-1929933690;-1619454851;-633991803;-348517303;1820357534;-907627224;925269349;1695385160;-1825436611;-989492148;-579886435;895727305;950513345;1240742810;-427919459;-1959084083;-243502045;-1927352039;939103009;-1759857280;-1220923706;1683445713;2065954190;-561878806;-1107880595;-1761813428;-775247544;2124082714;-1018600405;-274338739;-1240598196;118495821;-1685547543;-1299519168;7362964;793742319;-473031465;1737151537;849569662;1766605637;-504238492;-1780928972;1675895264;1481230168;1345931185;-2084144891;2000912217;-936421809;-1141917548;-1015670329;-1245835538;1651257271;-802080406;1493424138;-1183899659;-1263285230;-678161680;1412728192;1722922375;485184641;345530505;461793202;-1218237472;-137739567;1816969090;1297721944;-1258760505;-1937823388;-1524831254;-234865867;4276988;729565723;376352855;-1670700540;-2119982320;-984483635;1830774778;-1746511428;-803596628;-2093507902;-1040134536;-2110895552;30318276;1356302351;-583390142;191446882;-417368984;1470312950;2061559347;961123451;-304453559;-889143307;-2050989358;762858709;1197952463;2097606925;-1307539836;1311558055;1528784200;1368786840;997253417;1344718586;-1264200491;-1976235870;-1528166416;-1640782517;1590904735;402706473;-455667199;-1215615585;1620903111;-823469835;125648870;-1025094505;-1411159234;-1010799737;-720367632;-1685825860;-1261180972;1569062477;-1626865444;-1263458697;-2136225269;86280048;-2014027756;1399828371;352544640;-247769497;2053151324;1866706074;961482001;1906655648;-38203791;-1612991001;994660679;-849538830;-161502971;-1940134321;1453068883;-912319155;1737969338;-487513156;595415633;2109068268;-1365151111;1364393600;-512199969;1577127367;-1892456934;-342744971;-817891956;160328042;-1786818094;447977489;-105703241;-120777721;616237720;10389245;-2118932521;-1014680304;-461759353;-183769827;-148868128;-855165798;-1154702743;1349802052;-2029600441;1207643720;-505588515;-1999680857;-1891778261;601564992;-2143830700;-542459389;-1310366954;387042299;403426847;-2066748844;1523153672;-845914968;768414611;1583834396;-1817023857;642023360;1067722720;-1942315903;1014422481;-1522625640;-1344035098;-111354599;397157992;1683017775;-326319794;1813346698;424761345;1496793744;-1016865439;-309474601;-1773634862;805422399;-604337653;65977945;293452623;-1560203682;97159040;1609234101;1151707706;1225964926;-1639531693;-1755496146;-136363114;-78419964;-1765487873;355499022;-1696173884;212759901;-819063823;158884283;-1192713463;-1940506726;653019196;394566897;904258907;-185716434;1854242057;-708076175;-1229643452;1965987817;839194580;-1936794639;1874252589;1079500203;804286306;-114989829;-1315860694;-1105075173;-283156431;-616974577;1913562386;1570983126;594370859;1330928208;349437007;-472788090;278766037;849270630;-440757604;-1855196902;-616302632;208797128;977348938;869524885;-74886611;1634339723;-1211537192;562628969;519629013;-1499407758;191635354;868737837;-1733642451;1839951352;273393067;-1792155418;-1095778460;-1936844113;923933875;-1201266926;5886660;-1466495799;1459466381;-110783309;309713640;922584833;2085408223;1837828113;-1751466036;-950735933;-1997880258;1430751531;1707514130;-1563782912;1888700748;-1183768092;-1441761470;722488773;-210756289;663004723;-1549017433;1064838562;-1242002316;1836356121;-1345028860;149392107;1562284869;-793018525;-1396465040;1681660555;-1481616380;1504861681;-1456176828;-338724813;-1719919482;1893066155;-68053078;572082246;2106653496;187932696;-1934425324;-1394540725;1684130411;818780017;390019637;-175417974;-1820454481;535662564;-638137704;-16260148;1706010961;-2129027529;1413007761;-516581511;613093068;1297876007;-393217366;-191801510;881137867;1146383558;284584755;50042832;-1204734270;-2131272845;1839042121;-733631459;1701509004;-2104942248;-999730118;892321078;2089913864;-1196499896;-1360624402;-1870086439;-804028123;400116669;-2140272559;-870140544;1466546545;1661147891;-1908202178;1678691953;1264673782;-877878982;837951045;916185090;-294751084;303681630;1329824994;-839521700;1493913673;-1050331593;-497272748;-420885724;973473589;-1397803332;-1935783734;-1931624259;417088561;951853612;-1883829964;-1348564441;-2072162445;755683952;-1863124980;-419603101;-963757890;-1146844816;-275366438;709790078;-1560105320;2109034149;-166081384;-488002036;-1430211375;1955677222;198820939;956536448;-2022382998;253689075;-79898421;-58945323;-2071876516;184111365;333161961;919676894;1307347592;-365626624;-498031325;1980712853;643920730;1789111929;272240464;-1538663287;66545617;-102641552;-1513502117;2052421658;-1380198491;1796568546;-1195180145;-1198765662;1713352226;-979013422;-983802503;1372400935;1462118404;26966272;622313224;-254695375;-417849404;-403240306;2130157741;-1855819287;1278916293;777322851;-1828943585;516792194;1711964764;-1368115772;84553522;-760978737;-682743662;226663500;-1874831340;153127111;-1267107939;-1907799338;-675152960;362328332;592529370;1568343329;1529292736;1828715078;-908148955;456573473;1164263977;1081246701;-516203966;-2088868148;1032114030;1818867343;1044973104;309273371;425676499;797836908;-2123606326;-911784169;1972683028;580349050;505485396;-1285583017;-1346696259;1414388624;439303019;1599845998;-2066128125;-523855202;1835271979;-1703784499;-1636284953;1746805398;-628656431;-1916386023;1374796007;-962917633;-252693586;2554500;1963818072;1481421410;-2039587243;1651034522;-830963857;-38857755;1526919688;-437301032;1672289203;-788778617;1956327266;491433822;-102596506;-338315478;-1200277889;-1177393500;-1082435630;-1269303451;1911274745;-454408145;977405876;2014863453;-541900122;-1629054348;450762986;-614788945;1267573306;-296773978;1468513913;46423993;-658323617;84731311;13256559;1477548080;-21346629;-1101111041;961337;-1711664922;955166814;-1390418559;-369251813;-675088923;919411756;-1204573237;	};
	mti=624;
	is_gauss_double_cached=0;
	cached_gauss_double=0;
       };
       RndSeed @[4] {
	name="RndSeed_5";
	seed{ 485936063;-1499424420;-1996369896;-1362426811;-1387024633;265337342;785665852;-1831969101;-1628498723;1285001988;1990045187;-933054251;968323706;-1963363281;2094131919;-384048811;1425075454;-2133133396;850515384;-1550792277;-743833407;1506287263;44606060;1281876147;-115808174;559808782;1745414304;409530528;-561213636;-2066334984;585830080;-119434785;-1257158676;248626951;1160518885;-535205353;1515687432;768400050;-977696160;-638086090;-428812783;-1080944829;-774113841;1256596903;-964906838;710616026;1864027952;-2067007612;-661037554;-1775103918;1051410370;-184747587;94844458;-367339321;1475635594;112592654;687425214;-1469671633;1973139963;1254959581;1130119176;2112427210;-1633495211;1390249106;-514000577;-877432595;-474158040;-1927729094;390463068;1749063313;-1879148778;-1364545749;1462963317;-393715;-1594312240;1246802469;-1876456320;-1185283689;846093591;888998242;-343398918;-556254066;-946710285;-1125808381;2027211961;-963953427;-351508420;-848832462;838960301;659877274;1860118556;2135775436;-2019246531;1971832376;2134160859;1444112737;-1163070656;-1288156309;829419983;1513827854;-613928113;-895227551;1681819152;-656343524;-6563421;-1286374263;2036565569;-757319765;1883430324;2130335190;496299329;1199596564;-2083931719;-350725576;612510905;1448715888;1149772809;1094090653;839832834;1525029953;-945330760;110704192;339388346;1828501213;227795272;132082149;739464407;-1041725358;-672652939;448223759;1945210733;-2147327457;-1304610059;-411602184;1199943821;-1492282429;-1565223763;-1181134700;-1044966984;-975957422;917476225;-37995662;589950243;-1889056162;-1290824996;-1496334297;-624059349;-2134375333;-2085857103;526109236;-170353894;-1289448844;151580454;-359944041;-1901601026;-2022451705;1683955093;-1083777023;-175309619;629930981;961212153;1229097438;1545714845;1602414127;1863675594;-145991236;1969201153;-614850393;-628972196;-1180428764;-1331620952;616086717;1057922109;-1274328642;1728951258;1285892374;1942455747;-191195077;100402890;-1550399387;713896023;1593025032;303349571;-1151381210;1459832812;155465274;478441372;-46234297;-1277691760;-331795369;-1377920542;1850447391;-1174779754;-1130244315;1578025509;-2135696137;1860717165;-1435686559;-1913892907;1473679258;-876766225;-1380724507;-317846803;-1092243791;-2046773141;-1747455174;-1075581466;1618468803;743971418;1431474259;1661784876;-1286773100;1065992194;-517483617;-1103562398;-611400777;1341819612;-1439428854;-875743486;661470528;-1331664100;510611891;1418266493;863326411;-283999241;-963140571;95820256;-372173245;-1071249372;-697362616;1415074941;729002451;-275508185;-2127612131;-772188379;-1324566295;-613959517;-1642498035;-1649056295;2031117142;-201211581;2111602481;1650384610;1894411138;882542243;-445031868;-434004487;-1834738023;-379713761;1705691909;-1071432306;-726483300;-589214537;-1076127743;-1575906003;1108280202;-711013929;913577381;-823863269;546708091;-859748725;-2068341587;-1139574511;-218173306;-51441023;348643411;1345121481;-2048363533;307804193;-1401860334;-1787575714;171109211;428314359;-1161914492;1492287216;36835112;-235641892;234274576;-2012679578;1174087307;1232867210;1930462704;-1832267217;-1504378404;-761558094;-755575054;-520042701;-499693809;-701991716;1788507164;534664595;-376934622;473137705;-1944499118;-1509823306;-279267285;-462417680;334347272;-1700562862;-2012133189;-137645271;1684351679;318475300;540643171;874942015;-1391536372;22239160;635114699;1662834763;-1406734233;-255465969;1082404851;-1720881742;1471117225;-1529143678;591759803;-918459645;1444034621;-1897116438;-759529273;668578452;-1954502235;-65122523;-497381055;-1773821362;224900417;716262635;-125166338;2129384985;1128681665;1630838026;1897519522;740301211;-1382347148;-1507599396;1742835173;-1037565884;-136373164;-1416511835;1511561270;313163271;15104280;560177102;-1015723107;-1676647250;-1458846411;-1766834419;-760157882;1233450645;1467383233;1531665950;15973018;-516224478;-1482839706;1385585110;877036086;-1292220750;-1151200043;-1329968839;1330411694;1451902323;567634275;877498489;607765032;1657340724;-25648554;1087015415;-2122902147;-118131829;476208665;-170294705;94311791;-1002119873;-1506515423;743049285;1837445552;-2063903411;-1594298204;1468647672;-793211720;-650339773;1530207421;-2122779734;1488259783;-1248118882;205745677;1792696739;165034093;212965765;1541193726;886061089;-1189687412;-806034802;-961161174;-343197001;-79397233;1335024328;-1014701094;139200299;1275189382;-649351725;-1148197727;93679841;797242200;-1391060148;-982022821;-1544833714;-719833965;916311656;-2070931295;-629279511;103341037;1263246109;949628841;1911898187;791673041;1137444117;-2118011259;-842251291;1698095457;-152875900;391279080;1339300398;-1946518222;-215870056;624917200;-965425734;1039205544;1814872052;1007999574;493628316;-2142784965;-432483539;1806758103;193694752;-1863620013;1023233193;43299170;-918196384;1622535878;46395;971052288;-586528070;-837059144;1530834819;808833543;-2066571903;-1342684818;-1578590884;1385129431;1626125616;-1968064744;-858773242;1865866686;-511068895;-114185679;-1542788734;-238837431;-1266336260;1622172929;1319426764;-1212347986;2071322282;72834630;-1814714002;-588602003;-1457707976;-965192011;-623141470;459758426;-1759496616;1363254617;-1719718512;1972248179;1551566548;1594142948;1908889909;-221313183;575626632;-250236793;1017203188;836879141;1904462971;1623390213;-71172232;94347372;-1748494206;-1567740825;178033345;1771450638;-1276419115;1663923390;966936647;-2086304528;1058076520;-1712306697;-1762740071;-1120482792;2004592692;1178647516;-1155635931;1328597336;1735332627;1569008145;259795528;378878049;984754495;890633942;-152563094;1749579370;1289944373;-1418019965;-498400027;-1753086273;1192415123;1618938013;436069264;417520085;149286927;1956167410;2065195751;1507204295;1481200168;-1660658376;1295176686;1208059480;1911465003;-567852895;-1014942726;-1097284530;1634082830;1222356734;-1404337233;-117601706;-1889398113;-873308408;1758028911;1161133951;-1815626544;-208149771;1612460842;-1934674668;2275788;-944407653;1793465624;-1442128386;1224307342;-1096696946;-201266080;-40681420;-839465255;-1162010583;-402541025;1038473013;-1437841645;529999072;-612536692;311437208;-1388840666;1264947555;1804455898;1714173592;47738255;1156432542;-716316177;-1827311535;-1764311563;-735894614;-980319003;2094171895;1644357448;1474974472;656512457;1307028362;201397013;-1321875832;1463627954;51971040;923888034;1188323629;-771824480;1180725652;1474858767;-189730611;-1202765426;-64173435;-2018009304;-507164707;1163733730;703228124;-1449321190;-348760889;-517449820;1164178996;-156925381;293886571;1518858635;1252730823;-1405507212;950666213;241965233;-491554514;-924654053;424649171;180995483;127396740;1821741426;1610477502;-424292421;-1611895303;-2063615639;-1995740006;1187459676;588621334;1074155284;-1469943120;1494647970;-1756196424;1470499532;937753164;2136829544;-1865301286;-672171610;1226263944;	};
	mti=624;
	is_gauss_double_cached=0;
	cached_gauss_double=0;
       };
       RndSeed @[5] {
	name="RndSeed_6";
	seed{ 485936064;313008833;-1237975257;1591441052;1499123957;-2125265847;890885277;-767301896;-2143063025;1544732202;-1302918655;2059898426;58044499;789576652;295863178;-1102528639;-2117752385;1526537378;-425425055;386587581;-1525950811;-971239688;2045983773;-1125797085;1164137757;-1400860635;1089388157;-410680569;266720432;1431247245;-1078656934;-1577043241;-2124008663;1222718232;920685055;711518398;1696825626;-757701940;-249642287;-2094842111;-1766492329;-1312321102;746826394;-1468745491;-812786313;-861441295;-1758340184;249537601;1995019989;2074867157;-97357610;-1508146884;-239719510;1474013922;-1470961979;161909690;965847706;1291499771;314492124;-1365154041;854741557;1661717542;1828285089;-489246369;220345740;66784381;-14298477;1770726163;-1490585506;746567825;538995323;-752691762;1170476841;-1131519215;1354187209;385416243;-1198011541;-342003270;1594416971;-1861963135;-537425665;-472127555;318315592;-228413253;-427151124;322844064;-643970954;582595456;-53259816;1999273664;-1528804481;-514937428;-1832506009;-801245642;1755807815;-140176899;-1330444394;716976581;189075483;1016778250;-1684233130;654952841;-227158925;-969097065;1829973708;272116810;-471657572;191878438;943353450;822757951;1988362825;-683315497;-1904202220;1540748575;392741704;63869915;2090698971;777627767;331884137;1130649828;1416404945;-1894687351;-273265839;-931620395;516044778;1374833103;-357016380;-1043064318;480234469;-26476838;-1343443681;147837428;1594190280;322850258;-1476913568;-41334991;-2002724542;-327616823;-11438020;842475622;1999341258;-1562652252;-1485468404;-1119935211;744747427;1597214944;168268375;-1230091290;-1667435128;-1206273529;-1730801265;-759930312;1029264607;1757598612;1026242403;-1973037654;-786680860;2000165312;791769795;2084676238;-338908661;-1795858999;1217176761;78345531;-1308699669;-1336914798;1620526454;706484122;1122810474;1410715616;1946250607;-299758831;282656966;1416709323;134626912;-1233650545;-1755768495;435775856;-622622238;-776614024;-1725911237;-1103518926;-1688071514;2082938731;2133139338;-2007771760;358376788;351923935;-1551264329;-1705447898;797128946;-1629685191;-1430958841;-1763569478;-1758785190;1236136059;849816294;-1506606205;1669819307;1722905817;-848121344;-1852254472;-1792107668;1955803441;1538595004;-2116360098;-1942296294;1503907655;980893038;-152233161;-41512874;-676892836;-817772465;-2093436207;81164565;-620952800;-1502283609;-1380358414;-758379126;-2004965144;-121381074;233906846;637220660;-552362909;1208750784;-770461690;1461329883;793787365;-638046403;1122292315;-1857083288;-2084459335;1039546799;-1630770700;-1189841672;-1568542323;-1770859177;-2134136714;1487637170;399279246;1585597174;1145488228;-1036049205;-820999205;2135278892;-314122058;204113247;1203730034;-2045622441;2092278402;490092969;1793012136;1128335785;2053879877;-1409804334;72332815;-1438000149;87192814;-1476558616;795285333;1585164941;1798200897;-1384419258;1118023643;-1431958518;-466941903;1572536004;545321412;547178336;2095024621;980727594;1077395105;-513681872;-1499476432;-37544756;-1509022274;1844084800;-907123782;75127315;-1191266922;-1296705412;-435431217;390444438;-1144526007;634910899;-751703364;143316345;-1923941668;-1374697290;-1953594331;1694761861;-921499593;-1387130456;-2139425993;2132562447;1954012845;-1071061244;-118037012;2013175669;-420086289;1164213064;1369290234;2004426805;-965637709;290096032;-868839599;1199009420;-1641868332;-61973854;-539956294;-1717435853;191764364;568145780;857732605;-1138003189;1861432520;716334473;-478715574;371749899;878488726;1090936430;2031462924;2145914211;1533328109;-1556476832;624252399;1720766353;1663431959;1773959414;383314364;-858925962;521826420;1858630416;1277198338;828972413;1235978400;-2060316203;-1993467356;-1975998384;212618157;1110733205;-1165687623;-887098851;-2097244883;-728759325;-1979422535;-1863948767;109316138;731624430;-616932285;1059366558;-1124971595;2082328467;819333115;-359433623;-1986525387;190335255;1821582968;-1359744989;245786476;955489028;-1020441091;-1987136352;-328861867;-521036710;-563261046;1216511355;1459080337;1143785024;-1282801130;790333270;1285778529;672736084;-1390484071;-2125624675;1629473074;1486597527;1282065319;-1436743688;-1345392355;-947406409;1591318913;293540094;-2043960395;-137001037;44808689;-1244047721;1210574668;-1583253531;-382734680;1364176381;-898661901;1477948728;1910833670;2141228365;856255623;427626959;-846672072;-595765547;-1194997251;-652531157;945752921;-167699281;-8626833;2013505840;-1688995094;-171956450;394851592;-1486752320;108579107;1967134569;312993187;1100404203;711106799;-1148033303;1313038166;1039871475;-1521144448;-427587604;-517174802;1843216677;-1205667623;-1896455411;1268850066;-496412761;1223842141;-1158447370;2041424879;235484306;2126635335;1962301516;-527626992;1932154159;-745850153;70626134;1496817825;-599260972;716989832;-715007906;-1292950680;1110619274;-731078768;1363517881;1611417427;37816086;705467243;2110221813;1261565699;16025482;700994867;-1979258399;1360642898;603356291;-998884236;-1539142727;556086670;1547247822;784448116;677553550;677794001;324320577;-1837271694;1701332734;1427864426;-858720761;204813669;1549017003;130578917;1284941357;-242148047;-616675184;-730968362;-611837727;2016462083;-1078342236;-1159333287;204700355;-61420596;-403099255;1939433297;1191154800;-2074277002;1141021350;-396663610;1918840989;886418289;-1927078277;1534642340;-762677247;1256746163;12330532;899699231;1191968551;1968243179;1751252288;-134761068;269055363;-567051872;1306278465;718224691;-68652525;-1506831803;-100813063;-522519399;-943057734;-1797246986;-171409090;-1980783604;247019906;1500005447;2023122844;571795440;971961264;-1518381455;1369811041;-132722717;1163847012;150376414;324440732;-941533805;-1985948712;550060299;243437153;1750800208;-1163817471;1020372028;-46274118;2073049356;-104236751;-961112885;-1927299846;1953384427;-1553687706;-1114254199;1856520173;34244147;-1621278921;-586133758;-2034387329;1760355948;1975664669;-88717015;792222128;2097845391;-158426074;2027317690;860474345;-1717819888;-847730370;-2659274;-1973874673;722816072;-617504112;-2137337560;120193468;-1432072873;965214645;-477787242;-394931977;1777993331;-499806422;517828190;1509874504;-1343908096;1014147070;-183158933;1876788798;-285822958;1208193517;-537665451;1218415144;453014888;-69534652;1750632768;-1188498973;2143279364;485969465;-167944258;-10621741;1031389267;-1355133437;-473542230;-2037339405;-618304420;-2024039741;339499374;564996272;1357332411;-496193362;1344883598;514021561;-100924340;-253428613;482071977;-15614209;-1441187905;-588110619;-879646957;-1806795866;345869835;-109449297;-871195339;-1913393496;-895736467;-307977022;-882422910;61855043;-1504378674;847937244;1452002093;320190142;1301203289;-1535276516;-2092724677;-531456029;-1756891705;105735713;-1625819538;-465041658;-380668828;880086543;220042584;922748454;-380189331;	};
	mti=624;
	is_gauss_double_cached=0;
	cached_gauss_double=0;
       };
       RndSeed @[6] {
	name="RndSeed_7";
	seed{ 485936065;2125442086;662751845;-1495079204;1025762202;-2060700217;-946166849;1271280947;-2079801662;-54001207;140758716;-1339610057;126864885;-291021130;-1398130057;765766968;2134069032;448408638;-1965907320;668727941;1753088909;-764325295;-2080285584;1847622417;-233038488;-2101158320;-1944479628;-336966487;1193097518;376092328;-764282778;1806175480;-821207203;467791415;-1608553771;-1670171146;-889201304;912105052;-1322076558;1236527703;213744150;196145367;-1751968771;-1565304122;1471263616;112384786;-246738872;1952616646;-1815175757;-557912058;-1142268117;1988328544;1914108793;-806588787;2102631484;843336008;-1054838368;1846677640;1471731527;-234134311;1366127678;1964872728;-1583624421;1509692956;1058356913;-1530563306;1360717094;474957734;-1775691070;-121090555;49413796;-784647429;2075458592;2050761294;-1405169547;2040065598;-393300441;1254301825;-824159538;1785421872;-1070715739;-928615473;2016926670;-1454080002;-692561216;514009668;1071255850;341721065;-2067666875;1941939036;-325895925;248694915;1712076555;-2054418097;-1700788033;-1627678736;-1657703206;-839732839;-184452060;1310186182;-2098278425;-1061383490;-1273493001;-1937569008;1981677698;-273592552;33990929;680643872;606866956;1262090025;1429924662;-895468510;1112302197;-1442911179;662544677;-741318388;277893727;429807344;2022620454;-1818525734;313264304;-346710551;-1280342068;1922028225;-305732036;543788632;1262108982;-681366990;-552935723;811888879;-1030130227;121157833;230914257;-2088926214;1206700382;-1379382782;-979422584;799560800;-1322210710;2084365203;1791814438;-1363040784;903019272;1640780471;-119928738;1393168962;-359395327;285827933;-1301546683;-235841384;1826613437;1963421379;92439842;28031235;-505964087;-404568243;876830818;-1479050937;-187972137;2047836483;-719826518;-1645565618;-1824360546;-1065374417;-1841307904;-761721233;-200377022;-477744052;1478093523;-1532885117;1249378191;2113720753;-54138084;650271464;-1448344010;463226675;-47750449;-1208146131;-148792003;-233097175;1458676550;145189560;-1926130866;1400293811;464246258;-773330125;-1683195222;-213365501;-944021060;1417005080;1597789083;482371201;-2008384859;1872151460;-1431208485;1364117600;-1544030199;-790642660;2062574593;-497322809;552465948;-514124331;-2005326792;566515117;-1207278835;881138872;1575669094;-949999246;-315305115;-1430061553;658387187;-1637852238;-823829180;-530985768;-1878260163;63909554;-1080512750;-698572247;1283093868;-417158692;1991138519;-195877045;1472989254;31343586;-499991798;1297783918;494935981;238753060;-6579176;-945026420;1987031633;548285047;1991340251;-681824021;-2082245518;823976219;1620657043;-1835086969;-2144110233;235467464;1458360792;1353378958;401661021;-1702906204;1403774578;-766871724;-929061559;1400295721;468118976;395808185;1437723639;1110621961;-545741020;-1038167456;-1720386291;1711136490;1440855735;1942912207;-2099020728;-11951051;1718136914;1139735748;-1208866881;-67578984;-1079611345;-1142073398;-283792654;1151232800;-1279529455;34740620;1134821706;561161894;603231886;435381527;-171888091;-1072095215;-1265546706;-1791504271;-189281931;831300261;-569804495;334926803;-467059111;-1021721443;-877321870;-479024206;2012641011;-1836945255;334913863;1463050532;-1280695877;-432386016;-19310093;-1838027563;-325943047;-1146573367;-1290062529;1776592698;-1689153935;1435352970;2101016067;-2013781513;-1195080745;-2031615688;-490305774;-1810734106;770862630;-392049615;192565998;-1440344293;-1324187885;1740848108;177437369;2146135350;-1512732947;922559622;-1307238374;-1859485003;-860192143;1048738361;-529417539;-1392485321;1408220971;1560930005;-1053063448;-333644036;954208993;-894903028;-1303036109;1623861406;-1881661691;907017742;-1113146670;-395246243;-33002140;766527986;2076028874;-948502680;-2138044023;-1262737366;-120504036;37833104;-1760553178;129459851;-1559701201;-84818662;1401693495;-1028745815;211748718;-1313223229;-1716422781;1283403844;-1394214503;-2138280312;475363284;-1583039481;784325725;1630189334;-411661191;306755465;-240665739;45686007;575249885;2039582364;-32880035;1819125379;-622050120;-1793314250;980001780;1524917;-1176110629;-882920176;1814994163;50294511;-1112691519;-1001487002;-1172263087;-1141008328;-2095441316;301643409;1838457265;1912273901;-1135955558;1034578551;-1535725197;-304055274;1015755467;1755754138;-1485776981;-1534228430;-1559729034;-1148657845;595405397;6042130;1906926756;-617348188;-552939153;323710249;1112277947;1746011121;247922496;1306260945;-419148638;1981507096;-1725846927;-1683698700;-186310748;-1914249862;920820208;1633168713;889022210;757577573;-1315739275;148524176;688473710;2086381829;1824052276;-135325814;900438959;416158894;186730570;1708597463;2085387284;958870256;726239832;1467264609;922365322;165204765;-313470691;1084067971;-1676830984;1878940753;-1796129472;1640201915;537430804;1935185047;1100015330;2112853060;264334831;-1867626494;1363831224;-721504074;-1035289053;1511793755;-1828420802;1369891945;-1511274810;-1027583725;-1196323568;1443449819;-164063036;-1886927034;1829831576;-942518750;1890549195;135511161;-218816891;1706345127;923116360;-1869417165;260634401;456207058;-837924696;288567366;133268334;1637923383;1737121568;1818702552;-287559055;-1929581873;-519349833;1080539611;-128450854;-1777815946;-1946883682;2078845031;129173530;162405919;-425100519;158629153;1775438053;507545557;184129003;589294234;1381628582;-214678328;1912391933;254683475;-694633817;-1331730275;-298164315;-540961687;-1498265154;-2114931431;1822419093;983169107;1390962095;1138507159;-1712090080;2085463389;-307987648;1789951588;-1677136689;1272587224;825116565;-56361790;-1002634465;-125814777;-525582448;-1828732420;1403681076;-376295192;-582479433;1255428613;331645334;-923113423;1038868414;-285346309;-1935948578;131229907;-1847506873;863072834;-105551852;635920926;513656290;1146291767;1452170076;278516416;-1581717552;-1329538581;840084479;123884718;1105103034;-1256913188;-1979021908;661839293;-718888279;-269407957;-1186748702;1545517179;1278088254;-658721288;1572086053;1976129875;1115365754;-304346456;137542297;135168384;2072418724;-1814631106;627357394;1045464321;-1141308275;-526887532;755537341;816855740;1880738392;468023370;1357779296;-1159674252;975008958;172670759;-1109767275;2125767622;391847607;90443624;-124731842;1989457224;514758917;-706146766;752997519;-1279105626;-342695952;779118620;584323402;-336499087;1736021818;-343654520;301692697;2023841824;-2130470839;-1594344740;-1652422180;-1465404195;1343141187;1100732243;-1007364188;-1332578770;-700830296;185698756;889274530;-1316801479;-1856753513;-1807095270;-1776798262;80560699;1896461979;-1044154601;-1100762822;-273422993;-1380691468;230358631;-440631299;735014801;-2071814255;-1879858596;1167417204;1547126920;-1084231315;1192733228;1503869731;-1376155443;1062388495;-277676464;-88226779;-538920091;-1078098010;-119977443;624315968;-502455893;29962676;-1410993551;94188749;1172474960;	};
	mti=624;
	is_gauss_double_cached=0;
	cached_gauss_double=0;
       };
       RndSeed @[7] {
	name="RndSeed_8";
	seed{ 485936066;-357091957;2091247274;1754432634;772872075;-1692095268;940376476;-297656685;-127852840;869359472;1505597242;-463979182;685214209;-1477772430;542384958;-423619195;-201903122;-221490798;-1992702137;-1638757556;1514124250;23013500;-493267710;872616572;-75585788;-2054445860;-1788552784;-181918379;-2111061750;1825075269;-251351310;219086388;274734756;-322053419;-617751408;271036706;-849210226;-1869836090;-431357574;-1941219868;200997350;-418730521;-813588706;-770356324;1832381671;-2027844373;1795442971;2072363377;-631619232;5162816;-1166680974;-360191901;496635412;-237223399;301727352;-1998479985;-1993433639;-958694752;128818569;193755208;1690434724;356514390;-1081095636;1982816869;-585804364;810205300;1101529606;-762344442;-726406339;-896401989;-1670868514;2018789395;609227106;-23966221;486420474;1070315501;877159885;-1549410514;-15492950;-1744000004;-1594046074;-30464667;-1855498352;-1465864467;562817951;-1566241520;1922746992;1115641836;-976845351;-437618341;-1579550702;154103467;748498131;-188441956;380180505;-1555373252;-556149290;875780714;1149986356;-870010804;1392301711;-764107669;-757562002;-1328613016;252191034;-1466751413;428485687;1856889118;-202610521;-859763423;-870358824;1563650518;-506605245;-202453327;-927805780;1508913790;-62725233;-1694649679;1369328661;1857468507;2033509882;1322192768;-1081858209;-1749070548;-1022815838;879369730;570091848;1875743207;611886654;-1472019209;-596520405;-2122886581;-82081711;537832159;1062453633;-2061475476;-336834834;-1359808246;1012500658;-1906822971;-1537819121;-263655250;1716423119;291347669;414178713;1982353134;749603805;1410266052;-256009651;-1836867749;631472051;1522347318;2052474443;-1817356853;717908455;-1915131970;1970112968;-2089619990;-1090452186;992168915;1329976799;655568695;760680533;-915804372;-2045475537;-2120703898;1640549402;36698702;1241743214;1654435444;-496995885;-911919173;520647748;-1570094207;245546589;1319100512;-1563529227;-115450844;-2124661995;-1230790714;-1385566968;-840245337;1020592234;-1205345143;-455569777;596453877;332966755;1005099466;-1986541714;-2037482919;305002917;910150616;1042941176;-972771687;1602178436;140034876;1914970992;55604570;-1962838200;460368633;-675170811;1275070247;970991816;1220222899;-878197754;-1724251194;1245929762;-947515746;402704833;-728833290;-460871557;-34230229;1582033052;1807338438;1959519577;-1751804785;1717440889;-725738191;-1862318188;253789449;-834318743;1429514927;-538937980;-1658544606;1794212736;1966074822;1199998309;187770199;1891650359;983012147;-973578491;654423109;1460145441;-2129441143;192110785;1418950160;-1361858911;-865197508;461388489;-527711428;1297727435;43107747;834417985;948423832;-1304882964;-1189802789;790442899;-1541143306;461932860;-17612379;-1750811272;-1548022755;455172151;1713989040;-375924525;429906703;-105548565;-1300281207;701956825;843661728;1449493796;-1437510242;-534035566;-1657716164;1486115198;546971428;1635028542;1255462630;-1052022481;238881641;-451956101;1190896231;603564366;1446808279;-2146873984;1957963613;1470612576;-1477483430;1015918542;1839045469;-1495889820;1684825943;-1117008888;939449101;-199138755;108065171;-1696859363;-1006195878;599997501;-118592974;1614487415;1063489713;-343027719;-82454329;1576757882;1837749934;-1374790861;-2066860930;2127893014;1130328894;1678651399;-378132085;-628085802;1898531128;-905419347;1669086423;-1368619104;-220908003;182872330;-1302082521;-90023729;1093023155;-1230146958;1169954665;-1349262014;-1345801349;-1232498439;2109310788;-1300673417;-956774296;1112888951;-64338993;92859582;384374329;1852393153;-710563067;671920292;-1677363717;-1072116347;913296679;1593233581;-775921369;-1931569024;-1224884585;254603031;1179559010;364173151;1328795852;734664499;-1819643022;-1250526076;-267593677;-1106052026;-1134957525;804986501;1124808914;110843801;-1369869896;993814974;-1080137901;1577065811;-1963297607;-228253145;-534266475;725422992;125880627;-438260349;-1392642843;1318207369;1617615375;389777134;506698575;463638165;-1484587212;-205744198;1219026538;1116996773;-883058141;172552208;1739540417;-1412624334;920720483;1835730819;2127333823;1754990444;1813922936;-974862795;-1261495609;40631859;923375258;-292104642;1909730446;7806185;64363116;1620064796;449541106;-1225833988;749205689;1534010241;-2057796859;-2093256119;1521171486;563368131;403782008;-388700702;2825296;-1453785828;56814691;-2126692451;-1785777590;1667194872;-355721266;975716979;-761871374;-873576279;-1366579545;-1010168401;1337750131;-2018104686;-241836951;1106948460;114710172;-1792169688;-1565443793;-1816156833;-1683618736;-150104070;-226478114;226906323;1896075234;334922035;-674609724;1050019881;-2136069420;1836936726;151502780;1137590998;-1442418818;-493397608;1005014740;54366034;-1137021175;902280199;-145569932;-2002230619;768298134;1028357858;1709048543;-1137577652;2063135613;-1226216028;491788855;1512228973;938401879;-1112665329;-12944674;-1780629521;128814912;-740112896;-1568359440;1653647932;-1311190828;807857202;1629483903;995852412;910167731;-1710712473;759075746;-1205865804;678963609;-187020247;973637727;1156687433;1900749879;-1367330530;-1700831779;-281714227;-2046241255;-624038533;-1516508627;35622241;-2101169636;1324635566;336164580;1754787278;1725799302;1650105631;1067912371;1603850109;2058828235;1153230994;-1761382688;-891309300;-92426802;1379092677;-1920427207;345297709;-2047514712;-1141775878;1713627329;-1532072534;823668019;253698571;852316996;-479379518;1535078932;1206403385;303084809;-793231489;-15832609;207258048;-614141259;-5166652;-927859590;1638162101;57914109;-396753717;1502276835;2126670118;1628069216;1320600131;64878601;-460411251;899079687;-410494523;1296065313;626212260;626005945;1197104899;-192049199;-997252638;-20920114;-1491079189;-497264136;343135507;-432063092;-1311911303;-248193130;1855321305;-1290194103;812736937;-1046611264;232475651;726112836;1286226666;1432955854;-2120674877;-198489026;1384954667;-1210756179;-826561241;-340814511;-1603482248;-1690739391;-1050695537;667184477;143715539;1840208994;1767206963;1897793503;-1843336516;-674345699;1333492990;1888864708;880151011;-418290758;1044994857;-1629951398;1231392486;-1428422062;-163988544;1888973088;2066828599;-515940735;891411838;1280758507;294023816;1594751455;2018337998;-148599068;1849098845;-864342905;2131179088;-1574909646;1122636334;-44214838;221932429;-394926622;61873415;1932866822;1418702087;-2089714781;-464129589;281308719;-1816157741;1894429374;-1652965723;-224356050;-678394355;-165387309;276149086;184489061;55581481;927115902;1274852360;-280306976;937482467;301731556;-1801066934;430466239;-1835861837;-202778322;1287046683;1993741469;-742285336;-1385833196;1075511820;1226557056;-1900585915;-391485084;1400157957;337206007;812651735;1564494392;1168428003;-1773247343;80042855;1939353868;-525971061;1039660307;-595599893;1569437429;-1649163086;218024927;	};
	mti=624;
	is_gauss_double_cached=0;
	cached_gauss_double=0;
       };
       RndSeed @[8] {
	name="RndSeed_9";
	seed{ 485936067;1455341296;839339543;2085428758;-702009833;-1324424727;590537917;480797592;1155769088;-518924178;1071101963;1306951522;1439776027;2029389135;1862850004;1035885080;-789027960;-1139693336;-54337948;-1967661642;538692632;1071144333;88628663;-1816860598;-794416000;-1158239544;-1472365620;-1843063199;-497954773;-1547401243;-191546047;-512262871;172350386;-1979715749;-2139156673;-671897548;1705495767;-911452525;-381602058;-908670000;731338087;-113651508;1312237781;-295137329;46720936;-757838475;-1318013508;1928094245;-1228669852;-332453265;625182926;2105358201;-1453450612;-801605573;1210410574;-1700092830;1441413656;1630489878;2005645645;291358519;-1340274705;942470590;426877492;957272771;2029552175;-1359480217;832100123;-1574481686;438768588;-711525439;-879090224;-556542074;1217213633;-1573875703;-1903446111;-874860902;-958020695;-2147341217;488916479;1723733226;-123927545;-382420507;1452502544;1015580168;-70309508;-328640912;-2047367499;636335498;1538619850;1163112560;-1568139793;-1998095396;-273699598;-93113230;-1852102157;1296074100;68371593;-1761191058;207805950;96502681;1888472257;-158431195;1310854500;106780224;-776255576;300599776;-1127578166;-436809645;1108017148;-1388288962;-575690726;-1678658740;-1368228810;1829688565;-1183016778;-120810633;-1681178312;2108606039;-764262812;-1886132710;908369904;-1785034199;-1525250447;1627100890;1794815971;-1065320793;1559477042;-1111742818;1781053452;820679330;796036204;1816867615;98056538;-1904882937;-415119745;764390259;278147047;-1687517780;1649597488;-740419360;-467251941;-1106885883;461910353;1146539652;744990729;1645288734;-1188096819;660536638;1924274186;-613523476;392937697;434274908;-828069148;-960623428;184958709;-975506364;-569548897;817181993;-250615093;1801759111;1746507902;-2077351492;-361496936;-314480950;911089393;-1074254150;1962075966;139391874;134522098;1085838883;-1004966380;-1332494658;1115741400;-923385014;-1238786693;2113921644;-753161551;-618554645;-1937750470;-1615352629;-731005695;-1937791873;-120730873;-2014167733;-1101185147;-1300606980;922910192;-1158602645;-94831831;-106261937;-659921734;2016394940;-350984623;235684123;1164583785;128622795;1609241563;676626375;-1809258167;1577725534;-445766845;1813063945;1358067954;-2063023190;1723996692;-48461802;-1247285737;-398644200;-176563593;-131644267;323769856;-786174253;95062244;1841694409;-667306562;-449717912;804391695;332555460;-615864786;-23288420;-473403497;-1630127551;730323021;1165265984;131145605;-134046374;413906431;773670270;-366028390;-165823678;-1917343093;-1451714060;1689478390;-1299184292;1396927744;1442220880;-703967007;-2054628329;-849800649;508429171;1355081807;-2145163849;-1554514341;155450128;-1499619772;-238229357;708628934;2058074645;-756998436;-1737521676;1147830536;1347533448;1389423113;1071816229;1779249815;-1855898579;-572856693;1517534377;-1472768182;-1098712981;1467691889;439499829;964501231;1349786706;-1422092089;1175237570;-1651816455;-1923761646;2044000604;402925502;-249930492;-1168084014;280494624;-1600391247;519865777;-1325172504;-1199968410;-990644343;1082098824;469474340;634380108;1419167253;-368518402;-879047700;-1833018009;-287774986;-69255993;804511347;107433855;-1866050244;-1097871208;-778717211;-557472542;392001258;887694712;1263599999;1127482846;-1748784860;1036063528;377812979;1456201483;-1441703393;350032799;672257514;-337010558;-375890666;444594043;-1739950150;-713378612;701832672;-550393194;687147776;-1735370696;1371527707;-618727556;1579392342;883008399;288755624;105715334;-484337123;1989008662;1894419028;-1260187189;714708624;-568625132;1354477912;-1318806941;-134884724;2006162099;2112048003;916675988;-90955601;-1767837400;-558587681;-1117965286;592340679;-1503654701;-1871189818;943438502;1224571601;-1905605276;-1047693165;507879974;-1404481451;457982635;-1955540528;-1198904524;-1239616599;629122771;-1352090212;421420724;-1332366749;-1809036635;-1476537276;1940403968;-1814807096;-799835114;518664878;1380392460;-746663544;-1376186305;446631546;2094399884;1310593804;-345343347;511334771;1984485069;-1790710805;-60111523;-950981241;50240134;818851409;-854908823;1956808007;710609940;871266651;-779840161;-2101269819;361455869;2043652684;1428973277;-40611255;-476835152;240266526;-2073895850;-1724521819;-283194267;1901280193;-485469116;-1803796344;257249784;-1823535009;478034745;1980620806;344859469;-1609358356;-917926798;1229185826;910907741;1813514304;665652277;-197054598;-1737589425;767600116;-1619194152;960464791;-20885719;-674777303;-1124679894;-1279404959;323143593;399587400;1185005060;-1163680106;885124610;-219153815;-694777998;-1745491402;-439927770;-2016573124;2067485978;380700748;-77794398;2138327340;-2142964375;1551374304;1397741167;-582846191;-981309498;-1470210202;-1174132702;905770575;-1127844389;1951179086;-1581781795;-915616594;1177573109;-532225031;533642584;2102185327;-1891701730;1962026181;1787913998;15577510;1969417786;-1457352188;-1057827812;-198489862;-1980756739;-777873060;-19702979;1273573177;-1479763236;-1767118501;1596109539;1452902129;1146662520;1034590342;1402463400;-789927560;-2019249581;-1281444670;-1114107506;-1187587573;798087261;-136371326;-1718612809;1637147196;410708197;1768124718;-1206464415;1295660006;2098076411;399929467;556348769;-2072380896;-1175854266;1791102897;-1497013682;764311003;-750537657;856327349;-1054983605;1444251723;1853120790;931176184;-1281789506;1703640339;-1183515646;-1442615831;244982433;499045488;-351682020;1452617512;-1791521253;145060556;659126380;-1402842995;667898205;484499620;292316840;-1857263043;-1279613999;1226018614;1792864683;-1171958773;-2098070905;506201460;-1938473792;-1458385785;2004934519;27808141;1911006113;-531353567;937898348;-1315091041;-1662802443;2002955128;-1543476797;1024001068;-1795280028;1100341063;-1215852888;-1837480675;823385671;112964368;-1068419234;372678336;1438737360;980302982;999004400;-1585723197;-577994951;-1961214473;-97152833;-1497712573;705461437;1792630186;781154705;-1516203696;-681821834;1079331398;39276321;-1145969884;2110256670;1903407964;-785544493;1911625267;-1403222562;-47739407;87000224;-1709640377;-134368415;-607831597;-1787813574;2139886915;-1233995978;1371086257;1589373086;1610145770;1349655783;-1597604113;481815219;-1341233710;-1294303932;1915217107;1022339856;-1165357177;57233073;-2038446322;-213715466;-457299740;-1791310753;-305119250;14290879;179203994;-1782483966;-932788671;1416858700;2043056548;-422853283;680930907;176946989;184927240;728146288;-1242389639;-23833391;-1146627291;1334990767;-2090158093;-1457418909;2022486676;-1725484007;941032440;771509034;-286710811;159072786;444249455;-410321375;113539009;-2115990915;-986866316;-1232809651;596827526;942153274;-342427329;-560631030;-1127926292;-450058426;-16454246;1262985407;-1787159719;1968013387;2067872151;1671889044;-1874462160;1306425890;-484971208;-956158543;103697317;-465426555;300568651;1282855685;921331459;	};
	mti=624;
	is_gauss_double_cached=0;
	cached_gauss_double=0;
       };
       RndSeed @[9] {
	name="RndSeed_10";
	seed{ 485936068;-1027192747;927633392;-419284557;680522356;-1699300407;-1692091875;133236034;448095506;-131759581;139425450;-998192355;-1454034718;1004808301;-777959409;209967307;278276903;-1972902540;1124314528;331721112;1474707724;704814902;481736292;1215134091;-1274950262;-93593919;1980937380;613454388;-1162640736;-1540801529;-1786356969;1045638248;812395816;451950825;161096975;-1626429938;838332128;1841766021;1686089274;-1573236626;-117471548;-1620989012;1076550096;1613744288;-308326223;1323833447;157955692;-1694808885;1248900221;-294547171;2034847496;175570880;-837769484;-89321816;231558317;1690490232;-412419595;716391495;-1707806915;1235491606;1373568847;-2034403325;1107288483;2099361577;1265216264;-965260338;-1287873245;1592239944;-924184303;-1762042273;-731054089;329682827;1951728927;823792415;-312597883;-2142808791;1088789827;-1601348265;1745571799;-1861614147;1379957675;256164963;-168855967;-1031657731;-1658236790;-1323463171;664763633;308298860;864865012;735356573;-497368757;-2009740861;1987568257;386063581;-497129329;-1056560229;-974419112;1459531336;767480879;-853549586;147940325;-531302722;1958444535;-1642375051;-1570597285;2076832390;2133323437;-1607518649;244209317;-452363130;-201044505;-459423901;1497817424;2093104742;1423490581;432517719;-1634014265;162427438;-1271944548;-345055539;932980158;-1325428113;-1758717317;65024824;-1989857900;-513129813;2133865670;1605652994;-1004734801;774069853;-234946509;839172979;614377443;-1247430636;-1434491084;217685717;-397498479;-340574429;610273322;-1352158435;-1398914361;-1148271290;2076260450;-1994573154;657038364;-860253283;-964113432;1082537802;1872229419;-1111240921;-299989201;-1969889037;-1256605523;398754980;1543510350;1589527494;29834527;321500376;-215748138;-1569954136;-1638171726;286850321;901837143;-1012414730;-950166451;-290035349;-1908916562;2087634563;-1518476302;624320089;-413148473;1077949439;1226404322;1446079036;386174911;133361162;-561953630;-1021231818;-833518693;-1094892629;-1350556831;-1942818364;-1209640492;-1865484251;562415387;-1491992224;-293208476;953384542;-1230820910;1148178381;-1796921286;443995863;-1648569709;908438774;153543632;1727148499;787810974;-1683112165;746571427;573282838;1329828214;-1665002564;1733589184;-1304826384;-355507386;1926567942;-199279983;950550121;1688588605;2064165245;528628414;-486351927;1380307334;-2124551656;-1425324264;1849030681;1169668688;409525198;-1449003232;-1273646267;-2072921377;1978269454;205105353;395454764;887540540;1081428877;1418246942;-1209111778;-433701136;-2123636284;2144143876;-2006670880;1870909714;1164552296;-726752425;1167746319;-1050649230;387798914;251009336;-350295033;1939686020;-1287164822;-888574470;878814512;-1338188572;746864051;-1995037803;-1679238518;2039021728;885680510;818023856;-1246587029;-1302598039;969495604;-940962430;-350724636;-802247645;1365707169;86863138;-1371455123;1238120655;-577066933;738913646;526486381;1628723209;-128252879;-427463996;943235214;-937076974;2143974338;824707069;-990081824;2101219743;-1002667417;-1906116986;-1869355225;521142189;-891390634;669108383;550125266;2066164722;1151230712;-1773973929;1305240996;2005690421;395637153;-1971749213;152706980;-1615249196;899881871;-2013108339;457663374;-1739373014;1954420461;-1602791358;-1760554393;1341280257;1734971689;594324978;-57334875;2020927402;-1882789212;-1617466708;1368798677;2078126548;997533498;-1311996652;-2071770911;1275215299;-1203949377;-2140905273;549886960;-1151404312;922789259;916829201;1429480688;871271761;804592434;-308314632;1882523718;-733264829;-419942783;240905356;1672429695;152690938;259100135;839818345;609675188;506773324;1883448901;-170623458;1662928828;25261021;1176435838;-1160604055;-1467900794;-813603484;1461854708;-296320005;-1870018005;-1767132031;-1997712380;-607953484;87812490;-1151074614;-918254015;-738495644;-825776130;-1047089875;660730499;-637416947;1714960101;432647508;1201624965;-1672532874;825401127;1312139975;-956672125;-568850714;1198409408;-1918487411;-1734589228;5746648;-23397981;-1239736948;308652147;-932838963;-1680345675;-88874589;-669604463;2122872332;-1453422188;1963429794;-380704828;-1868828167;65195134;-1487135442;-1356329003;-1373024179;1483732902;155587935;-743487752;637556101;-1635193864;-1104943838;-39352543;-1000897556;-1146423858;1351689984;-198513174;463507315;1128408294;1697197995;-110638693;-1812143486;-377758197;-639049036;20341440;1217247054;-836003142;-200274547;678975639;2131018789;919906247;-98520553;2092889977;-837886994;1057594136;1618086416;-2032659634;1822902934;588004910;2086479810;1163725964;-45585857;-435157173;-349148920;899503608;1406968954;-1922057942;-2025687444;-1818519285;2089300787;-2088765855;-586403401;139784621;1452535787;-1691884803;1479542599;968971851;1082273861;554528899;-1827110817;-471372958;-1637136393;1032356444;-1256018944;-1865879425;-144390137;-1310126261;555752069;360621362;-574820236;1601933230;-1922213689;-636980106;383488231;-277034014;-998319483;-358093153;-919166642;-2080712156;1338009794;-1873890892;-1340046188;-874342667;-1679214890;1093015405;1250167654;-737959826;-180117043;1239946771;-1898030872;-2118889439;-1610917217;1475593922;-606025791;1491313501;733983008;810222453;-1499137025;-1445146200;-1543982102;-1799478175;858937321;-683187768;1930181107;-1670160297;-161120153;981282131;1374244511;-93285321;187059814;316376609;-2109041175;-1894454628;-1222565828;67430493;-858492007;-1562048597;1460959383;-474621159;515267886;-1441635565;-776195933;1235538191;-515310986;621178650;246726964;-1054797961;1065103032;1745283213;687910194;1582438577;308932456;1623334401;-526133254;1124563000;-958926471;365072671;-1052386759;300819681;1926756293;1495836245;-363293402;-1933138276;266095706;893143943;1239813449;30852975;-226486317;-1611155687;326480561;954677984;1306270828;1174965774;1808733433;-1917583385;-684161943;2131687907;1372621372;1693200676;729756333;-1710713514;-493297606;1675491732;-533252383;-631923901;849052250;-1198351971;-1922714409;79255334;1993128476;-1054215024;1567959839;1763644151;1730290480;-1750852232;-304353978;581012318;-1797043140;-1624488803;1904815075;-1094171565;2076790559;1670727425;501482796;-2047960951;1452381189;-876508221;-916069136;-1017224944;1102346673;354628771;1652818307;1701915775;-169345556;-252372862;1381414429;-1368467643;-102698947;-1342048079;-809243685;1684711029;777241090;1072471817;-21655091;-1924413817;-708476485;895461339;982412971;2115514044;-1279748137;-1276647856;-117587294;1202517198;-605528331;2117672793;1505196036;-121632442;1167890311;-259489747;-608882058;1672513402;1703102681;1823430539;1405904326;780970200;1640118158;1514435778;-1261212089;-1655672686;-253134038;-1457157496;-726039346;1390287934;-394797511;1758312769;-2113054560;941665355;-81453319;1141835013;-1229446920;-14627065;-1881746694;460322367;229433411;1326274520;1194707975;-23939383;725236254;1977941571;-617110408;-1487488522;	};
	mti=624;
	is_gauss_double_cached=0;
	cached_gauss_double=0;
       };
       RndSeed @[10] {
	name="RndSeed_11";
	seed{ 485936069;785240506;-796506012;-1869959258;1009913784;-1741575267;1707723969;-1066367033;-1956023204;1181955871;-1647981344;199018293;-1557596939;822203520;535910030;124462101;472349017;418545966;-1894738632;-570627595;464974882;-591232129;427768834;-1570914591;911788711;-200518916;-1170197067;-2078990258;1555196440;2145008890;-895917531;-1156313315;148541019;-1125786360;-851407084;615301942;186313330;1244889375;104660732;1667855763;2005173442;-139871208;341748177;-2098145120;-782095850;651351926;-759748676;-792664694;-1448091587;-954322932;1527381277;-14100417;-1065784352;-1579611196;-598172844;1299699850;1123537423;-1315873345;632234187;540119890;-626785898;-291480314;-1641062345;-1063235032;778464823;1457908468;472240107;714918650;-1118707994;-909052871;-1749457624;-1888590887;-923101009;591808549;475612131;-1816050726;-1284088700;887109419;-2144811195;-911434158;1913311045;571157029;720924139;205725962;-495951034;1314527118;420467393;-1974571140;-1089574130;357410837;1797885347;-1147235515;-581821857;-905731415;-803068048;-54846530;1440028401;-957842159;-400164228;1468189566;-1443217281;2074695350;-63429223;-1921236951;898192479;-1171228;-1025533299;-1378879375;774344907;-73022588;1253729201;884114655;161661803;1673026728;-705560545;-1152579713;248568261;-1387046866;-180005422;1677636844;-1328859399;-445250432;328131369;-1324379992;-600502898;537513502;771645524;1496642979;-1731814550;-1352796023;-371035559;-1912649723;-1888212409;123116222;-1590903940;-814848195;-427759106;268416602;485432332;883719495;2013883535;1186058899;1742091816;1637765052;642554657;1160043926;-985514971;-228847215;-155709138;1275780182;-1969979927;-1184534194;-1749327980;137231559;-1277412835;2077656534;103013743;2142225512;458469131;-33688842;485029961;-1429731730;692999486;-1271410663;220237387;571164476;-1170852014;-1104305353;1187758481;65629817;-2004461721;-1048016764;463412463;-1429515784;-420732336;1842148974;-1832410757;880506478;1813551128;-2084019312;-1940493490;-1667759695;-1329170603;-343169782;-123146683;-1911326633;-1620641981;750278240;663975068;-2032632247;655161173;-137555384;-1497408681;-1934457270;407077674;33176149;625181005;-655410906;-939959969;-1749647853;586012285;-1458993894;-1935451326;1728594187;274072510;-1138612029;177233395;-2099176274;1943821484;675554834;-37705748;-1570100962;-744082208;-1458218652;-1676813292;1222220677;581959660;1859732725;-733296354;-2098405812;1720546210;371579692;-1922169542;1908082679;-171521298;-494803614;312961319;1197694022;-796497945;970719705;699980931;-1350165610;901191244;-666994459;362989992;180123699;-434915317;-1149508587;898780417;-185275564;-638359229;555468593;199610439;1410477046;1282639975;-1067620557;-211654938;455485008;-323096952;895779024;524690186;213003757;-1705315203;-701272552;1861477541;-1139738189;-936821547;-72513681;1826831006;1046362302;-1128525318;966315997;1804748855;2060805205;-684881364;-550261612;585164701;-1342609668;-562720446;333781170;947388744;-385873289;734541012;1276005557;-1315137514;2025239799;564595746;1498676351;1068764364;-428459629;-2073901336;1070708075;-2118133935;-1037017126;-1420823879;-426911772;970051137;653142468;-1532207244;-1689136977;-1062278557;-1995450109;-378984567;-1452575593;1692122351;-179377907;1245475246;-1837596108;-1632352648;2083330381;-513234904;-1384751836;1536562988;316226288;-1932611104;1609310555;393761716;-516924617;659476664;80925133;-233931753;346663195;-164877345;-974517499;711364760;-1308596941;-525982063;841964247;1412228881;1322171023;-1152935610;354475285;-740657269;601944555;1252210171;-1138944281;83728031;-536836862;-1234631763;405806164;-2140134802;798843367;600653935;-1904290792;-599680624;940983118;-907064042;-1287870566;-507086774;1605076768;669252185;576350066;-618343600;-169620458;1537852065;-712938887;-547336836;1559268214;1774892623;481012771;-1479629267;717207786;1040134066;1813124251;-664892380;1063201734;-1453114238;-1761124379;-1685293431;1806182718;740556355;-451269416;55699153;-1618154784;544841366;-2081171301;105731787;-477961594;461343977;1109019230;1120219117;-1109052017;-2014210283;-1043534712;1010612045;-1054373928;2001325535;-665057265;-453928394;843789668;-1124428304;-625366025;1274178754;-265403026;1734589057;1118246401;1353822082;-40084686;-439077671;-1493727865;415161343;2130789410;1777049175;2114682743;637104408;-1332250621;1862394609;1119943229;-1011820742;-964596724;-598955397;985758441;1635463295;-570453687;-1952780858;767144937;-1561678461;133660284;1555645572;-1234815214;-348435734;-505790328;1332927347;-404842601;788267778;1410810729;1477984680;-732669362;-575285501;-1446194013;1476464169;-1944715411;-630640783;-637420639;1770437266;-637187928;-123326431;-1304350443;1117695679;592486563;1027316989;376657536;-229924304;84495056;-1050421822;-32596008;-766622181;-418610899;-917334308;-731128142;1267897997;1899647733;387141630;-933265679;-1187342026;-1870182591;-1588135379;-562242230;1924030605;1145767165;-1977101010;922724383;816770303;-523175584;496853205;1773941456;-30873795;-1533711553;-1878919717;575021416;-681322540;63387808;658962670;-1330014795;1448608259;265936539;1397934073;1148493483;2039583974;1701863416;-729735149;-1853212633;-2003372687;-418487496;1986312993;1002567035;-96358813;651898301;-1675742609;501300192;1980203328;-1981232762;793454326;-1187379471;-700331325;1219870629;1623155098;-1510312178;-690330204;-534676532;253796757;-1251246412;1496475066;-714065996;-48763871;1958501721;-1985155672;336576515;-603103711;-476817571;937019402;1161775079;784037300;-371276293;-2036476720;-51946797;-762305014;226022536;706782116;-1074833999;-1439785827;1921901498;1056370119;1897681028;384168827;-1537022838;1728639916;380287558;-285936220;-1985197078;2029067408;-1285496770;249337270;-920684327;1997363726;-404778760;-89683947;-1937344323;1222958187;-81415709;-1624240270;843647299;1905951875;-93463713;1732233570;614822182;517798934;-1666106169;1893034195;789102325;-782797371;636645179;-1530300571;-1942799166;1694087648;2082914534;1926675525;257207543;1270443671;1785784659;1688662400;329405196;-221236764;136925516;-1646083802;466516319;-587023449;-101003807;-783339944;-1668743402;2082101524;1537500282;-989955655;-1281322347;-2098354489;-2124072210;1710001490;-1355141386;2109807740;2027562122;258723857;-1537658384;143210678;578209803;1178063253;-1103501917;1008845765;1098492922;-1981337783;261213658;-995761338;-1359636098;-127079374;1857448604;1934694201;653468513;1602412687;-995059631;-579994458;-1122239386;-1395123774;-1958089969;1817097073;19119489;772460343;-777440762;-1113035955;940089216;356675542;1206495173;-1336731988;246223615;-2106853387;940377550;635472546;1043686983;-557950111;-1750105591;-148687945;-1317356443;1326478853;-356338185;-1143119960;-332481929;962831914;996346617;-943614043;-1760383769;-282606141;197445419;-1989830301;-1311674702;-2102600226;-235780549;	};
	mti=624;
	is_gauss_double_cached=0;
	cached_gauss_double=0;
       };
       RndSeed @[11] {
	name="RndSeed_12";
	seed{ 485936070;-1697293537;-38111373;1754009395;-1245593410;-88496591;-393391168;-269850890;1162263473;-1859568519;-503337071;1674798757;-2100215104;1150757015;1484081468;1730316832;-546101227;696030911;-1106464659;1819673310;439449871;1924581888;104807291;-769373538;-1702202103;-393211792;-792131463;-1473273283;-598230537;-422842015;609332680;716281863;-23217693;1909667201;1718983586;1646633586;-772955517;1882692773;-2126475046;-1578844833;-1306494247;1754049424;1682393439;1609908289;-588998292;-2108297224;1898608592;-761848156;1066891027;1795171760;-15624185;-463004217;-872897912;-1646164980;2114361276;569967304;489890080;1237725657;-1463401870;-1059707285;-1679634620;340933851;352335269;2035119960;534624093;2032475378;-154699999;-1251921235;-901667249;-1980151743;349855157;37737904;609910456;-594774303;-952641164;-1565885634;400145144;-1430422491;-1656497487;-625732626;791720401;-1240071994;1383281062;-57280970;-10518467;-2046769461;-2077294941;792043228;2049927460;268191986;1747995092;-748478876;-1171186177;1280850478;-1053090839;1504198065;1479771856;993069526;628516816;-1141553805;-66789639;-1709849849;-518611361;221230771;1065213959;2109612588;1200132395;-21577731;-1295340126;1078009997;670090154;-1403442047;865446687;880351916;-842952114;1086647764;1305203325;-697145503;2374688;-1755784937;231531201;-1233797218;222500102;1021411801;-865838055;-711442241;-723900758;325104172;-743188516;-1080851844;1064954424;1358520475;55281478;-216345309;-1719388634;-48324421;1176494368;-839550066;2110993451;-798748899;-714930846;1066993874;-757670552;1563467462;345515027;-1948686576;-294892372;-225646434;-1302410363;-1627223080;-472983656;-616954946;1611570985;-217500831;-1899055036;-1978258887;1660239075;1250162631;1410578364;2068226864;-1836409867;1978120212;1786895851;1315227637;1148221416;-1008074606;-1248406821;-1421455036;-182024378;628771810;-1492524332;-1390082791;-1491896493;-994087774;-183565005;486784159;-1362918805;1892394270;328121581;1088839476;-632689251;-693744117;831984094;-1908679859;2032389603;-310629149;-534670054;96023704;-278980428;901754864;-648553874;-1199013184;1193503050;-1990283688;-1709247420;-1797663135;-295595821;-122850603;1522324788;185367472;-1410466504;-1778453845;-1945031049;366408180;854919696;1132431645;1903498458;1633119798;1761274755;-74089189;-845925558;-1645654624;-1627040834;822978049;-1639970757;-113721260;-1464634837;33750022;-801725128;-862403550;-1037956383;1936670215;1295953724;-1943156496;1698155098;-1228240440;2116777876;725085100;-69007424;1510894548;238586095;1881075250;-787331577;-573979523;36959392;-590797813;467370004;1706048721;-658288898;-281112640;284365791;1688350444;-1013687949;1064581667;-1762874429;1368460570;-1912954979;-1801055822;1087122280;1336365670;-1393712483;-333365066;364012901;1768427222;1642064593;-1649347313;424649761;69757702;-1167953824;-1582773843;1934572047;1656055435;188174200;-761162913;1763663956;-1035894894;1511190079;1453927809;-124226420;779060344;1059814502;-1601918131;1462623803;2090579955;-1635904116;-2144763879;-1431634245;-623476462;-718666293;522473727;-2086310733;474323950;325772288;422573339;-1311496253;876673346;198486568;17730279;1935895875;-1870631381;213805135;454717262;-903829270;598103570;120428608;1698124391;-759817882;-483257598;1609828751;-1622752207;-1756384181;334246650;541976528;-2038774209;-365831103;-229033669;-1923445686;1875108251;255421686;2142348355;-942988992;-1262093402;1464012012;-1512443974;1045236946;-1040158187;768920042;845669519;272020649;-387794708;418635403;337391896;2098018234;-752414454;2043054801;-682748587;-1735167436;29685397;-1262614767;910620360;-2088212942;-288357829;952686948;89147841;-2140380301;269596132;-91240380;987300948;-381965706;-134881668;294371439;-853060576;226487845;-387071248;-70846921;2058155997;-1914271962;1010931343;1364979399;1534536571;-2069990784;391692457;1170044173;716610333;215529683;506386338;927909454;1314257963;-1996163080;-142565111;456385626;-1222425877;1075255383;-1753439911;1141005651;1042134215;1290261233;1810410015;1688677702;1579212148;598605211;-2087058790;-1991352468;553616859;-798030883;1743803917;171073588;-1933063683;-1880806891;1133570958;-81430553;-1708305807;-635038755;-1531337195;-1782458477;-489838922;1951179755;425387733;-768077683;1289521035;1146115320;1341769924;-748641215;1926635923;1768972836;148866852;25073344;1960721229;-1199762806;-1711597257;755060857;-1260092850;1207309710;8980990;-94641974;-485867038;-915117989;-1054063537;-719872108;-941963476;875675173;90493748;-868603616;-1762986132;1964998148;-1644140904;1397155426;-587669072;249485377;1970084936;1244543857;-501455659;1896108052;-232663312;134666887;-1017677844;-63292939;163022265;-1073298263;2056295103;-456944476;1883768466;167003311;1525268924;-15559101;-1333950221;979829193;51857154;1983715200;1748324508;360174761;-1246471834;-709244370;1119476348;2125142541;1355134073;987524374;1928450413;208563548;-845454579;-474835896;417179226;-236008122;-135009538;-2065163113;1257375120;1768803581;1172880693;1048542030;678061457;-716460799;964646295;-550791839;-858692743;221154034;5657931;1321323369;942139867;1289910331;1229355703;-1015819868;1198856122;1694658975;-334077137;1713090102;279456910;-1307339806;1190934845;-590892406;-1491877140;983517126;-592819969;2132912462;554439950;-60109206;-1351048622;-106636426;330249232;-1284760520;-497537333;625704658;761621701;1167874213;-1097154911;-41454787;-774985883;-102259922;15824818;-164594388;1416137854;-1410832625;2133958422;-900197111;-1018648343;1148575818;-577330544;2138296569;-1706153005;352396401;-1861559406;-910642738;-979378976;1400677007;-49536505;-233205354;168963788;197895296;568354949;1830513535;-792078147;2043818750;-2043570268;-1455248248;1701441149;-1999670024;-1438059857;-681487025;1965053195;243919106;-1054277157;1410487370;-328964438;422310849;-1978632646;592092718;-1772550083;-1002243597;1539182025;-1479312894;-1195826149;2114691321;-92062731;2090291244;1322629344;1953061861;49956629;-363115925;967705899;714673947;-2060096820;-136486036;-795368462;-1708742339;-1232306428;915559816;-1908832045;-794700383;446364951;272116545;269867988;2114990292;-1739046086;-850165942;-133281024;-723700381;1383493909;1925862170;973684446;945593806;94339711;-1170377387;1198251150;1115655591;1722464955;1918842784;-2051203644;1358280542;-2018758212;834687032;1565892699;946118;1441599843;-1769779216;-281735487;69379794;1420834083;-2115884364;974144025;-159877335;-1351450657;967096703;-1950668694;1146002264;-812323474;315360083;-1282818798;1995778468;-511328914;-1239542953;1435049952;-330301667;-1394034897;-1072538597;1060057043;-2131047525;924202682;-1776081984;-598872087;-410393678;169316406;1358089648;733340216;1683634812;911276726;1729647156;1275711056;259965277;2013794586;-2012007151;1853890026;503026467;1072941628;-1978865638;-671847449;	};
	mti=624;
	is_gauss_double_cached=0;
	cached_gauss_double=0;
       };
       RndSeed @[12] {
	name="RndSeed_13";
	seed{ 485936071;115139716;-619918314;-1244217012;-598801974;194987346;1328364384;-45722036;1092178995;-1570047549;-1809591761;1490485452;-1646524947;75775576;1643229382;-983155310;1933566789;-1884287515;-1120462027;382675910;-1735181518;-619509243;1829382772;-85041856;1623762567;-1510905609;-467892797;-350976805;2081947988;-1283325018;-1346751534;618709295;-262709589;179847273;-469198193;-605166241;706591088;-670623403;11928852;1142142219;-1829845222;1382573217;-1586932918;-1290312813;293200225;878302322;-1589652696;1146472897;1662015728;-274526138;1559058539;-790979579;803783826;1879420879;-202007940;2097998674;-1286782217;1191413730;1666324425;613771811;263494411;-1165554028;-1942943892;676580517;-166262183;-1407762493;-2137952153;1028285724;-1841700784;1679778463;-1501923684;505240221;1297990969;-1190017183;-1083398823;-1814564814;-1257540804;-589126205;-127982322;1740149616;1724949733;-355790267;1456450544;-1031155864;1347164299;1257081031;-212669324;193198666;1007245706;1533095371;-2023871732;-493651231;86011270;-418255813;-687592842;-1802478200;-1513504302;1845610353;243179410;1884821245;1743908304;661564634;2065751144;2093622996;1448890225;-453097575;1507437100;-1842530004;-676123246;1745523618;-2103215427;-160914230;-2064149315;-1719605556;-1023324744;-1506165190;1327236236;-799522538;288942783;1078842578;-614538569;1991099773;-2019408282;2003651055;137398626;1314498087;1985143676;-19094064;781211583;-1742678564;410660632;1964010747;1822607654;-303023128;927295293;-2125700968;2131396426;412845088;200294698;-925945827;324012642;349211447;-750232511;1924774041;-751358840;-1217923480;1942549092;1958915948;145460117;-428617890;-852191929;-562280341;614480288;1164795065;332139826;1995372373;32475328;-1326468003;414318873;-1803562884;-663572394;1945112362;-1006567527;-765181339;-2115974942;-2024857339;-1776957591;1983705310;-318021725;-1190569271;567571905;-1340227888;915975046;1991271051;572046112;1304818767;888742262;-345220545;-1515342242;547630847;-1696202161;-1072357866;-1006560257;5105443;-446501753;-1741294387;-218800795;-1080856583;1878360515;-224721849;2051871634;216491198;-714707530;1578247722;46338745;185230528;-1404796796;-1418171485;-175988661;-2042116817;-1022304119;1503162683;2119349932;354396172;-289425016;-2101569628;-1357272244;1760515221;985371444;-2076972971;-30262747;-906410031;-1517897554;61794481;392136619;838339150;-1534996578;-594188955;-939616232;-1282050430;333594972;-2034104791;1325822677;885703299;-341059185;-183713507;1899184056;-530504224;1355771507;17798623;-277645087;-361913327;1049452034;-1088214605;168176831;261807942;-1400861302;422420373;-1837517897;824362072;2083688360;1215504286;581996973;626659124;1226232952;-385509966;-1339635509;-1975531196;-1228218474;1018980957;-271795029;894719811;-741455509;-679239931;1479668828;1913007792;1044653525;-302716150;749177999;1950088302;-1328873521;-577330714;307522911;2070937218;-604469833;1619399949;2038282950;1191194766;-990334857;-1883786543;-370050739;-1085170987;384837347;1707332512;-1477793641;1272922332;1792400709;1453699305;-1855785826;-784990557;-437184968;1017141600;-1397251078;-2030343693;1585038897;476766733;327099711;1423010298;1379083303;-779118049;-1914385874;-2102833025;407545717;2034544462;-1189907887;-1860204826;14433564;-1352918731;1565876957;144424439;601629343;-88489752;-1108090651;249846610;741665418;1680499619;1165558300;1974098852;-1262193075;83621216;56111126;471908325;2061517713;395491593;-1389899065;2145687028;1059211237;-733811818;-611536889;1758435027;693822490;698608003;-868795151;-469332291;-2010382278;-419295395;1369136988;803235320;1675752480;-323880114;-53519445;393482899;-457113525;-347888203;1431881756;-471238208;1973118527;-2085059129;2076587275;-1831122875;941786199;-254687576;-658381363;2031937949;1957734372;-959525966;1483675439;1635632257;608634844;1514067753;-33076186;-777791240;933228391;-1995926524;1002675648;-1814495709;1401089385;1636586349;1828042498;-1057566570;-955053775;315384867;1294941753;259491203;-80754405;1277177829;-1047532958;-1227070796;-1866442434;-867675619;860648776;-1125789989;-1236550127;-1424021004;511325572;-1820933493;-642444667;-721156521;-834308962;-115734420;1154595911;308985627;35641893;1968299800;-1084201123;-810756;1463811357;1719064975;-499985270;227159186;425441568;-1490932953;60085281;-937141362;1748079915;1888048413;142512536;822200965;-256305913;1214279715;-1828949766;-858436759;-1117225884;328575953;-1313430519;-81421076;1432081121;355734519;-67366645;650641857;-836764737;-1569067321;-28990891;1303581579;1038192912;-670053137;-581294404;914784764;1552229902;542051470;1288303530;750823196;590605234;914112737;-1343945875;-533085324;-324677987;1733235713;-1612257876;1455734099;1244501256;-2013487300;1519715110;93003540;-317654890;1154273660;928353541;-1805954642;846218898;-2113012911;-1370975113;88617186;1708276964;-187984620;1320952527;-1703150845;-1790668253;-2128064060;1293236958;1979355836;1670253395;844585757;1443133749;-1794332855;-896391843;-818278947;-597342114;1580880762;-1878211503;207544714;182966078;1784290115;-990833448;-1388089546;1820964180;1437731162;-1145281095;-1881000038;2032683212;-713723978;2047865151;1897291085;852786388;-1636911747;1262982133;-48827105;-1493257752;-988254929;1631821882;-703935450;1787124089;1975879225;2001333754;107165930;-452939722;-452664370;-1351510329;1021504160;1601581832;472970614;-790167688;-365387662;-984955007;668158519;76855457;1575092852;1789826841;-949651863;-330533948;1116745334;-452917785;1053448425;-909588765;-20686761;1896337180;-1414120086;-744823806;136806240;1449108188;-236025810;-818491201;460912683;-2135560713;30539946;-690274540;-2031864554;1006413544;1347945357;-176991166;1214122156;410583881;1300192982;149060573;1420764476;-458074083;-1135160349;2093744851;364740841;-803238147;283859527;203136789;-996474276;-1442461553;611751606;-1066738204;-1606734534;-1089220304;-836547373;297312298;-457986899;-2096217918;445009373;-1280114865;660205696;1001415840;852579649;-738366009;-216648585;687917032;-274593619;-430666548;1281316562;-1965478297;-498705150;-460374897;-1950494361;213232645;215911718;291571756;-1847867509;1782385725;994439645;-1441615005;-284774280;-1720552005;255292722;-84475664;-1113953002;-572997860;-761003916;372564013;739215612;-1051465304;-1244351052;1378097420;-452929184;-2090811057;1639545506;-280780911;-1961813795;-970512065;-1826069775;-460843227;-1474397627;-278446261;-812547663;1722707844;86191812;-767272544;-1067148644;214505993;746920156;1221889308;-1825885246;-1728238318;-730834525;-475398540;-192932280;1115943149;7363443;1365877175;-634309337;248921486;408504673;1361436321;-562792579;-2074634988;1894816269;-1749994212;-903281353;-899423258;631339196;-545963888;-1328142492;2069701540;425025408;1263153128;55024214;489811032;-761964253;-243381236;1173424984;1922768267;1086817249;	};
	mti=624;
	is_gauss_double_cached=0;
	cached_gauss_double=0;
       };
       RndSeed @[13] {
	name="RndSeed_14";
	seed{ 485936072;1927572969;1950909578;-212357670;982497185;-178283638;95661587;781244550;1454318310;1427596332;-804152629;507451635;-438050069;-1146180203;-101626975;656050425;1804880717;-320773875;-1589786472;569413333;-466921699;1082813675;1028403816;920750879;1011382867;-296505896;-200619391;1882158949;492478096;697016045;1889372319;546665589;1635553097;1774849929;-1413486390;868343563;-383327621;-1663987331;-1811653055;-1811936362;725796236;1139006565;-258771042;1450980892;1321328285;-1193128007;538019829;476037336;-706564760;-1825984920;-626095612;1760244726;-480530521;-1046016023;-170688120;1536327438;1412704291;-1828976733;-18142273;-279716505;-1957897040;944526455;-1835924943;-1976751778;-1602777716;281925447;-1604587963;-289799866;-554472067;1645519099;-1692447512;-974613863;-2056503030;-1178931087;1754491049;-507366765;547160860;-899664295;-914252848;592143758;-184938666;-1070626342;-1804237841;225567188;-594244360;1156248156;-923769849;1484364267;-390204502;1878364934;-1866284771;-1308047210;-589670720;-1645767092;1072696100;765897107;-628780449;-2104886611;106991213;290162276;443779544;692189853;-1401887401;-1801979920;-750562078;-1608260050;1066097606;-1333646455;561353027;1525951196;-179294561;-942153733;516887880;-284234279;-953974412;1334559590;-108579049;-1067552935;1917786360;677452724;-1743830404;571255343;-1319416827;-588923330;152941453;-492221410;1464962287;1511651429;1827177460;1577921834;-2004101767;1858538762;969935067;-976375316;-806806831;437253985;-2091482419;80438068;1656813582;1464526198;-6670465;871186553;1131032907;-28570431;941808410;-1028170797;891914658;1333329789;1742350464;1078330490;-681404387;-1910500755;-1852986013;-397061922;-1007014709;-853363837;1765823004;1830611726;1201456265;-440511929;1845025140;-574592822;511437039;-1995190802;-545813824;851516052;-2022395638;452927695;1759492435;-1011941373;-620035926;-1622100904;-237940178;-1479900818;-1407460278;903377175;-561320509;-1504998031;1822841361;440670467;-1051362845;-636357099;-1469981340;-471732235;692605638;-918642985;-1333780898;-682674425;-2016552624;1187094551;833220460;-1524612517;-978661667;-1255510953;605003;929859674;-1522534842;-656241255;-1503704952;-718309063;1278271146;1897815360;-643197841;1061772135;766259055;1247420056;-232983509;-1859273577;-989191015;583850899;1633242321;201760483;1708731235;-292319105;1542348226;-1450354234;-1372958932;-313336833;1297000262;511573726;355228786;-1223197737;207345895;1772172034;-1711621105;-1897257214;-1035967518;-1073622616;-1718010789;-852528894;-633856181;1541005391;-534692434;-489034966;-655247081;1928706511;-670855886;-1471353278;362430510;997585173;119495481;566198126;-1346296488;-1314461835;-252116505;-1854094359;-1434513491;-2058430462;-1313654536;201934235;19229217;1282771200;1001887585;-552033470;383595171;-1949092274;-1099491076;-1202795721;-867661333;264475019;2144915419;515615751;927702729;1817065300;-171224431;-1570392413;1799632783;1082583569;-823334564;-504042872;1156705509;1433697027;1104583386;1921469560;-1164120625;-1748531212;691358498;757716863;-1370620623;-240504522;552454145;568291966;987732688;-540973781;1787253220;1266277750;1088032785;2031150959;-1954075258;1380751925;-1641370714;506232023;-734179081;-1288731287;-367859875;1926797117;-1425618988;-646422889;1025934734;1284354097;411055132;-2093249479;1579607925;996304371;1678132495;-1664107081;-1771129189;596962448;-196450812;-266010376;1996273469;-2107152413;-1937086979;-517425708;1262538253;287946743;1420412079;167622627;-2085156659;2090222058;-2114206217;-889702422;-1120354001;1258310916;-143060675;229637307;1640745485;987440131;-1093676681;-1790426766;-1701395846;-1663765853;1682105297;1425945181;-1044309094;371443116;-660993492;-8246052;-965211059;-904619495;-280053866;1801464862;493289617;-387460212;278331331;-1664662456;-1808823156;-1461947551;-2073132437;1078109642;831655285;1912991112;1932790125;512132349;1730731571;-1117360867;-1717066337;437280086;-540943788;-1313557318;1644807680;-1093097266;-345782810;1216848324;-1149746907;-1923050288;545069640;-597432361;826731540;1239275861;1059107734;-1726209631;630096323;-453013916;1960398617;-1363669521;-879995655;850219547;1645140257;300796699;1178572323;828141287;1830969761;-1607522913;-1325015695;-1929909536;246455980;927770463;2120802559;1320858555;1542288360;-820679308;1565122683;-224601173;-1962437934;-1421984357;431239145;756652410;680646832;995143423;-244022485;322971737;-1806266961;-1280148524;344613634;-1230822561;-1881884089;-897618992;197031639;-2086734996;234744320;-848866405;-1096264556;-439900469;1870517894;639951842;1571806154;-1181852744;1582742532;-486941540;1610490719;2143503291;962479112;1355882703;-1699598098;1257216709;-1246300930;-1657961193;-557793291;276849595;-702321291;935876413;1466241473;228573809;-601018041;370005383;-445939977;1929751545;-1106472306;-952713485;1566033512;-2052163034;-1540393490;-162999337;1592002656;-1625671422;1557757630;299645466;1974523906;1047778800;-1161766542;344111859;-1371222365;639676490;-1824315144;-1589447063;1446477055;1220165631;1168912128;1461524016;917568545;464004050;2000651688;-30003588;599478507;-1314803320;-1349261500;1191753329;-316543996;501407640;1901236430;784001666;-1194583774;1373113209;-660094926;761269808;-238204212;-1565504376;-666235312;1596396446;289658523;1608097800;1941960303;-1969284791;710614907;975781996;1488205954;1089300630;985928827;-1850807952;-1894900252;-673455191;-935539202;-400249922;-1534400385;1487118400;1461191829;-956758955;703249888;-631649453;-2106914684;2138313939;-1850828080;-1099204399;-1943758793;1700228066;2070875529;-540663645;-1258258148;-568459053;1979032590;-820067606;-841967379;1806022119;671275968;1392145603;-828775282;-1713266010;411758778;381322601;-1160063627;-556537604;1145333157;-2133008449;-452236131;452225635;470939165;-1500077952;-1864308902;-135176247;-721164604;1685818774;1453698471;-1596630381;1201362507;-176380087;1522179146;-1823420752;475844692;-26794177;-178939704;1796664628;1567618311;41280381;61581169;-1888777546;-577499354;-1383610180;-969809126;-1511654398;1805151782;2099730058;1872923135;-185900705;293316470;1856059833;562511812;165154433;1401406483;-1862533303;-1374167609;-1585713686;1770915514;-1178616582;-1349629940;1209265595;304830104;-627538897;169587604;689180573;-1701826517;-1043860632;1091849843;-937691337;-1665180222;-789856513;521877420;-331610851;507319576;1376464059;174993830;2039836355;-813136176;-1530323322;709472348;-1057500523;-879600264;388150994;1279690022;-316315216;-46628627;315375157;-950932935;1497396531;25428236;1425528847;-120996390;-618657294;-1970477205;-1320321084;1935565174;-458873524;2024604037;-324190353;1665061880;-1626807142;-520123818;707531496;-1646682136;-724151373;891827922;-1779301059;1711524671;-34250789;1090611870;1710696994;1795513655;1819913911;2038126136;1448904680;-1701031335;1279013716;-1903443977;-1567630568;	};
	mti=624;
	is_gauss_double_cached=0;
	cached_gauss_double=0;
       };
       RndSeed @[14] {
	name="RndSeed_15";
	seed{ 485936073;-554961074;2039203427;-2046970195;1990572559;2119558539;1317038456;-1620419132;-376441562;2147452066;-1572892839;1447576050;124915691;-1913517372;1538012716;-886410032;369754703;1901604924;-146363101;-1654100557;-1463943191;1683471052;556754935;-2112343158;265821376;-1327097895;-125264767;1228231013;-732716912;-302906084;-1659724711;-1736350970;-836422476;-488326316;-1075808139;1397241366;-1357863369;-503910386;1497279047;-289233979;1591317318;-694609364;615742389;1173793684;691498741;1374872534;1067643649;1616668820;813694969;-1370800530;1292594382;-798640930;-738877339;2106121843;-215431888;-1459414954;1888062812;477530858;797051020;-1598796937;1337352805;-296200783;-1097592456;1612394337;1119097120;303852358;-779564832;548256978;-1604984546;790482001;1263531323;-1386362327;1113507391;2066572479;-855347904;-2113079622;-1641165084;-1676298485;12847067;-796373834;-1413078855;-1781793512;665044372;526722999;-819291513;1914411625;-480406690;189982984;-1784465280;-969876061;-415100806;389038360;-527989036;-2138947024;1345249304;1696254780;-2063543183;1042963648;-1147578334;-58137341;663705956;-199178023;1382148200;-1931484460;-527235882;1164567922;-659090999;759504669;-273232931;-1588970237;1945541331;-1931249847;933377031;554124852;-941848842;-353543140;1321922479;-1508463077;-120778413;542876935;1185536827;1038846043;-1738375327;347946378;1532895726;768953032;-1516009114;-808994573;710174512;-254450063;488795516;965774959;-884303537;1636575105;-1846602234;-801647589;-214989312;1317829304;-1842844537;1604910596;1002431877;-1490240762;-1311314654;714190383;1492770843;-331787053;-223230302;1037469464;93791500;717818449;-334664821;-1601227457;749250217;-1168559546;1358117230;2142965862;1734711359;2067808019;1402438840;-1109565796;-1639259402;-1414783259;599969989;788056924;209745904;913228373;-335206097;-1857697021;-1556897523;-1074228588;228465624;-550529821;378641676;802316905;1904870683;-1008407055;1715888938;-553376856;1365612073;1971824251;-68028202;-1904989762;-766635038;949502332;-377408860;447044508;1384620358;-2117951298;250742504;2072437317;-886462062;1109753844;100178281;-485705682;1741668227;922820877;-1317208091;1586796008;976737971;1020428390;814563078;-6417369;790705918;125477121;1720848177;1276161725;121343226;197552497;1640764261;-2086655163;-934604075;-24316607;1772819934;-330499888;1028396821;1693604128;-516500515;-1525324433;1454594523;-1664213539;275194071;1126433968;-1869638733;-1803157836;220652718;-1451534457;1612887387;1848948581;-458432680;993579724;-1714530462;-20260409;-1192374468;208466527;-381061275;-1498697175;-1488761117;384534706;-336449240;789211622;252829358;16382359;-1336784763;-1997021898;-1416160648;-1054950121;1071402458;814375417;-287971019;-592647865;-1444320050;-35317385;1747853248;326619426;-585190040;-970926282;-57457175;401264723;-815424319;1430825869;1246600000;-2089088342;-489218738;-425212568;1388586815;-619337089;19701750;2146419481;1051185540;-235844063;301074040;1731905127;-1557734066;1205271565;1493687758;-1166587202;-1020061376;1350751108;-1418550897;-477547848;2019825631;1599420847;876601536;-239440677;1018464852;-913471423;-728754904;-1336320490;1764152068;610397978;1162756196;-1760004612;364739674;1506032295;274201252;-1840011301;-1564255547;840454316;-1955077882;80931775;-845596025;1734392641;-1407245970;186580171;-2045812665;-596055702;1585203359;1849111945;-567941156;1495520048;-914453365;1876572895;783026382;-1606961025;-819875957;-336459293;1659291292;799105582;1064852324;589337523;-657845793;-129251059;-337587768;-1064998566;-948817311;-2051910673;1975513799;1494269797;-2050750532;212712767;-1148493275;-1198155346;-1510560216;-122867233;-116954854;-1562781396;762203766;-507765793;1294187294;-1072338034;-1411586827;2070906312;-703112541;-250191241;-1179587300;361012271;-1909471515;-1902372482;-811766968;-1164740364;-1633394580;-1720259899;-1895816989;1322017574;-1580990779;-1591933722;1783427928;1376101506;618202133;-1520379216;656247714;1741670995;1216263620;2108106020;-1512737275;-678276816;378754445;-1815857392;1734368650;-1914614712;-641944412;1219602006;8138951;-259342600;1137618301;1774571363;-1699461854;-436377831;584882364;1273552807;-1206250502;-1027499435;-229381268;-937211062;-1271544243;-1602189908;704699688;-188110261;-2018986004;1065414763;-982180163;-1814376323;-1235141981;-2094838770;-990679482;435187652;-1509425696;288562615;672311745;-595835980;-1958434877;-1306297930;-2012456554;735808759;-623915513;-614961879;-1871409880;-240308951;-89895638;943481798;-1012771656;1132495458;-1137742421;-335235510;1801977195;-1400195471;-813529089;-1054243827;-244410072;-993561958;221452545;-1466865654;-1975364402;1830855203;1267870482;993864488;693268594;-1764663131;-1511685489;1413806158;1178681305;-2117023257;346961417;-1444600770;-177247906;-1847437212;577075186;1054266927;1923787073;849872887;1414485291;-1006234293;-1933447390;1532721499;1216220222;-134115944;-257830171;1442794621;-183792980;2039373772;1091273379;-1126089299;-1834418481;-1063043674;-1477992225;-712786440;-746436401;955246149;1086572547;-1554711403;-2016053153;1529693054;-1636591127;-1167622522;321228772;-955331899;-2033977360;-358656435;439274650;-265608041;1201972282;-1049272290;9007689;-1335744090;1920938894;-72359866;-1454675435;-1054331920;1812161469;2010773259;-411512110;-348911786;-1295621269;-1219007664;-1523958978;-1308590959;-387919131;-36025179;447681894;-682555097;-1059528418;-1982572708;253347842;289602743;-978541279;1030380121;700336141;-1057201134;496473511;1467313110;-18178873;433110857;-323450173;-229670985;-1834960900;198281007;1363902085;-1625714673;-544748515;430020563;-1043999939;1070237557;-1650978775;584214008;-1084492582;-2026425541;1438627969;2044742789;-435366374;139647716;-871341572;-1998511452;1994883976;863647768;1608842116;1553230470;-784250799;280194153;-559089539;1588296135;-96730320;1908969522;-1364119245;-1013800086;1714203523;-1074381215;-63006169;1814828621;-244876778;-793024156;-81152321;-1184647607;552734901;1533310600;-607054035;-1457011385;-2044345509;98547008;-33438620;-73491000;479389245;-355041992;-1069482641;523684293;1123748323;1652742741;1287854416;-1900259294;72869582;-120303755;-1098677826;1718865245;-770030722;-2031777916;1254043666;581772468;1205850426;-1092411010;384537636;1513404525;1752338646;781661710;-1342712894;-682078979;2046578804;-1228055192;1273599762;445040576;240292098;-1522841075;1164919087;520640363;1023394429;-43539816;1176837231;-1210247249;2107698827;1844181181;-1017528200;1103611348;562236503;1689218978;1835681951;-1340262745;944234091;-481360502;-354254239;-875436801;1346254274;-1348103354;-1627488212;-700239233;803948870;1525965049;-250151884;-2071203056;1841924728;15557916;-58138004;-398999764;-2120771859;891123118;1482395146;1634725820;-1566524169;-1254314992;1166247810;-922840040;-93330415;-2085576827;-893439569;985114441;-772140229;-763719801;	};
	mti=624;
	is_gauss_double_cached=0;
	cached_gauss_double=0;
       };
       RndSeed @[15] {
	name="RndSeed_16";
	seed{ 485936074;1257472179;2127497276;-926817004;-273043177;999461097;851369203;-1204799770;681683964;-1867073931;284994557;1537556444;-1838516419;-1802845464;-378265504;-421871074;-1325720959;836145344;1918753746;1617995090;-567302957;1773098533;306331722;-1567557815;513127343;-335443164;841270653;-1734553748;887207042;1848887655;-1157624996;-995374539;-696799890;1661059362;201453041;-223356616;-1354872981;-1213702766;-563152394;1463794384;-824865379;1784442239;-1820221216;1332439893;824003664;-459936835;75542564;-1509637533;1217239413;-1993826571;1725556389;-1360936217;-1063161459;1750649659;-1235208168;-223212423;-666749350;-911994282;-1210206013;-1415565984;69818854;1119260155;1574358496;-2028756220;-903379042;-629766606;-169203049;-264765273;-219413256;749029964;705494082;1206704209;-899405864;-304812880;-997052951;-1046194275;1712070562;1630254748;-180088513;-105387781;-268197336;912588360;-706422086;-479835056;-1871083501;-298137590;-1233339165;-697176548;708479379;-1011027368;1539002689;-1474146661;1674044345;818040821;-987322105;-942681357;292595984;-1956887631;-1182367487;-131038830;-1754220647;2063033228;482065415;-438178262;1773528981;-759262771;98092208;-258487845;-875611484;1572242256;1753163875;-1183489767;134464279;914638724;-250487930;-953628436;-1188549185;-1988153082;1468365578;-137400626;1253928025;-232859855;28485940;-663382529;-1114896152;-1351958833;148110431;-397776646;1649912765;-1180541523;-2063950451;941273326;-1447482262;631909773;-1453363673;-2086976992;697518578;1464643331;469179988;-1945769041;-684683059;-1052155949;-454484578;471643264;1668003600;200168262;243355952;1707587715;-317235746;-662811194;1037442127;348680898;1942821154;-430725528;1409084369;-1347724885;-1053503159;1859988687;1004465124;-1905519213;-886694955;-1782021617;1880048835;455078701;1861813861;1768360473;548787230;-1424834947;1339039683;-1805034957;304860927;-637001146;1802466021;1538283681;2019596238;-1442665382;1471223656;1313107486;-1765340691;442553086;638528746;359396103;-774463111;-2006056999;340731167;1978678516;521808483;850834634;-228888978;-1926895938;-1751997206;-1452066745;695542009;-55950338;1702508691;-1787005859;-688275137;295065969;-2075802789;1753199588;418023201;-188810802;329401259;-1830275518;-1234851828;-580072365;-344757154;-602765696;-1361040001;-248195038;1181347543;1215676737;-476020972;-537496600;-1884192883;2134104898;849435975;-712651556;-2038027307;-951690322;-1014185699;1773354931;1991009304;1547952060;-1817285775;259387456;-925234654;542681320;-1279865748;-1182300597;827591859;1306119814;-534398165;-1641857103;-2098991735;-1059513406;1942568209;-880629699;-129527964;-1614105710;771811520;2790577;-1758043193;-1707291988;1429542298;29260316;-968676862;-1140777892;858816526;-1895037825;-1181766837;-1822972472;-908885074;1738901822;-814031399;-1524026879;-686205137;1591341405;2007660110;-4590290;416141509;-1085289538;279379506;-79098687;1827920786;-2118365944;1204469756;-811129636;1975903239;574893419;1663119173;-650179869;1053895536;685052993;497993655;-388580538;30593101;-1212128138;601208538;2049036057;282234256;-272373015;-1788286612;-514721919;1599682918;1673315776;865423171;-1339547250;-191026852;-759289188;674162909;-1892997804;-530922990;-1876907302;607715422;1984001085;749402324;1550426317;1917689254;1703842574;-1218704105;-773560458;984444759;-1234993790;-1578498896;1454710123;-1474800124;969746321;-652986775;-1426181369;12242735;-1059265086;39972701;558314986;1851293836;-443470372;-1729334985;1381042214;-2073684063;1214418830;-1902171221;-255284242;313043651;-1891452110;-1714386124;-532622445;-1279555306;1961151019;-845529638;-438138650;1206227107;-2073640139;-981175041;1388381369;-1296738842;364767299;-754090305;1145675133;-189366466;1824708964;-1124478163;-623019552;-120548635;-718205931;-127169530;-2139100078;1579093226;1050074386;290577270;1811397867;255640496;562193871;496431883;-1108621384;167663556;615286199;-1482641001;-662581714;-2117636569;-1935457536;-2007792846;1350005593;-213738718;-936190352;-834514997;1800635221;277267858;-1545267703;-2139449657;-2039485910;898550586;-1834075819;1624059847;-705769325;-1463461306;1527185995;-234650966;988675878;-1619328648;1101521053;-1296884984;1332217455;-1803720476;-1729660355;527954779;-1492404376;-391309228;-860738858;587850893;-636378586;-2084714721;926487800;-2004484256;-432589517;328117626;1215741101;-628851352;-1353662524;669425836;514683243;705496007;-1667695084;-487586240;1809929474;-1116068157;-1690987334;-1715329490;725261555;985856119;-2061191284;446261920;49722043;-132671389;746225533;1392063215;-451643515;565436286;-754738089;-446586170;1325639260;-385652395;-351168877;91453558;88059445;1171069329;-1081530503;-275093455;453762917;-1107349115;-706688272;-1091494259;-2006673638;-432835032;-1145592920;-2018538044;-477370671;-1938393970;250538225;-914234933;-1903551073;832681385;1654857318;2121342813;401448199;-654789505;-233205079;-298198832;-476022786;-1301234287;-286033984;461020337;1779535000;-1587979487;-1141132908;-9414668;-2111380166;244017376;-1237302743;1039146945;989975024;1050756476;976471993;777965259;1402944230;1151917555;-1627122613;1165366175;-915976919;-1842156186;-1663160759;-1300535187;614243490;-502628414;-1228295682;1001854534;-1374600839;-1758025117;2120622882;1091475885;1051963067;-1870461785;-575659014;-1047694305;213241071;-1125203153;-1562306650;-1913579110;-637963553;1910902452;-795497390;1182488287;-667413119;-1070526410;-495270954;1141850615;-1710510595;1555177099;-228333469;-211415086;1081219176;1928516705;-1676334123;-810459959;-1658341463;1805843311;-136506785;1771011142;-921761538;1504244429;2099968121;-868990634;753354120;-1037289304;-160243592;-1127127671;-121539366;1774861473;530287909;787119775;-1969222206;-1195299128;-976776773;1891628962;-1061687206;-1767868887;-1413962748;-1815482772;1279652213;268130516;-1367375435;-726000059;-477402703;1567553358;1447680832;-62895173;-1611966033;2056452185;-313846575;-159278348;231822478;-1313317854;-873891139;-385934060;-220673230;245130613;-1741511094;317727882;873612949;487495661;1770702758;-768989687;-1153278439;1548260815;1097882223;-759526000;-597522390;-1294161063;-1136635884;685072604;-1022823173;275341320;-567333543;492310708;429583671;-1282209817;1535028366;-281305695;-246487775;145595042;-424888797;-361038630;-909843240;-1624997981;-1155889726;-1421179138;2005409707;-1756595630;-1227811887;-1830961279;495889394;-823371074;1459221462;1929135385;1646861503;-1412692162;2046949621;-273822066;-1258883860;-1459355086;588287805;1490758239;683018085;1233713705;134355993;-1702004433;-68884972;-552462233;-1947392567;-900297107;1935741373;1139645828;1622037714;-974035815;-11985635;1279233330;2013790844;1911087791;754093829;-1889592231;-1590696632;-1231023468;-2127323759;-340404125;-1171668923;5234025;920554964;276851468;960997925;911667203;-892121446;-862132791;828753183;1803378345;-155827529;	};
	mti=624;
	is_gauss_double_cached=0;
	cached_gauss_double=0;
       };
       RndSeed @[16] {
	name="RndSeed_17";
	seed{ 485936075;-1225061864;-936843708;458217734;-120662686;-1687021494;1828330606;1928175314;-578579385;-1927421219;-213067515;-1801464471;640841283;-1828224132;-943239484;-1774480494;-261535776;-331950176;880692833;1584256344;1777388849;-2044746747;1232369113;-1494542769;-1043725959;299032379;-532306591;-1633046075;965190303;-823967784;1607558277;1275284531;-294530598;1159982014;-2037499523;1499113022;-478917121;1820500113;-614045450;-1740274224;-2000081406;-486726103;-898463556;2073504390;-971569553;913921225;-1984101253;-1438219028;-176697322;-2093787782;843444362;253214885;-1963307443;1087515744;793930619;-1687799106;-270022556;-1618858020;-1861439280;1918903573;122836256;-957762083;765103828;204852707;27112911;1445822956;-470345789;-764272893;-224576700;1873961544;66639891;-1454085434;-1764949092;-148636769;1948041430;745284638;181423650;955057591;-1449971583;1134378750;549016043;2002851080;1825447391;-1268803863;-1780003317;-616326430;-675970021;-84544049;1814570452;216590946;2113989380;-1119525292;-461412790;-335582166;231120267;-1401386186;1283047396;788349626;1572265412;37153820;-2000018576;886439519;1713844961;735113927;-1295169557;-1445457834;-2058918514;-1588134745;-1190593915;-1672603984;735196840;667383991;-229797981;-2015999343;1400444785;-1604243549;-2110000135;118855036;-1092135326;-81890217;-40838756;-1779109068;-1371153720;1462463533;641284568;1768975029;-1654624894;-1339771905;-893884335;483592923;1014761;-20278160;-2105336605;1582681674;1800242973;1420315283;407604770;1070417395;1947247721;291800467;1395220107;-1062197505;-1421853190;1128934247;1967568334;1759150652;-1718417501;1736322072;454018929;1057761578;972666920;1814761567;-749616210;1991559386;1993175553;-284165477;-661571948;1503811888;1528785395;-1061859559;814948322;491357899;984732089;426950560;808598212;815797241;1906778851;-1798720047;-1566070809;406964994;749152884;752342127;-723568777;-454429327;1388697768;-1046483876;-2077222613;-527442210;-351128861;1602745107;-1355446066;-1813502671;518256853;-638703168;-677063257;1373179501;1749974358;1231815438;782843047;382422432;1780498654;-74846278;-1463511619;1978354716;-1034187469;-922917709;-408229324;2034685816;-1299069821;1093832876;-1189434871;-1764623840;245490228;-2024271025;-1959865555;-1832486568;1756695376;-1380790076;1991267566;1468951068;-456891581;291006739;195141715;2077600916;-927214433;1462132323;-682381438;-176732226;1604219755;1697465261;-1916354632;35270463;-1235854407;-1924774746;1743837588;-1249274454;938931242;-1572941963;-2146465321;2008506094;-911254479;132391585;300995437;-1188839446;1277550450;-274025398;-1563217223;-1969875020;1843511740;854234496;-1223787408;2020482027;-339263932;1306563062;427279975;104818328;1393742574;1909989442;-1185048985;-265591854;-532661393;152583831;-97484401;1162545465;1594989590;-417602286;-1961985611;601486644;1839370886;926879558;2113371554;1482018132;1041203343;-1613545358;518282552;-1836859359;1422035417;1902967619;-918326250;-1991308714;822216754;-1114767671;1642932775;-1121322993;1537790771;1627329997;1877067408;-1857162934;47692414;-748944691;-1670423970;-1748114587;-1094854723;1402230390;-317928177;186405593;1517408699;-868595327;-1629252758;1636028713;-1677201942;784991659;-563494757;-1141746403;1040330081;-892612244;-1551431437;-1297710786;1870535126;-512409090;1031696125;-1322110978;1683934106;1234782294;-1081009533;1626701590;-813730747;-932423983;83010574;837302459;1746367997;692677027;989063559;551903868;-1114097626;-65705105;1793339096;487038426;-797904320;-1844809554;-652312292;-1745122948;2101587448;1906107776;2084541993;126461709;-1324360089;168414240;1224387048;-516834506;-264160717;-1993365957;927995593;441028506;-1575677168;1459825001;121634648;927848201;654878943;-1159530418;209757008;-44679195;-494711532;1907341930;570740879;124506308;94257838;601976321;970322113;1350977154;-766841331;2069326565;-1913835180;-1890222513;1030556355;639408978;799419070;211848283;552670285;219494600;1916432464;-1788827042;584217526;1324224057;-1928358524;-1663781557;1978570811;-668001711;-806795830;-1847584066;-2032326242;-2083919873;532278597;-1657304402;450085714;-665783599;-442486702;-800757138;911364987;-1450916862;1246057852;2055577806;-1821361623;-174786698;-1134149719;-300506376;1694736777;-1768389589;-234547535;-335202369;-1090086222;1630746871;426451094;-2016533833;869896179;1451480938;-1204207165;-1962001486;1549712894;-351834582;50423997;-1983481566;1644161842;-1858398286;-775058940;2133210456;-1643204941;-1440831892;2049607934;1225884980;883289219;1285385290;320658995;-1800276292;-831256428;2088842290;894297279;-1939965956;1601062616;643503680;2090338532;1593905406;410856769;1331799372;-1810403831;-1653649664;-1354743948;176763193;-133763543;-883527105;-337563814;1771917516;-1930848367;-1018463824;1221382225;-965148349;405323764;-2038869767;353388477;-1208257464;-1921614614;-2098237119;686394409;1095057128;-748976983;-1245687089;1623941535;1523389205;-2018886492;1361626431;1666580792;1277492800;913316457;2101059122;663992037;1181398816;-771626291;889971471;-744710731;1697292441;1038792132;-1321493471;-603433315;1274461221;1476624388;889663690;1383619460;-1894167988;-304082790;-1032360142;1509366059;588933481;699648325;1200051986;193169241;767691000;-1021164620;1623369744;489974163;2033341406;517369819;1601394248;-1985143377;-1041675228;-472060857;1182112953;-1504883074;1894012115;-1523066174;240783273;-1786208105;1558845876;1114965;349294454;-217644676;1074368522;-165103289;-1441628731;1661739125;1683153847;-225820990;-815330022;-514224685;1978221831;-970820778;-1633484926;-846573702;1416109496;-519389959;724851359;-1635788359;-871171130;-1432566855;1924484552;883376975;1949030190;29167247;-1773516944;396899328;-986675705;502859164;243512469;28114387;836440394;-1733005762;567385017;-770215157;-184046537;1822082708;-144107558;220761007;-1987525346;-1472871904;-922236033;1549575682;-746972090;-1439623599;177552344;-858835374;1510525200;-460820783;-857727753;2123760226;220917294;380147782;-605320257;-203833522;1935913092;-814820451;-1756689029;1159795683;-589378479;-1921220478;-161270615;1962459964;1498132028;986015037;1404672062;409717257;-1545303876;-611736794;1470049482;-1638772407;1627928522;-660166581;-1547243875;-1383580175;-1785954794;309490716;-2079404731;-1767702979;806815766;-855377686;488957738;1231728592;166017204;263435588;46393877;841193867;-1409025766;-309911364;-2146491232;-117299152;46279014;680258950;-402952665;1193261694;-1211396762;2142588608;-51094158;-863938333;-709365073;-182137812;-770525220;14804045;-161003084;-1254881657;-1633238578;840213458;-527563215;-591972846;-961646578;1227107451;-429336451;380295698;-291918473;245400866;-1467893047;-1481484425;1516052618;83180601;-477477408;1915293683;-1957048609;-298982249;930768075;-926455425;545520725;946801907;-1872549558;-1993419820;1102126043;1841146224;429413636;	};
	mti=624;
	is_gauss_double_cached=0;
	cached_gauss_double=0;
       };
       RndSeed @[17] {
	name="RndSeed_18";
	seed{ 485936076;587371389;-178449069;-212780909;-1035968300;1897546712;345695651;292934742;142134262;1485381143;1775019192;-822936056;1176444259;1991117239;30816988;-888605477;-1216859832;1171393603;574367772;-1678323937;-2097071227;-318194856;-1271751171;343854258;-1569717166;-424639575;-876614612;1634096550;-54056449;-974164855;1750183056;-1047941548;-2113972365;-6293322;-1624703861;1846539056;1204235129;-1205903747;-1754579135;553635990;-408448682;-415902798;2086485503;-790076575;-661870634;673330230;1491697532;1103376768;-1217621739;589008196;626270214;662558865;92473961;-500937566;-1447336773;216317492;-1552621892;1199673135;-570483872;-1627207350;449376676;-434890255;1433321144;1003569212;-1500351508;-1420551385;-189234469;-21416069;-1039525220;-996894720;-2146528139;-1770700230;-1942284192;-167046925;-1258414342;-543363037;1179376876;1537474254;918114041;-147953268;-1833554757;-1528977842;1166362702;259051134;1131734538;445097388;652306738;-258456815;-713746318;945692142;-727175872;1734850250;-263536269;1494434189;1300285594;1600592006;1870523555;817827403;-2112633095;1009177706;165972022;-1249336397;-463909317;-1516252033;1815132857;2116952833;1844367210;-64677726;-315105039;-1123335705;83332295;1030883826;-1561432342;-909907463;1347951124;1800046524;-1456033019;-510369480;-198185027;-1268235155;-1395955901;1162380830;-465796683;-1052535991;-1467894098;1956847193;1140855094;-1984021966;-58677904;-2123312672;-2029862740;1777673001;-744536244;36268464;666231542;-34459243;1882248886;2033034684;-2132834021;-1002538904;1241761219;2023741463;1380845372;693338272;36134832;-913444607;-368564132;-513030898;2069083061;1293761177;-888441202;-137217224;-901713441;-99473307;-2087549224;-84943203;488071922;-892629993;886110338;1325243881;350778664;-1165975191;-116460839;-556631387;-281593310;1909233834;-1273446627;-1713111326;846819080;1334580945;-1171631942;-320057021;695684844;-306024503;571422048;-1993314417;-1800832943;-1501174672;-1322114132;530723417;878608081;-555949526;-1655952413;-240141956;185738963;682966264;1474938514;1015350202;-1584463074;735721161;1609051915;-1727206991;856555359;-1312253892;-816890056;-776501750;1784787793;-391016619;119313332;322804427;1857140191;1736609631;1221451488;-374974320;-1542677045;-1779838438;626441286;-740049299;382009398;844102687;-1605103603;36396478;-931616054;578810658;327556928;1432589591;1454151814;-1352045284;1137646512;73311920;794555468;-1558704423;74321989;872700184;1762459480;-298426370;1891452083;-1119003363;-1238084321;1945967190;-1571490759;332721966;-1186726898;1846074789;1738028702;-425614170;-1687862523;1224946096;-1951312701;-1063732716;-2106017021;-1631825578;287181590;1784882849;-1758863852;1710777763;1221708768;-2146969156;-758016274;1928356218;-1956755071;-1205920598;-214681788;1545588480;1935357283;540770985;1862663853;-1990490403;-261976579;-1630473159;213970763;2000325788;1940160503;-266657003;2115346102;-612856260;-1838623003;850356526;650124850;89304263;92646033;-1946491580;1268313006;-281107428;2053396557;1995145999;1903113114;280645692;-803879742;-1943475652;-1053714034;1922632378;1279021025;162161787;-1554220893;678478242;-276162552;-1264164746;-496098588;-1368234684;1480485824;-1768829624;1130928470;2008354680;-1744446237;330010348;178237508;674295805;1470633211;-1822420531;1595395799;837755291;-74369451;-1162316003;-1201694869;1436348062;1559641325;-1372301745;-1796193643;-594668088;1246051661;405986355;1296903255;1250329895;274587448;1812335187;-1171917418;-395175775;-929010904;315706422;1272313998;-1923573588;-1033151512;-805763078;-1772918911;165802740;1708486538;380855838;1765759262;-259473020;1412864653;-1139546489;1138368709;368300705;-749648941;1997148767;-2090889626;211989189;222230027;1238365866;1287312843;1386574855;-628621900;577702282;2091884234;684804720;1685606282;-690633166;1086221233;-1533956659;-131704055;589317713;966006869;2126911466;-765381607;1777432997;-1982217448;973661351;1550882377;886035407;755063059;-306687768;-948784863;1090065877;-138407408;184045036;-417461366;1606803324;-2045373759;2115289952;510066615;1333580710;1729421655;1227746915;1348436000;1042691964;-852934300;1125641756;94992363;1484133426;684344475;-1698626140;-1984491012;-204666699;-293087410;753608674;5025708;-2047320993;-2030749899;801913144;1455000734;1875809090;-198969865;981180109;240934251;-899932222;1839059377;-1337267203;-1378642903;-951930;-1561321463;1311738088;1399109247;-237539511;-141327418;1427794766;-100491583;961312289;-1387706979;-1887203244;1098905992;-221854296;-1277066989;1501627986;-1936790691;1945220378;1879369799;-1272505537;2074895795;-313629987;-286797510;352063010;-437270768;2124920614;792732427;-1873037312;-373904268;-492913762;-1202582627;99593832;1086159030;1901826274;1943971391;-1853831641;1490746187;1441120229;1183955624;989992802;1644473696;-699903492;274911827;500197240;-1092613102;1229542411;-1406303314;1931477145;-1340500554;857826755;402096815;1348417484;-1391936861;-155661240;1984544347;1315718471;1320406116;2014622368;1110025293;-244416571;1768120552;-1250890056;73775918;-1282377485;592425443;903392094;-1983714330;1298142917;1114890534;-683231946;374463677;1654144358;-2135074183;2105378654;2006008147;1233234227;470910100;-2098691009;1848365805;1067353337;-1652377317;-1253021252;-1652398122;886008965;-359923877;-1874208869;-491654591;581429231;-1293522383;1327641350;-553786709;-351381967;-601438812;1990417358;289276311;-1150193280;-1676780488;1050373841;358060901;-315542070;783403839;-1264391986;-529594768;-1486481324;-1599626780;-1928267851;-1237078997;552853286;-1532206600;1581740957;1750276744;666618634;-234522896;762641118;226085270;1225248815;398443048;749142987;-1116134373;499884258;2023583024;2111983452;776804025;815921670;1021238376;783851283;-1719865461;-1019620326;1359024363;-1243682719;704883743;1399357772;-628606349;-132841405;522935124;1866923577;2023114286;-1105077854;-1808695752;-542516997;-1310239758;-2017488949;-855290519;-1888794897;-356330849;1943442859;1499924530;644778304;298805346;945726157;-770641403;408859779;2139903189;764341707;-1691191745;869944634;-586513396;-969202922;-1397877131;469077536;-741329714;-352220144;1679257775;-2058447657;-1820739781;1621216432;-80249591;1913958695;-184468428;741815018;409752202;346975403;-1650105167;-100038694;40156121;-1993064486;-156251530;1273397096;335443885;1395379842;727815921;601786456;405464316;274412977;1737419291;-1251981175;-1248066529;2106336954;2082626833;-1463006821;2066410665;-382908267;2127555452;2037960608;757994965;-240083878;-1329048977;807394388;2143740792;495092242;-1567165072;-1123624367;986681367;-324982164;-1739315419;-1472703554;489465736;1560142597;1942206194;-305906882;751437425;-1572993546;1297346470;1861152326;431555431;-1264486136;885071192;374124063;-1404548189;-1503264274;-625340282;1843573732;871991493;-452500186;-1324435705;-672996248;	};
	mti=624;
	is_gauss_double_cached=0;
	cached_gauss_double=0;
       };
       RndSeed @[18] {
	name="RndSeed_19";
	seed{ 485936077;-1895162654;579945570;-1751749459;457934863;1023784176;1403310774;734794042;1834014186;1623992512;-73245393;1193234023;-48724918;1668694490;-1209848203;-1715469310;-2031774704;-1186001621;307896895;-40093202;991801237;-557841698;-212572601;-1495089941;-1528022779;-18333988;-1486936811;-1425805010;-1127042440;-1711688641;178503983;-247046486;-1140143667;-823499316;798945741;-239658236;199583975;-923336120;767232701;716530104;920847808;1306854633;1297291186;593241290;2089852382;-291266520;1014117413;-434232;-1271697849;-1104122262;-653707462;499075760;1715513252;582775118;-1910672900;428926829;-234904775;919302171;-234967583;-575239067;150076026;1473846367;1198030676;1873918408;235527565;1548738018;-25819695;1315679773;594324816;-1613745963;-2128128999;-1320967698;516566628;-850144835;-1048416704;1833720762;1649689619;1479179623;-72806516;-2081445190;-1695362328;-1861062493;452171991;-523805658;2147100653;75697265;-327982613;-1774008097;-1075673975;823766576;547973450;-1523243891;-227478585;1935675569;-1566259762;-781175333;1191040664;1143770046;580213181;-1038250764;1960430807;-1973004589;-359851557;-513291617;-744199180;-1519990820;1637132544;421476048;-581570436;2014632328;1197679739;-1342656879;1284410223;-1260592937;-1857441413;-1470380496;212071470;-811731813;1096734830;1262996290;-235991833;-344843667;355159008;416272347;322319587;-857384692;1452157545;1134584711;-1003226530;1309183026;-1244947551;-1257004334;647007380;-632378647;-1629050664;-1219278711;-2055536033;-900287430;875994119;188501582;-1059806382;-2105423742;1828756238;-442420102;1493005645;81326989;684297267;1290836914;-467322573;-1097187195;1997845721;567996879;2003971651;1453036195;-951612284;-1256214306;287998824;-34570075;1900386332;1403488528;-1796592299;67662580;830861030;-956672159;892726350;937294187;-889541923;-1905772483;317778051;84858712;-209645982;1933809136;1786716609;-109571731;-1883980012;-299095459;1789593030;-1207843020;-959873280;-7555102;336786809;-752379278;1700620363;212844521;-1704367963;-1524061796;925006352;1247590667;1021402030;-2000991645;559497731;-23091474;1909240129;1230843649;418024386;60945997;1406165541;1958214905;230655646;1106029341;666205908;-1287225747;-1115534955;887740510;-1751208990;-290148307;416555252;671061267;-1507722161;495501362;791451276;-1493413361;-1546627851;-1519733432;-1960566520;1513448393;1139697344;-1655516162;-2130477242;-262628689;141497016;-404825227;-2036810644;1713059397;77778356;-2076410651;1761994501;-1726920329;39098637;-593274874;-89167905;1825355443;-1855498462;-1924824951;369302209;2144458768;-824026975;-2060866857;1571775479;1449858813;1483796060;346607778;-1968241956;463925385;-1621805055;1135457572;964445583;1781135714;-289775609;1023805069;-155382885;-185472013;-834304340;424332040;-295607514;2088627096;2113000797;-1055167923;-1411993656;-1236503115;1126850871;-1640480429;2086477563;925303721;150528949;1375777906;771603817;1767369848;546049481;-148831654;-961114325;-491068457;578049972;818016021;1795723611;-1046445163;735654210;-1193623009;-1963254905;326044048;433903336;595260065;1505813407;-2076484495;-83229317;774463861;1638797639;-1311422531;-691829125;-1419622791;114991785;1944952528;1786020505;201514781;-1672246121;390411504;-365800488;62409104;-637331718;1465012840;242464153;587499402;706237600;1900217423;-1830784522;489982581;-922337701;2067509739;640248966;-1189771245;1875298539;-1319600247;1962456591;569332415;1307368853;1286303;17594103;-1974067280;-1597062024;-267464863;-1501477654;-1590142775;-733172647;2029136581;734643352;-1057494723;1448293564;-1019743016;219795119;1972581204;1826537171;-138564571;-67157430;-1574094566;-552771642;-487966968;53058471;961005876;1953183446;-2105101530;-1426132344;-1071150137;2076314026;308761806;-926370658;-870168502;-1472948441;1067806708;-1529167712;-1210928313;1257482391;-613168499;-34150042;1393828666;1751743145;-556184149;904039596;-396522175;1917783664;2030185724;-556128711;773595211;-999431679;1398488629;1521836016;629003394;-924030280;-1719586762;-198190604;474427108;-1201044122;264250855;-2006412137;-1260823234;-1991580126;177466391;2119529867;40123115;1434452785;-1819937941;-688178455;-1744078385;-246365089;-1669941813;110971597;1353791842;56008849;1024586680;-41246436;-1278989888;-485798640;-1086745338;93515804;909883541;1131057491;839792869;-2041446171;1529281456;1625950051;100031801;-895137267;1446622999;827982656;-1157592621;28195337;1225439266;1522164325;1793873675;1125692042;907531632;783296202;-137926323;1110002530;123189932;-2093567110;-1830287369;-1249885623;-1289663432;193207940;-988762185;1804117928;1883412562;470779237;-1572491392;-185019918;941346494;-741457760;2037103866;-1635720269;1753911170;-1777550499;920962346;837502274;1454417595;-1006546156;60692678;1040956882;-1946859633;-336940713;-171316261;-1698126352;328596531;1737018585;-931108109;7643756;-1713118631;1065878181;-2003412520;-966975806;1534684390;-2139056155;525831910;693008514;1845567247;-1049509812;-940300302;1347075293;-1500364651;1952795741;140008983;-606572577;1866784665;-17002298;-729707384;-1491085401;2071618282;245746569;-569073696;-890728093;-47334219;1308810148;-332466448;-1789625673;-688764862;-603435905;-1483175225;-1462423915;-1406455184;-2077758760;-463186975;1873218570;1789306168;-759582113;876256303;301844335;820189104;-1223325098;-86865653;-1080206832;-590992125;1665450730;1860021154;-742132677;-1215736827;660006833;152970180;1684275780;1284428842;-1794000407;-2048254294;-698482116;-2046583856;-1467097648;342616017;1347965037;-1193965419;-1569147763;-165100186;-243535915;1880696683;2078951632;1847432564;-1193634263;667370488;-792360230;1831660192;1924119689;-755881043;1823300524;607109704;-2050477968;1426465027;-1843193388;1837545849;28337764;236972929;-2077821709;1527422500;-1999293527;-1569659000;255473028;1328988967;-317434350;-242479158;2066992483;1242004417;-1737648936;-774216165;-1770708590;-1239658517;2068724233;2032348997;-1710683150;814032847;-780173877;-1307268599;-1686897799;716442794;1148582710;947752408;2069467230;-1624125790;-1667619000;-1830937509;557568583;-736954578;-1879204883;-1626706312;-778902960;2119612398;472808059;993994680;-499898934;-79004800;-1525622813;-162294022;395629427;1057290646;-1583234970;-947753555;-353802784;584101834;1894676206;1078187400;1254658635;259085169;-1317771563;-774462444;-668987819;413904945;442351257;1412109730;-1626814827;-1830933798;578584960;-957572663;-2043950852;80231553;518515249;1630183586;1312660893;-152326949;1684196232;-693788578;-256570365;786021971;990348307;-265664300;327863849;-315209340;-1703591013;379555510;-11749848;-437394350;1883336529;429047021;-998612769;2015491371;-37800462;-1780137098;-1665617114;-1028066409;-430026808;779493500;-1084149934;-1898349321;-2040501231;-1771712280;1096722620;-875513348;-958670073;-905015551;1129611320;1451497964;	};
	mti=624;
	is_gauss_double_cached=0;
	cached_gauss_double=0;
       };
       RndSeed @[19] {
	name="RndSeed_20";
	seed{ 485936078;-82729401;-1144193834;620311463;-796475417;-787040007;768263336;-724206001;-1125810172;1614329959;1675187784;-605348904;-1129893773;-436628062;1341272467;437432489;1787372477;-1235307203;722811117;-447657324;-1205977945;384121390;-1277914564;-590159731;88118814;1705199599;-630472960;1389360970;1584444339;-1803606185;-1853226585;-304680136;1754630503;324062047;2135888797;-453691217;-1396217856;-1855776017;503149735;486368522;105985818;1849534315;-925841668;-103417402;75036645;-475637114;1823859623;2082514605;-1865953780;-1770272329;2109436315;-34259979;-628011454;-1912887078;1871525230;-564691966;1508341149;1569055429;1871272846;1478076070;2128551711;-142584557;1721180046;-1972634966;542493832;-1543079447;-1489380103;-537689526;130709521;-510035974;1989121667;-1816136815;-1323711417;588668034;786567572;1705321391;-603901454;2043260258;2081448797;1059549083;1988492151;514350047;-928016819;685247257;-1797537231;688253300;-1418711270;371092687;1340388611;-1255703517;-353852833;1831815847;1965378010;-1791404348;1987654268;-1220489040;-920676198;-95414850;-244991757;-72718573;215103924;331225193;2079249107;264867649;1861635597;-918210779;-52684696;1523836322;1190319291;985364431;431819801;868099916;1344351596;-1738456718;880001442;1203312477;-854953024;-345503900;869403417;-1283603884;-1242058138;1777133037;1794507414;-1600989938;-783975880;-93336380;807619073;1385020388;716943065;-1601364706;2013558926;1580275694;-357148465;-1391839999;1920632245;1406145675;870053114;1454862635;840245276;-1052203113;677663216;486392893;1473122719;252477925;-894055191;-1765207325;-2003444649;-128160996;1940052687;-1443196453;-1328042957;-1852561172;1071481982;-2051099569;1020614651;2015234466;2121730283;-1893613841;-1141364449;1387511312;806884949;1439124778;-1072007783;580243557;543442301;321540086;741749428;-982493781;985707504;2044882521;1741332834;-1861965894;-358636476;1909903280;951888515;1195663710;1940865579;-172780221;528032498;1260145709;1814141456;120316522;962662024;1506378847;-1964406834;-1906130891;2069120365;928657495;550806031;-2130249816;535802064;1960841935;1914284550;1515115652;-1132984773;-834800064;-2028927949;776724762;-14894584;-1070446050;4965177;200050502;-2086677144;86699421;-1100757827;1994381096;-560737029;1611906727;-1218769330;-2052632371;-823481987;29052297;-702355231;-527117313;1544388418;1229132102;950391003;808294976;-1588978662;804122195;-978423141;-1689350443;-330274127;1202805529;-798963368;-412212024;-441309191;-2038132603;-346667737;403016729;-757553213;-1216352345;104585729;-548500402;1965920331;-952661987;-1315781950;-329279827;-266628716;720060546;1877214778;1005127992;963091466;-1800934683;1665551639;764883107;-31298491;762326677;407051969;-1053332450;344206699;912338738;-654876234;81160806;-1739419332;1761574005;2106732228;689365434;417962340;956041591;-759075849;-1933497271;-1023959651;1717354077;150624084;1456236845;320998246;475141705;-2108760871;189486708;321466578;-2011257367;-934331961;-1316507803;-415804491;-426086943;-118928066;-418635994;443946927;487391266;-1004453758;1546288382;413190325;-1681191548;134417658;-1644435009;1151622575;45946053;-233201703;-1851933661;-305143001;2039407191;-455519470;145285082;-513672152;1690861854;-1408399005;-847045266;158659115;334073634;447523734;-418580133;183924966;-1875195411;-1228172421;613150958;1302818072;-1004573424;826946739;492803796;1312421594;100047006;642303374;1532031039;288487344;-1944852053;-1685741079;1892460020;-348088345;-1191120333;-900544619;-594410129;-529076002;132009332;542352392;1610612845;1932392418;-1778366250;-1025363732;435566228;-278610514;-2013566068;195194450;542992807;435556145;42743972;-937550332;-668690156;-1073826203;2146178806;-1523564601;-661874930;1235783287;-252224539;-49325802;1498244002;592415657;-1648456696;1097112398;922193544;1890190598;-2030715870;1702910464;-1646981946;1379856054;-610984298;558223149;581227302;-1374640796;585029797;-1939945599;-759246056;1845476881;890015163;1776942899;356610599;-67507759;611885897;905543229;-5737342;-1621753513;-923269892;-1149275889;-1071476586;487967039;923016786;1427626450;1321196728;-740288649;404903487;-714293417;295137697;66453251;1922775214;-1453587061;50561422;-2087117688;-613147147;1385331090;1306436484;1929097727;360720573;-360171239;-167546165;1799443058;185209834;50861790;-830483165;895301422;-628071243;165094238;-1553972313;1857093291;314799269;-854830163;812065595;623409885;-356270136;1131106223;-1665364161;1706502571;37055405;1668157917;1862257001;260775846;2069713949;-1164366676;941211719;536861861;831085500;-546517296;207717860;-329459558;1757042436;-2026306655;-1176130568;1820042572;-111579636;-1835567977;-281559690;-1080795689;1754465208;353204909;-609026830;227657159;-1177843658;-493055432;363087356;-1389921758;1204703319;935180710;-1581377993;-2125192797;-476614848;605995563;691576756;-558213182;1791093220;-437266919;-471243773;-1919388222;-1402325373;-963015767;267916759;1567731353;-1703855169;-439371687;-686692533;567134514;255468677;991860549;-253190906;-286219833;668842019;788095647;-997981812;-1949096387;-914436178;98993685;944186654;-222251860;-1417547294;1372933944;-1491286954;565603070;19670545;1296113553;-242907731;-839262844;-36526302;1567857381;683418069;-1993910293;-571448880;-453671645;-587487355;-124137532;122780266;-1903294534;372409729;-572016945;-1663939481;480064197;-376211802;-332456441;-406651517;-1206418064;-170939925;-1573703046;1702699851;826771494;2048855795;1306421616;1296307340;-155807079;78791355;-148412223;1323968645;1034723856;-431586739;229583044;-263718061;-250349424;-1662206208;-1397919796;-404464567;1887569206;1352105912;1764648707;-42158127;1599203810;-1699691624;-241133620;-1069371978;-1523095691;-579108096;1407995197;-30173509;-1526009688;1153560355;-882209668;-1313708242;-154320272;-1934637964;-1196053852;-896980075;-913606074;-1671877550;1578454442;-928700014;-614530735;91122039;1363234065;-596575889;-805227076;-1032426116;-1412748227;1267674622;1158913727;1071862043;1993569485;1283605155;259718674;2012995907;582628148;-1354167889;2109302893;1039925449;576119419;551038902;-1127400706;1047339933;1047073827;741388034;501948414;-1445687445;-109394013;396715095;1230251915;1143109035;1110861900;-1822204516;-1969258606;1226925581;-1809993478;-902591465;-1596392924;1921190207;-1235823176;-1195843931;1520974119;1660806211;52453968;9673687;797150491;1697063152;1806170719;-556525727;1709092342;1370805184;938530419;1441605806;-1038109093;-1417671927;549077161;-1498089984;790242078;804055851;1149226317;408792403;2147208983;835025927;-1434800099;-813623914;1703756581;-1348090991;1595201117;1450430635;-2097000590;1484540305;794236978;179130397;1661674197;1825846281;1271452046;1833514706;-805400921;1614810397;1812802166;170685022;-1789956222;2005041133;207996554;19738849;	};
	mti=624;
	is_gauss_double_cached=0;
	cached_gauss_double=0;
       };
       RndSeed @[20] {
	name="RndSeed_21";
	seed{ 485936079;1729703852;1898865731;281206797;-2094769627;480735336;-602996466;1557552936;1067416629;886529522;-1008954748;1176571470;333179959;816750784;237775822;1434486357;-1612451020;-2137990561;1921838019;-435038819;-810756758;-1891343486;-675626602;895098080;-1876867976;35343931;2034266209;-449858053;-1912831244;-2089856725;-243730869;477999751;1473424995;-2111881525;-1838393745;402222628;609597528;1608569565;-1198592782;130018007;-481970693;-1834319103;-159954087;467264685;-720188051;643623571;1245067053;1562267787;1641390242;347380608;318298546;-1265883795;358362111;-1998466352;917016336;1853882759;-1409593322;-124957667;1783436816;-139473424;-214414309;1251401141;706137154;1008461897;-867125747;-1347989049;807972859;2048377162;-824351269;29476477;-1911081833;-966886384;1009917639;1571791820;-342928085;-667483885;-2068513892;-1084173405;131835859;1094590862;1013040315;1777840408;-1070710737;-473244241;257851696;1807460421;938592042;-1608577559;1344291087;-1897125665;521495691;436997682;901274646;-1482810613;1192721387;-1191567951;678920959;356132348;-668411698;-1916912060;-146012158;-447827510;1034925491;-629900538;-18008479;1516168979;1519897732;-1376133660;1956553258;2055994980;-719164601;551007811;-1518746657;166103970;1914489180;715732772;356582824;910566333;-1460191481;-815232400;326838999;2036725324;-1373347365;1705425944;102799193;-1958127718;-1191712906;-388537021;-420859200;384131696;-1153579342;-1652321293;1185699737;-1576605827;-2028647263;-1914734634;1192672044;1348333130;564274977;164698512;958211676;-24420647;-1833625968;8653353;1889989565;-999176771;-202919288;-1094527894;895579548;1051190049;-1297070693;1207523060;-1852085183;-652832248;1549566449;-1080511413;163132009;-1628826358;-355232570;226107224;-1487112616;-1220092893;732529319;-144905338;-564782819;591067003;487683885;249961064;-1648225360;-1141241885;453215599;81071222;183701818;1454626447;950510772;-2110500941;924854917;1008006186;1343541060;-2113621012;598170522;440569463;331408553;-1843943324;-281147658;568646754;938042724;-334265041;-903080168;1635750244;1374055063;-787721235;-968262746;-1951656486;-344115462;2007036416;1577649193;-371192691;1811870412;723550376;-851137776;1831447112;-779075433;344239919;-1201519273;389208150;-1892720452;-1515660859;-1600492717;462532806;897496304;476173187;-1721856381;1847083706;577071005;-406853944;348500463;-1346299100;1958808792;1173959544;1814827161;-697572139;-538849460;724636170;55146706;-2090660421;1148939231;-1401070215;-1764117141;1205388370;-1143283547;-668663350;-317897163;1414109751;-1542799816;597694413;-578741811;392195379;1407213837;-490096981;1257044280;1030542702;-1205202088;-1402286731;5816295;1426544152;1604803027;1490408145;-35816184;-1080411824;1237549140;404889476;1425019920;-1242823502;1970276974;1741850058;-332042985;872398309;768112987;243700970;-1959789738;-424010455;623836312;-656473857;1046888564;167871181;-785166101;367203475;-1130444277;-1224505446;-316876794;2025480;1318442040;155073678;-2083003624;-1167358891;1755235943;-1281696429;-171922677;499303231;-485703693;-431019319;-1633157940;1345518689;1405940476;516965358;-536400892;1637162722;-376329297;1561053181;-879770738;339320004;-923025800;496958124;781382402;-2129399055;-1031281145;1943135421;-1772364970;-370574001;-1170203608;1199806399;-246313692;700944530;-736613174;-1560265346;1852022558;1263427438;386338559;-641178928;-524883595;-1252769083;1768675515;-1281487717;1447549591;-1066564503;-570951410;-1837615010;2048620938;-676374506;853802633;-655770034;1529498275;-66181843;1874610794;101294204;1007857202;-1913291519;282455671;-632961732;1825475109;1818609023;-917939710;-1927148366;-2146880834;585867643;784239063;-506367452;-1060509259;1236638753;169064948;-1913130343;-1176196227;-76045966;1370434541;-1139695243;1084122189;272514903;668306863;-1277391256;-1692341456;1480101401;352512216;1453946521;1065034586;-520741403;1348723490;636180788;1224935146;-1051558114;559787225;-1855695866;161958654;-1961589343;1175582139;1907129807;-2130517580;1692890173;707328284;792610173;-1725148989;-956684648;-778621029;105259117;-536862345;1277184059;-1057387942;32257942;-116705880;-590237454;-654128751;922135063;184052625;1653213876;1730418665;-1990158327;-1329143591;-1228346646;-279783668;-164699792;-448102683;-728291259;1713003302;1430181612;524984843;1534513890;888254491;1867902772;-799162761;-2062272173;282982277;1370215946;-1398515991;-1815670966;-1615949572;-1972821045;-1507807005;-877317284;-762045165;-479393559;170901484;1644168631;-1660245910;606870181;908841399;-1031426606;897150485;-211505942;-308286833;-831490337;-1308712336;126032543;-296642207;989132625;1245113757;-65520587;-616388360;-1332215886;1100812828;-1401639906;-18422598;1854816172;2012067313;-1061799583;1984436060;511508068;271573800;428673149;-2053488633;507572400;-2059589848;356249419;-1564373679;-1404883334;-811102444;911197392;1065088974;304612357;-871152455;746039587;-122783855;1473269853;582283792;-446819819;-1671107980;-427579307;1231122870;1766706684;-1931891813;1273271848;-1398132487;1849206740;1090401751;1878312253;-574427524;-385675028;-590440675;1983033001;1745801756;-149590970;71804431;-427062078;-391589123;276246031;-585878331;44091897;-1487605223;2094070148;43884631;2036323122;1966710783;-1639117033;-150195669;1035940779;1019406171;-30278708;1076044177;-977121353;540854252;1181494789;-1620423298;919334871;78688447;-779815864;574457477;954614120;1437628408;-1834837970;-1765173426;-1835770129;-808367499;-811235197;1037786230;457220741;-451129999;-1078291981;642551567;1378646502;35240223;-1139760584;16190688;1903949407;-2125298922;859794661;-1081113253;-1821688032;-1610146706;1207436449;-1078758106;259620155;1871707471;-411062321;-1995929210;345106207;-1743206329;-623447482;441943111;-868077294;-2049542459;-962699884;1605483941;1058576327;677274263;-702499160;525768333;1301667000;-464644075;-833795897;1841994606;-769213466;1662562421;307737569;50619107;31162542;540599494;-230016449;941037518;192652393;2107838609;153262837;-1203289649;518958344;167480912;865597369;-2137669849;-1268631356;-796107190;-975878662;627433067;2116355430;777011923;288508528;-71479198;-1067736712;1005488827;-59256580;85388753;-200823124;-28535741;1565310841;-1106852718;-1211326709;706056649;-301590646;-1682006965;-2049590260;995668422;1166744415;1226382424;-1719479712;-1411287826;972648289;1403706507;-1305157959;-1792346865;108111210;-1706950884;-815614175;-2001738;677046966;-965475812;-2084540534;1666435832;-1602398322;-635340658;-1064106252;226291911;-1198096424;-725476008;63457854;-579700018;2038245946;-174571871;1828940357;1846760240;-1216606798;1729403086;848302858;-900866222;-999131562;-623956245;1546628075;1295323062;2102994072;-1259318333;-1242933620;1940399726;2129761076;-1081511085;1931991648;-1489103951;1106088716;-1480066161;-1805666800;	};
	mti=624;
	is_gauss_double_cached=0;
	cached_gauss_double=0;
       };
       RndSeed @[21] {
	name="RndSeed_22";
	seed{ 485936080;-752830191;1987159580;1401359988;-63418067;1173071147;-310271080;-235897042;-1641266743;-2026334176;598488948;-1328876337;-1968223763;1598165592;-44966357;-1270346281;-324570599;282455635;-1456049711;103404370;802505070;824749691;-741758563;-978880147;1427162750;-1957607628;816250472;1692403491;975307398;-1133595397;-1789548709;-523720900;929280763;-33886168;867484697;200392448;1318542116;461423294;1026982684;-1200638413;870980221;955537530;521548364;-1799322585;-273748027;1153404747;-968351136;-1986950082;1344040924;505440098;1707752412;1105060708;-1895906291;1910006048;1245707067;-549050343;-1294353286;-586443887;143153876;1110657503;1037431506;538521367;566485841;-1977219020;-589290610;-1940947998;-943276126;1465762760;-867971183;634652383;-1469248191;1878267574;-1636440709;-291485178;251453763;-1423525190;-79944988;-1246206864;916366152;1223685047;-1575908066;20228189;2120954371;1947979037;461367392;661786165;1494022207;78192333;-1412441031;-277186912;121833897;1295859976;-734561815;2005357487;1173234180;290134360;-728164328;-620104184;501675449;699265888;-1333828284;476015363;1929302933;-154161717;-1536714672;262208195;1879722585;-566203101;-1515114996;1525590515;1455001320;-1190194340;1138881158;1218440884;550177499;1223130074;1805193435;-883011465;-663760326;120418804;882215356;-640093275;-1098516744;349977373;-263137299;1660260195;-1203043288;-1342628079;-1670418945;398314066;258258140;-1182197937;-1347852571;976763048;2065187534;-1275321550;664703608;523895265;1443571535;-443465647;-1476902170;620390529;-532724621;1940254911;729786758;-1514104721;-1651935085;817441480;-596973188;597431984;1938367494;-376179110;-1633365323;-1026813492;-525087163;205379641;-492056551;148702431;-51952743;1537283681;2015835264;1041744006;17869696;131803683;1308187507;-848357729;-298751950;-275294980;1781137475;914582707;1407888969;-690795757;-1577570820;561583075;1335776317;-1037084581;2103243624;667826718;1346960520;1873802176;1344566489;1926345197;-228163886;537190956;-30750700;1486241996;-1651489125;-639452136;-707024285;376936605;1176910767;751282789;-910604391;-1432311165;1646874279;65855041;-819234455;168206743;-1606905767;-770791506;1228848393;69328113;1999643871;1942706785;2067269804;-763690482;1761330415;-231075659;-522977634;1496349122;-1180801599;206078402;173671518;141297643;2118706061;492548883;-1853369769;-1233618590;1209811898;1367526562;-2070742997;166255114;-1277992752;1324586425;960596600;322820665;-1262577057;-1000756076;-522262665;1174037929;1137247278;1121242738;1771437895;1890856327;-1440961336;1733183133;1676630136;-82466390;-1762238053;-1600232628;-1060901706;-1142144678;2090197162;-1526061206;2146448636;889933254;-1568758252;-1250734683;-560135461;241154097;-1699945137;1309125980;-564581459;189815459;-1247150515;-313352918;1876030253;-1356104355;-472297859;2100258489;817102748;1477596561;-1510616362;1000055467;1696706943;-256281153;-1051652042;1947910900;-778630987;-1992698149;-2084903509;-1857876548;-1174332666;1728105893;-522590522;-1109755444;251874650;-970412137;823097978;1962712377;1146421296;536497518;389180288;317450907;-2049080509;1583977154;109462285;-1103795648;1623080746;-653660136;-416862519;-1442475819;-1198115593;72155854;-461088148;1235621362;233485575;-5559316;-2137768587;-241045474;-886160995;1571779203;-737296264;751551670;-509345026;-1673948158;2129356082;1416378706;-828044813;1593728229;1414310698;470191150;-858002082;1045851114;-2093035892;-231506623;1629929030;940446272;621900926;1319920885;-21599868;-215883132;877240197;-2146624068;-2109117638;1071662685;1638828279;2011279445;1437828716;-1950392502;-2022301518;-840362309;958820324;1564944961;175107214;1671582549;-454109836;750250052;431425574;1503432273;-954403100;1121978744;-1782284525;-469943284;1886763587;1324207971;1803306244;-400955052;-2055626833;422221214;1999673012;-2117774392;1329015314;-255015456;-1008365839;598665437;1219175829;-1179776823;1173036157;2137299539;-377174590;58544014;-2065341840;-112403867;2096939434;50982116;753695586;-16637671;-1622934862;1372199137;-1708412462;-770344829;-1418392588;1682857859;-124370496;-1932636570;1242854124;1275932154;883652737;1118475616;-1729832511;52971116;1233622554;277851430;811771774;-1627356105;-77101205;723981707;733996123;-1771647892;1492616940;1029181960;865953456;-1478642439;-1221608559;-163861110;-1607939687;-348619084;-1273303359;1136365438;-1723624021;106987070;-1017971192;268377834;1738042854;-414909256;-158021027;429008557;1477892313;150415057;150940431;-1675623034;-1842228560;843539415;2038002801;1531634127;738481638;284687199;1526007069;-164953681;-1097812352;1985058031;-781901428;-87767534;-736608419;185356223;-1262375163;-1270493586;-1342816696;528625375;1972033193;1799264759;-841914946;-952481214;1065555543;-2045943546;1666083912;-404567166;-672574309;2105260463;871391582;1938012623;235507200;-2000484421;-1776087367;1238623364;-511224009;-1166262973;680719717;-116334694;-192931297;-1958262065;-1581041243;1399922600;-1624117133;-948480164;124801347;-2019431368;400768684;1340458919;-83256246;1097644954;-2054620939;-16291262;-376392075;1559700575;-1769363224;1713037349;-74861560;2130373932;-634934889;1584536891;-1723886662;640336241;-428159889;-859016073;1445463968;-1958269598;-939702082;738580848;-1313096944;1269527035;813220740;-924661513;229629480;2002653101;1815297218;152065494;-230988458;-67339918;-2052037505;-1614181316;-465337246;-1155390158;1588551134;-645570070;744772573;-1149149918;1086316434;1532879346;-73780781;-449971963;1553037140;2106823552;-105890595;623694735;-993001371;17875001;-1341564551;-890232188;2028527681;1973599039;-971370634;-490686422;-306865361;-958085537;585990224;596537749;957255375;-1999363918;-1510008968;495619883;-596279039;997456341;910659605;-2098587818;2304562;517106121;1948208989;-1923707555;107388813;1253730740;2115015549;-203715071;1856772832;1819280860;543201097;1712374502;87787069;1392352556;-1083762211;2040434200;1145598715;1391667393;-134359584;1271979952;2062875639;1228410929;-1793583852;-1855776301;1168181915;-378823959;-1581163910;1677388673;713452458;1615623741;1964295128;888104906;260378336;1016381583;430277019;-1612376232;1247240884;658493596;655674304;511583477;-398543905;-368987133;671090232;-1763807663;-1760496647;1008637762;298975558;-76351269;-1452292234;251840259;497951087;-1549755892;-1624225848;-755142923;-1357353134;-211436331;-351532876;-1653972614;1399434912;697110734;1078452624;722049408;1349456332;619953454;-1733737612;1880868317;1356582428;1724963010;-2051349951;967188930;1793730014;-1715582384;504837808;171754951;-331183909;-1352427631;-1485997479;1630075714;1719074507;1255318031;-1808437276;692141597;533072081;-309307946;749984875;249052058;745205798;1505695587;-1483362800;-1833741951;1442006551;1276538647;1474731032;-399247032;-503873533;438665837;-258749329;698971403;	};
	mti=624;
	is_gauss_double_cached=0;
	cached_gauss_double=0;
       };
       RndSeed @[22] {
	name="RndSeed_23";
	seed{ 485936081;1059603062;263020176;1290886867;-1229534498;1152500945;1579546134;-464689638;-723801883;777435335;-1299552883;-1680041866;-1496696368;863515111;1920028465;879029759;-987210581;-887458215;2134694804;-1583849764;-1946928214;1826648413;-88410782;-1699039140;-1427698898;-262802315;1224120488;966503368;466669060;163408817;-734775821;1661384655;-1733967258;1864971669;-805677178;-2025999204;-112013190;1854669026;1407898805;-2006565077;-1908220843;-1565753988;329773280;-1219893109;89722681;1003979434;999917376;1605606511;-1886022250;974927765;1744022267;-1904722219;-84747769;-1634195511;-1176480179;333141090;-597771038;-1164186114;-473644890;138104404;-1868768416;1459093479;252972028;1362532011;399534930;1978087835;-851237884;-638192122;1960164669;-147012367;-1963117120;-1476851759;-986381945;-430621347;-754285472;1186215514;917316915;-1013122964;-857052391;830679953;403163525;1150136010;1241356649;-100782501;209543436;-1111837167;-996212523;-133702971;-1835579786;-1483808739;-970456171;-120672119;-775192370;-1361934786;-1635184118;-990747257;-493768332;1773450068;731266539;1859531034;377869067;-368433476;1744208065;1952943143;870621542;1163740071;680101608;667705843;1169338443;702359455;130922793;-2006974820;-881589562;-1985772246;1407054138;1497743290;-1371752389;1377447922;1000535637;1433513216;-1300903203;304308596;-1320646850;-996116697;-452115024;-462533860;1200634553;-1503943913;-33516343;-815739341;-2099705486;1203612083;-1987955266;-1220227151;1395768613;-858528837;243159072;26656041;-1009610057;-444451441;-1042608952;-1294880860;-1723587828;-872000747;1854901822;-377760148;346423645;1103384388;1203909581;-1209361391;1704640277;-1881467013;-1320221611;266356204;-1034231114;-534687996;1570762079;-1414400845;1442792307;2028707481;1123871384;-1115459586;2074938126;127493262;-1103713622;-679658259;478570636;449719267;-536294345;-1641257683;-1041034443;-391611655;-920760498;947945230;1880268596;-453038696;-1957563945;1251108538;2010749817;-1655337205;-1853079487;-2138163676;1444918196;933282848;-666730152;-688669536;714188809;581115208;570299940;773062897;-1795401517;1825432628;-1244764503;571278648;729155546;2126169029;-53534440;-500399252;2045723281;-1208724585;2033366929;-1171358567;558046449;-2138151712;106479606;125330139;2002990133;-1904251565;-1828881723;-198774700;1885102629;-1544291065;1221427405;1217723729;193446246;-2066160619;1816349931;-1927507157;1227227399;-1045127623;-528123970;65495918;2122455364;1438443032;-1051121219;1270228695;-1317021360;-67395523;-1665570982;14409373;1395382743;-2068154283;643369531;-214459088;-2005511927;56220994;1319804406;-577076640;1920036093;620158043;466527191;-1122651196;-1456544752;-1408524787;-1097571361;-1861768154;941764394;1927288457;1009757344;2056305689;342560370;-703220235;-693407478;1415604874;1893428437;1570464931;798451434;1429525843;1363086428;1577625268;-1517051027;-1581325616;-1016078368;-584527722;-1462957871;-1805490360;1059019580;2111183799;-1001957926;-2113601366;-571790506;1934333592;-1701229459;-211054628;-1668867315;540128510;1751799626;565744812;-1240025870;811193287;-466154085;-14240239;-197953484;1629806030;1927826119;957577019;370777701;1587710968;853048157;-2064092718;1201485874;1904179266;-1938076013;-1146578598;-1795385122;-210105357;-216389928;1545177232;-400589985;-1661736841;718558293;-1321614410;527534898;296201705;-1063760099;1346389511;-2130782320;-1025101875;1258822522;-1790661700;2117234988;-592265992;-930880705;927450085;778622867;1405073722;-1721653117;-834960094;-945737661;1462389375;922669814;-1641487793;-212369757;-894921117;-912476892;-808036184;1169260477;1250361971;-793707966;1334216174;-615989355;-145433223;-2057851794;-841952279;2016532128;-504571948;2094282787;-1296934725;1793524559;-854913767;588584598;109195395;-722976763;-1844545099;-421923445;-820271103;-220177372;-588891202;-1158105107;-1172801112;-1872102544;-1451346087;1374194503;439446015;1093749245;1861094863;1911599530;-1028154148;1937587297;-1135070393;85928097;-1167052306;-2039545978;488928383;-986517881;1146666881;-1308684562;-1324273525;780171389;546664386;-1173230852;-1798986327;592437483;-129072852;1449402369;-1969184393;1845121441;349230489;1541547991;-1503314199;-1324705997;1382932690;2087690173;-2102811989;328769325;-1096752318;-2049513022;891419203;1093310707;-934946049;-1297857806;1999690295;-360251690;-1720350574;-312216998;1368342440;-533426119;-8261009;-1980468694;1033925463;157815267;-1462334688;-1828186116;653944521;-45408287;1507952575;97598860;72431059;-1499649833;-793896286;660057119;965509334;-1287955446;1591974085;434645746;-1137543911;-665802681;-876951435;-1724760528;528043357;-1362277291;-1623544072;2057360456;219009908;1154056812;-2025337942;1021854450;1075047717;-1648306976;-1724976937;3801783;1767375586;-2122735553;1231544002;-410632287;1165151901;1294008640;-1938273958;-333641362;-277147976;-1584667521;-1797059574;-214169374;1100409728;-2129005407;1201520908;1894260959;1396557653;-900228636;1597855972;1913233691;-2068219131;-248165753;1753418713;-806205954;1475675032;2009484837;-1274406403;-1176585627;326216558;-1734835662;-1591275843;1988495913;-1519817833;2050830489;1833797065;-1532636742;246364011;934683147;90198828;-2118689230;571464391;-607727269;-186601071;1319842420;1690208004;-2104495147;-349551440;-883562627;-1372011371;834363507;212834880;848567586;1542763085;722011616;2010395461;-318529606;-587790620;74996235;1173908288;-416343153;1009241127;285568079;-398261224;6296469;-176850760;-435046729;783248117;-1809493605;848499792;-132786812;1519615800;836088947;2047262294;-1461278389;-2137531194;-1167392946;-638949641;725562432;1353047869;9187498;1241526033;1420960592;-496678410;-398635861;1724721227;-1417248458;530698121;-1952041965;-1561942596;1675891710;-1750573916;2139841928;2115265048;-516352279;-1053866401;1087504474;1535629558;-227161469;995583633;693506631;-760334570;-1211565475;-52387696;1653802773;878149883;-446089185;709763365;76735155;539639226;1942546046;320203064;1107033398;57563090;1715866106;-19512024;1035620121;-997943296;-373385645;315760565;433152399;1002047122;-471417918;-221684146;-1660654709;218742840;1044303940;-1910992639;1885393757;-1093426821;20412397;1837836210;1242199761;-815386045;-470411916;1809066280;-2133184413;-660602500;-1234792365;-135705810;-1300185093;-1621688200;-404063138;-1633953810;1904049754;-945909978;573327577;-1201413922;683767054;-1218859319;-1065772197;1669620733;681660594;-1464722815;-603352329;-468217715;1971980368;-1541430464;-39338666;-523030058;-237983657;464740211;201209263;298768220;1801401758;-610582258;-43277963;-954672157;1570349494;-987185526;-1731625115;209609980;-1530087994;979737775;-2017887641;-1016047306;126062919;1285050978;-1058767249;1723969277;1240655822;-712229362;2078569093;-200944519;-1403510648;1140110041;-953669216;-124409160;-1165528783;-1352075638;2114981396;-1838035530;1038581362;-602019991;	};
	mti=624;
	is_gauss_double_cached=0;
	cached_gauss_double=0;
       };
       RndSeed @[23] {
	name="RndSeed_24";
	seed{ 485936082;-1422930981;1021414815;-1390414146;2009789488;957845594;218242440;1918594735;2064631982;1349047316;2070800723;2105012069;1797912192;-436188686;-1757010653;678579988;-1158224140;-37960417;1421459486;703750990;-488117286;-1582944846;886257286;-450086667;1806180134;-1072617092;-1401727435;1378185934;-354413881;-942781583;1658963480;-859469572;-751270981;-841912391;-830366076;548063846;-629378974;-907853974;1266038163;390874305;1328113997;1438922533;-1981282978;-1997776521;1330767957;-353264303;-473828472;-207128314;737766441;359177566;1678730312;1086104064;1462072217;-1244990675;-813754175;1722980033;912407032;999200529;462467823;140607366;-2141190630;1405960117;-1795328446;-1475876993;-1771357807;1361207872;-2064872217;2130518940;-952561099;1807553939;-517823264;-1558345514;1454141420;-2056716854;582232114;1274322437;-500270112;1138252764;1284539263;1272205061;1646809316;527792042;1141387364;669263148;1763391152;853036330;-1530401816;730221993;1999312133;1431989997;-1434579082;372059423;1020355735;-2121105680;358193112;-1518108521;214202409;-1024435826;2006632963;1681573165;-219654464;-814901676;1276239801;1372503039;891099550;-494753345;1049006998;19759257;-520839735;830036767;142445225;-1621416420;1496193094;2015269748;623692443;-1856642406;-1622294932;295108571;578561245;1220530344;1526121509;2135860909;1877855830;-996149298;1901361501;214572489;-768781877;-920826777;1294772212;1278435626;1534220665;1481016539;719393926;1987235683;804602928;1251055479;1102637078;-288825188;-305220027;-167550935;921791262;1969508707;-1848668616;-174708879;1802998410;157693032;-1237953126;1852185995;987660806;1669890803;-7525360;-1748136170;1060579196;-649596795;1422105464;1806637144;1720401081;1098214709;-1758402014;-1166573761;-1159210831;1096108608;-550890169;-707278729;1133783656;1761996050;448443429;-15474624;-1414506985;1362506738;-69956983;449086237;-1954725859;-460069912;-1296126107;-789949614;1178613925;-769516187;-17092624;-647498094;1391386857;-1796021187;-1850555247;-1967179338;-1757472580;1163162031;250148960;-646619493;1360374452;-1663420634;1536558578;419718302;-1595522794;-348692059;598039872;467995395;626455539;1937787556;-535641889;-2036345965;-1707208195;605524324;64414014;-754774975;261171414;955884347;1836382741;260529843;-1392826257;-1095481134;1976044258;-1779120286;467995060;-948295463;688179416;1548146191;316797534;-1502941713;1593750619;-1351134627;1774278487;-597787701;1140645574;829252706;563023242;1651847763;-2006401732;860543065;-1061290751;2053694639;377837452;-1287031005;983804397;1509744746;466275873;238681328;-808633444;-2043044440;-775868672;-1334499298;963891196;-1528632483;18199661;-166099724;-1761958553;-718713138;-669856553;1490306203;2091613114;989586624;1410072762;2117950914;2042124779;-616582065;-1783443718;152461527;-376945453;-1320782063;-334813567;-40909747;1072181706;231129015;1040421689;1942067076;-2045119103;-952764232;730084817;-1867704960;593104726;-669576197;-963470874;-1653258904;2135956962;-1345370464;-1878945540;-970448055;-675379386;-479048626;2030588023;781247909;-846010319;714497747;-505981607;-1541941347;2032478679;468125835;-2054831371;-874701934;-1359775147;1592317044;918646859;-713657926;-1029316575;156344463;336191633;-2130037924;1846907710;-1794584572;-1141421688;-1179591011;339995879;1189418832;1628671267;-148119143;591490290;-21266773;760799610;387006549;-208740419;-749931221;547824126;1762875501;-907563052;677605388;1183162870;-131656018;1833535613;-2089732567;282354485;1599439400;981683309;1823374658;-223000655;-759067523;-1174545158;-416225507;1540111900;1939670968;-400224699;1462507751;-1274877432;850112829;1950454621;-851484519;-2132178928;645026409;-434915907;1916494663;410558960;-472820477;991136340;-66549639;868033400;971126703;1070964835;-1462615192;-1326558164;240506241;-643414463;-1644098713;-783971017;-1787983133;1269904677;1448492181;1316821958;-1582664218;1788053592;1184591234;1266831637;794407499;853179391;-192453628;-1641859283;-1833570826;-1345685840;189011879;-65620655;691825865;1619885501;-1874839395;-402886867;274300057;1261112017;-1133210235;-927646023;1562987225;104865968;-308603159;366560716;-576276745;-1688550464;266342151;-2002670015;1977654510;-735915317;2013409897;-961573750;-113851248;97729155;876294708;-1734040566;821362863;1188031891;1294589475;1146279668;-2039812812;-2053407270;2107195333;-17691166;1813242964;1667077145;1960068873;50024378;1357316085;2043187416;-476821454;-914770453;2025188895;654770542;-1752600577;571643243;-1657260078;1673287340;2120992990;555653273;686495484;-453972212;543578508;287392222;57723961;1515853089;-289900731;-1316649404;-1301057211;1008447915;-2001822432;48837140;-1067878513;421140456;1701746741;1300357682;-911177010;1418295697;-12908671;1440516604;1741019012;-771279315;-1676083237;-2118708397;-641205844;-1739773245;-107337506;1404790251;-740331251;705305154;-1915244601;1301006199;-1575102131;876283115;2002236792;134699903;794235358;1794890842;1757914284;-1432383737;-1180689472;-2058107054;-1561889703;-1257071439;857251690;1777115294;-458655864;-794653019;1023614797;353800241;40377894;-2042610480;-1717411155;178886623;843596752;494736102;499092629;-220121695;670817475;-589859383;-544172915;-1955816478;-463183555;-1537831596;1294125773;-1462423460;-1383045897;-558763125;541122187;712847803;52343724;586674370;-386412431;1399865570;-2009590152;-679597556;61972694;838925402;535149423;2063227833;-1578915449;1932333161;-513334535;-1942054764;1215593249;-910641772;439252360;-940431202;-762245912;831577519;-124575996;-1697186115;-1335903658;1489467680;40662274;175521224;2016307687;776331198;-327158281;1925685062;1810880518;-865272889;-1944634791;-1344161043;564242770;27439458;-406097997;-1613217158;1026323299;-671186149;557421189;146996615;-1320401070;2020734112;491171478;1852516672;1981944248;1593573649;493747557;46335983;-2118514078;-2037155336;-766776389;-1423869518;35927179;1278484467;-314106217;-226998654;1622531076;-1700692711;1030148296;1422092554;-2019797382;675043196;-553393647;-687745728;-407961450;-278005263;1053040803;1632443769;377084547;1368937179;-245015505;-1870337142;-147540265;762288084;1007901909;1982111547;138337813;-734405251;-389098773;751787966;1849652781;1081814420;1997585154;1321428329;1244900419;2069908038;816729920;-1477540226;-461935317;-392135928;-1435078504;-1355622140;-866265183;383371054;1774531947;1917439768;-861792220;-1745786709;1272954358;296756157;-204914468;-1137249977;1571692422;-180178543;-413846807;-113093982;63554774;583741632;-863961581;1766510244;-711141778;245100631;2105893802;-979118129;-1632349739;231824173;-140570596;1446704535;-1849021301;-1168644757;542225868;-2095388708;516246263;-105528107;1961308369;-301624204;669533272;161354014;-2108174019;-1202108605;-517871602;-873823093;-198503405;-1356104516;-216275101;-1401640114;952583019;	};
	mti=624;
	is_gauss_double_cached=0;
	cached_gauss_double=0;
       };
       RndSeed @[24] {
	name="RndSeed_25";
	seed{ 485936083;389502272;439607874;576427533;667559973;-1757371490;-1923938158;759656663;-495741989;1553984577;-1773767350;-1819816589;731678369;-1825290606;-1152194850;1699008731;1977683986;1743422096;1029446727;980035350;879112642;-1858047073;832020999;414821338;-919701734;180379126;-1981302744;723526317;620184413;-64661298;1625079295;-1296702635;-1009958797;445013073;278971671;-1333259978;-548430424;695646108;-1185092430;-1792831081;-1224463119;794347272;29478482;-1524742011;1232329839;1789842835;373515464;-84030697;-715468012;1097701188;-1257006229;2059829664;588729785;2094574386;1736365653;34177883;-527858145;-1446320827;-894405571;-1148908879;-48495653;352590965;-1592993945;-384235496;-118250009;1428387637;-1003168826;-791010820;-1539710753;641137782;805748948;1168607211;-1841636966;1121071425;839429770;1620752061;939046008;-1124373595;-2124490703;964925294;-1460233034;-602658987;-128283840;-2095788862;1913096212;-1721832034;-1629472030;-904324425;-702685860;-1764151852;1175493576;-1771370584;-1929772946;-70256903;-586269952;-1253645426;-1114525028;1298400951;117967920;-1442676909;274043993;-661247870;1450312779;1967999897;-702862496;-156952200;1076027633;1588801307;-2103672914;1439001417;-867902506;1336064120;-1757771475;-1848948996;1730343080;1144153120;-2007094663;1061131772;1698564322;644873478;-1950283306;641160477;1076632043;1487565773;1842076664;2046102202;1871204165;-837899693;-1927413232;1651536795;628164164;500030807;-1358109993;88898446;1311620492;-44614104;2061339263;-101248449;-1495249354;-205213937;1201306696;510990938;1606651920;-1934102460;236012078;8108727;-1229088315;-1198904554;1562162040;212701266;1827918576;-391368020;702064291;-971245080;456482129;70593168;112253804;-651731399;-913623168;-852032946;-217440767;-149231253;643743402;-972016715;34262386;1280512159;-1392763652;502095581;-1435127079;-2061253616;-1618477628;803214793;865085945;-1339698966;1376752694;-134747806;-832897803;-838896705;1960592862;-110827346;-1106288139;423613992;-622664066;-766978808;1745613071;-266823361;1683591526;-201884322;1548106605;762723929;2004040411;1592451777;1497642624;-1566864730;1594586998;448123318;1525687186;1624028356;-891043969;2042095795;-436989694;963329838;778144752;-1813010821;921857929;1142248154;-306322379;1887825949;1931130844;-117780478;-1874093513;-154323780;896075567;1301347680;192143643;334250878;1288114062;-1832539324;-410056328;232690018;-431305082;-1515476906;1142578690;-791956722;-997549567;-987245141;-777636822;1637582352;-1819148647;-1273534708;1287923564;1383588840;967023829;1917705714;1512348873;-774839341;-1945882116;39495715;-827059779;-1900302619;-50945773;-252765119;-1572636420;-1756320983;-1332048917;-2127043358;-1498862250;-145959141;-1307265680;1701026035;-1815946636;1409505161;-1277079132;-803140229;-880309930;1917496456;-1853201395;-1953594900;1212391912;1840485104;303231769;2000767714;-838137963;-1367128779;844480187;-637316144;435224137;-198679336;400948851;-66195604;1185603289;-1970043833;1474239817;1051334265;1752211407;-1063892135;1897194902;-952277848;1522875277;226650963;321438679;1858360300;198832795;1443801922;-1069191797;1639579589;-962736782;424314804;-2098012380;-985177825;2145733934;470719406;-1932162358;50121229;2016914759;2124141509;-768970372;1341439812;-590453661;-809174261;-1606003884;1840375835;-853770896;495258254;168110390;-1617876609;-2115746685;-1287712488;-406934922;2091179614;-1868196943;994251222;182161574;-980227913;-563469250;1190130252;-2123313507;711826680;1359456022;1443970130;-665175809;-2097456979;1885906253;-288168897;-1560532752;1979951807;1493437500;1523612248;1244194661;-1447833667;1884761765;1893149695;123816578;-607127401;1092634546;1912608238;1934528411;1846416147;289417580;-697359121;-1492132240;-1804876209;599749303;-437439862;-731954587;-1662531177;1365657123;466607813;1788695061;-276162751;-491028376;1923083926;166261235;-1274576576;1810911852;1860688740;1906679101;337651217;1535450907;719335593;-2061720299;273117820;433621078;364761433;1851472521;1443422485;1233158738;1505154862;-191623685;-1146405815;-136319479;1543652709;-1715214872;-2118520633;1637379119;1883852189;1991777284;1036303474;-426419084;-1565906066;-28053736;802146852;-953940558;-1407649452;1554212462;-1622027700;1291171912;-1299200176;1872922334;-916091264;-135637451;1527835349;-685499604;-971775468;-1401453667;-1376778682;-286728608;-1181238884;646171364;1976504707;-1650557990;-2102037047;-1976689239;633288970;20831366;672512115;-9678347;-1017971291;1896213014;-600003668;-510040923;-521433831;-1624795426;-362921367;1906372464;750318132;771843108;-769669163;-1487577328;-435345987;-57371750;-1094050302;1103878054;1701148042;666616959;481656516;-1681004290;1490012439;70327642;-1249132497;-1489639313;681707952;1122829344;1201621942;-950087707;485760369;-1977083831;1155447372;-240273641;-1039208293;1120814512;1384397198;937508389;-450735276;-1064996337;-1929220999;-916479675;-1863116707;109868603;-531809784;215272217;173245344;-574386204;-1988401432;-802630120;963505518;1651543086;-1162512556;1372527800;-232499256;98519011;-1983588004;1284444644;-565666264;108555207;-442431916;-1521675995;1638311222;1839898503;2019141555;603680016;2063571239;-2015968298;1364441213;1059464902;-331922439;419732862;-846425453;349496494;-819898235;-2077121346;-1981637619;1146395341;-2016657313;-527291499;1276672531;226086144;448979687;-2103302645;647156854;1658518136;364811432;-2108256204;2026753339;-526646320;979267374;50560278;-1041555041;302301310;307585449;-460195167;2133235167;-1853951860;-776804355;-106006738;500636602;499809372;1408519751;-1993320038;-1825721611;-1634808719;350565982;219726614;147177391;1533167885;-1238220865;1075465365;-446206871;-1984396840;-1740708087;-1346171809;1276946362;-684834351;188177381;742903909;899565286;-743632692;-353408326;-945742323;-1240966249;-1486757669;484497584;-444878972;2070708568;-663311565;-692175865;-616049748;-1855443676;1649223704;-1214958344;839758526;524367123;-1314513507;-541275942;1457938621;-2016622515;-114929587;-415666455;-1234567562;-1775666711;-368517411;-724124227;1014336542;1060001791;-1235668795;-172245074;-1503578515;-75177224;1908597301;1281168563;-1716883862;-1171572423;155920761;304619504;-1032057884;-459254952;-1420191715;-912614030;1113102541;-733120843;1041317384;-919092381;305035036;467074121;-1160537077;71066316;-1069143876;414534812;-1379223602;602583487;888166815;170030336;-1556796602;-1224902629;-1410022107;-1390106196;-100199952;1862935082;1316323395;801959511;-1077438047;1919736478;1951029771;1506468419;133077084;-886089057;-881836576;-912529436;-991027335;1965078393;1549769904;-1855288018;-792051530;-1117821244;470647930;1687195775;634286612;-200558525;-1745226848;-1167273141;1560309551;1592622473;1519931660;-187502202;823949535;-16512670;-213672275;-396707057;1731803686;1690555086;-1531185897;602075318;-128688068;1451536970;	};
	mti=624;
	is_gauss_double_cached=0;
	cached_gauss_double=0;
       };
      };
     };
     RndSeed @[1] {
      name="rnd_seed";
      seed{ 897248114;-1259630319;-1954705695;-2086433643;-1705562578;-246166775;142172280;-1066196830;649876912;-363601797;-1551220787;-201998924;984813377;-1929982005;1866720504;1737535582;-2064818913;-596409631;-537210356;-394821123;-1176302275;-1088439095;390472553;1002483428;-644065336;-93234492;-249392311;1955837623;486322880;268723693;-1316990013;-1148081097;1053267338;-194887551;722894185;-1796145741;-419870710;-744395548;-2126350183;-1623934615;-1975558537;-1109580724;1457379925;952758326;-932820647;-793678521;622734178;-1116891631;992844023;348717466;1162608598;-2078137647;-402129645;-523610230;-892508948;-545793120;1897913877;280270467;-1694155315;294983543;-1251003482;-1650029695;-1335161250;-843867016;1576969605;-260969840;-224140684;1265137246;954732510;2064975050;-1145863940;-1435022393;-1859029257;1513712809;985631399;417291160;-2038587757;-1933156114;888379733;1446724555;-464909414;-1706911051;-1159096460;-1791674743;-147343083;960690226;682596297;1099430942;359127508;311504974;93962501;-1671326033;632618192;-885562045;1179982281;-1505675969;1344906533;-1418551925;1622092278;1701084792;242471559;-1984251903;-1568971862;-1063520265;1591722069;-1959097976;-1601150455;-874166212;-889564662;717605003;-1582378599;-1301052667;1211123575;485189748;-182999148;374766658;1150697026;-738165078;-390496439;960351772;-332421139;71115877;-1747551486;-288197538;2067393244;-402841323;168191432;698976579;-691346957;454158309;419567441;-1655444926;1843518827;-1387150657;-1775972895;1209349907;1737084105;-273997764;2063222132;-629133755;1321145195;-340980602;-64855207;836106865;-384606302;857100345;-616134379;-1192753754;-1534913223;1646103447;-337508797;-104008340;1371554336;1910014402;1731164243;157488784;-1230766726;1651230814;-1801393009;1853249886;-1909629469;-2064890998;-586605120;1029458265;-1567764431;-569878997;-1071722633;1842759325;1870815306;1275367738;-2047480342;699437794;-2078020834;2120915280;1609487567;715455530;-1961002406;-1366381474;1214551640;1682680277;1866914062;-1438763676;1522254727;410589237;1882867230;-2066414372;335577213;-1969515802;-2079897542;1101145964;-914546306;-578950040;-399253994;-1096753521;-660660212;-1198578643;1339175923;-781551297;-1839371394;1105332893;-1928816742;-400816250;1655921312;-452260989;2002840327;447789431;319958765;-658015714;-2019202134;-1586612048;-137582258;706769011;1101838665;827045450;599553857;-2145445088;244597783;1487421271;1630555190;-344172316;-1830139429;-1553867370;-156727033;-755056810;-2131860048;-494346652;1852068823;91308896;725609566;-1111505690;-982815291;1292267944;1836226774;-810066908;-496780978;202956912;603675823;637918661;-10943404;552199869;1297990249;-1519144401;-1727998742;1493519921;-1227758025;-860568373;2118867559;1126222143;-1549971275;-1469719981;-370967157;-1094842937;2081077388;-1045858167;-179155018;-384518151;905350287;-1851803717;571620219;760498291;-480881197;-973785647;838212682;340510526;510321855;-801267485;-852016520;1774211485;39420368;537777206;2107097314;1618664461;210916571;-423959548;631482818;-1040919263;-279241335;-892903760;497369428;1334556795;-290177741;-620998078;1723791759;253979182;2098469877;2033083432;2025527244;-556275368;-1153759308;1554310973;-2109179006;1594713042;-1652347925;-1896234258;1399293819;-1212915145;264979477;2035769098;-26264659;816116738;-1472777223;-1886895409;579752040;1987550252;850378084;-592526232;228677599;-1282752773;-3264037;1636907752;554996081;10747923;1856021975;150743074;1441285143;-284865308;64061770;547700487;2007963302;-518601320;717968026;-1887063740;-1161755710;654757340;624448862;1095845326;1219653475;1112960789;540367258;1430941426;-1573264900;842324047;-1866598839;672477326;-834606497;456739053;2014938441;1820294365;-1127769538;237909957;778195458;-320898672;-493131725;374332760;1492882317;244532839;1469335464;813662131;1904048850;1828753335;1969748325;1462812563;773013089;1263710334;6222118;1806899780;-1306665146;695150693;1034369820;-410885147;-2065109159;-21981403;1688153775;-1834763828;-2034905187;-868895926;-2040902706;760295113;705437415;-801989522;-327259983;340256932;1639347777;676478214;-868392127;-2126595595;1085040460;-101711712;1181203896;-1177629723;1052562025;-385800214;-2127578499;-247860261;-210619237;-1285411717;-1501642238;-1370695642;-901640534;-1139102088;-1435816006;2062624444;733280257;-325264040;815916517;1806401640;106587238;222094010;-1348528385;297616670;-861761020;117428779;2046490308;1520601476;1774880419;2117307057;709856479;658783300;-1019651996;1857641166;-1623434894;-1466106812;1764750271;337867896;1769011978;1878580541;-337505063;55931846;657238908;1968152816;-169076117;-975001150;-619957198;463669432;-1908341507;-643594058;-2026430605;1348524010;-730896925;454931916;416148985;-1578791134;-739712940;-1725329931;204101311;-1062609662;-1691773722;860783264;946450304;1161241387;207536058;3478215;923381087;-305329130;-1353819564;48467194;-497866365;-1191262819;1442954968;-408984143;934531440;1843513070;-1086308879;585900848;-1977125474;-643228730;1005419111;430194483;1169789286;892875109;-1732318651;-897476207;416658129;2090816327;-186559977;-187909452;1699611428;132945605;1386154990;-1021089733;1553010825;1685237703;1771892687;-1665309430;-1471203233;408978895;-1985168698;-1461014828;-475885929;-149644797;184461852;-1631733780;-113049057;1929365839;-1841043271;755994780;1384891379;-572376242;-1822728640;527993133;536302677;-728200547;-1916517795;401821920;777687226;634513383;938837982;-1741204308;-712292839;-888158003;-989731250;1070351745;-997999887;-1220926516;-477621207;-668502217;432615022;341097247;-1817216444;-1580909839;1073812924;-1037427637;-421491456;-2071807233;419582815;835099779;-300811050;1008848942;-622226245;1119083448;2015783992;374250496;417956216;70961961;-1285132279;1021911943;1585993281;1118486430;-946608452;-1704284523;1344252873;908115709;2135579935;636192621;-776174384;533471998;586778067;-154978136;1359740759;1629951629;-1733015859;2121954041;2104107711;-295897115;1345244080;-1738577645;-559564224;1033955967;-1763695458;250221436;-693902564;1091788545;927707887;-712040796;1439001997;1595609215;1364606826;661845780;-755815374;-2034931863;1346096804;-2074100882;-1065691144;654888208;1007146357;778226326;1410374083;1808044267;239070962;-300943249;1387420801;914251343;580430497;1404608152;117575915;1513662704;256310634;-569005681;-1678005121;-1445134348;2053633677;2025466731;-1577911340;-1278866808;-623511374;-1672074119;45321757;1247003680;1061170196;1198754894;-104913407;2054118989;-1781862918;1530368638;-226966082;-707276305;1591871350;331461390;608113940;235882513;-2046843672;-1075932011;-1894925926;1648301914;1170547429;1665497643;-1251944432;-1796010764;-73953480;788544378;1090859788;-1128050928;-145143834;594707390;-728801566;-252193318;1890915838;-834826210;602694736;1275821290;-2078563303;-1397408457;-343458496;1558647263;      };
      mti=156;
      is_gauss_double_cached=0;
      cached_gauss_double=0;
     };
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
     DynEnumType @[0] {
      name="RndInitType";
      desc=;
      enums {
       name=;
       el_typ=DynEnumItem;
       el_def=0;
       DynEnumItem @[0] {
	name="OLD_SEED";
	value=0;
	desc="use stored random seed value (recreates same sequence every time)";
       };
       DynEnumItem @[1] {
	name="NEW_SEED";
	value=1;
	desc="generate new random seed (new sequence of random numbers)";
       };
       DynEnumItem @[2] {
	name="BATCH_SEEDS";
	value=2;
	desc="use a fixed list of random seeds with the current batch number selecting the seed to use -- provides a consistent set of initial conditions for each batch regardless..";
       };
      };
      bits=0;
     };
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$.projects[0].networks[0]$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.projects[0].data.gp[0][0]$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[2] {
      name="no_prompts";
      var_type=T_Bool;
      bool_val=0;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="If train is called by other programs (e.g., Batch), they should set this to true -- otherwise it is reset to false in Init";
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="max_epoch";
      var_type=T_Int;
      int_val=1;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="epoch";
      var_type=T_Int;
      int_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[2] {
      name="train_mode";
      var_type=T_HardEnum;
      int_val=1;
      hard_enum_type=Network::TrainMode;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[3] {
      name="rnd_init";
      var_type=T_DynEnum;
      dyn_enum_val {
       enum_type=.projects[0].programs.gp[0][1].types[0]$$;
       value=2;
      };
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="how to initialize the random numbers when the Init button is pressed";
      init_from=NULL;
     };
     ProgVar @[4] {
      name="err_stopcrit";
      var_type=T_Real;
      real_val=0.4;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="stopping criterion for training, in terms of count of trials with errors in the epoch (nework cnt_err)";
      init_from=NULL;
     };
     ProgVar @[5] {
      name="n_under_thr";
      var_type=T_Int;
      int_val=5;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="number of times network needs to be under stopcrit threshold to actually stop";
      init_from=NULL;
     };
     ProgVar @[6] {
      name="save_final_wts";
      var_type=T_Bool;
      bool_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="save the network's weights at the end of training?  ";
      init_from=NULL;
     };
     ProgVar @[7] {
      name="save_wts_interval";
      var_type=T_Int;
      int_val=-1;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="save the weights every this many epochs, if number is >= 1 (otherwise do not save weights)";
      init_from=NULL;
     };
     ProgVar @[8] {
      name="n_under_cnt";
      var_type=T_Int;
      int_val=0;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="current under threshold counter";
      init_from=NULL;
     };
     ProgVar @[9] {
      name="rnd_seeds";
      var_type=T_Object;
      object_type=RndSeed_List;
      object_val=.projects[0].programs.gp[0][1].objs[0]$$;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[10] {
      name="train_timer";
      var_type=T_Object;
      object_type=TimeUsed;
      object_val=.projects[0].networks[0].train_time$$;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[11] {
      name="rnd_seed";
      var_type=T_Object;
      object_type=RndSeed;
      object_val=.projects[0].programs.gp[0][1].objs[1]$$;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
     Function @[0] {
      desc=;
      flags=0;
      orig_prog_code=;
      name="GetRandomSeed";
      return_type=T_Int;
      object_type=taOBase;
      args {
       name=;
       el_typ=ProgVar;
       el_def=0;
      };
      fun_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       LocalVars @[0] {
	desc=;
	flags=0;
	orig_prog_code=;
	local_vars {
	 name=;
	 el_typ=ProgVar;
	 el_def=0;
	};
       };
       Switch @[1] {
	desc=;
	flags=0;
	orig_prog_code=;
	switch_var=.projects[0].programs.gp[0][1].vars[3]$$;
	cases {
	 name=;
	 el_typ=CaseBlock;
	 el_def=0;
	 CaseBlock @[0] {
	  desc=;
	  flags=0;
	  orig_prog_code=;
	  prog_code {
	   name=;
	   el_typ=ProgCode;
	   el_def=0;
	   MethodCall @[0] {
	    desc="restore previous random seed (all runs produce same results) -- click on rnd_seed object to generate a new seed to use for this if you want";
	    flags=0;
	    orig_prog_code=;
	    result_var=NULL;
	    obj=.projects[0].programs.gp[0][1].vars[11]$$;
	    method=RndSeed::OldSeed;
	    meth_args {
	     name=;
	     el_typ=ProgArg;
	     el_def=0;
	    };
	   };
	  };
	  case_val {
	   expr="OLD_SEED";
	  };
	 };
	 CaseBlock @[1] {
	  desc=;
	  flags=0;
	  orig_prog_code=;
	  prog_code {
	   name=;
	   el_typ=ProgCode;
	   el_def=0;
	   MethodCall @[0] {
	    desc="new random numbers each time";
	    flags=0;
	    orig_prog_code=;
	    result_var=NULL;
	    obj=$.projects[0].programs.gp[0][1].vars[11]$;
	    method=RndSeed::NewSeed;
	    meth_args {
	     name=;
	     el_typ=ProgArg;
	     el_def=0;
	    };
	   };
	  };
	  case_val {
	   expr="NEW_SEED";
	  };
	 };
	 CaseBlock @[2] {
	  desc=;
	  flags=0;
	  orig_prog_code=;
	  prog_code {
	   name=;
	   el_typ=ProgCode;
	   el_def=0;
	   MethodCall @[0] {
	    desc="restore previous random seed (all runs produce same results); change to NewSeed to have new random numbers each time";
	    flags=0;
	    orig_prog_code=;
	    result_var=NULL;
	    obj=.projects[0].programs.gp[0][1].vars[9]$$;
	    method=RndSeed_List::UseSeed;
	    meth_args {
	     name=;
	     el_typ=ProgArg;
	     el_def=0;
	     ProgArg @[0] {
	      arg_type=int;
	      type="int";
	      name="idx";
	      required=1;
	      def_val=;
	      expr {
	       expr="network.batch % rnd_seeds.seeds.size";
	      };
	     };
	    };
	   };
	  };
	  case_val {
	   expr="BATCH_SEEDS";
	  };
	 };
	};
       };
      };
     };
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     AssignExpr @[0] {
      desc=;
      flags=0;
      orig_prog_code=;
      result_var=.projects[0].programs.gp[0][1].args[2]$$;
      expr {
       expr="false";
      };
     };
     MethodCall @[1] {
      desc=;
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][1].args[0]$$;
      method=taBase::CheckConfig;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	expr {
	 expr="false";
	};
       };
      };
     };
     AssignExpr @[2] {
      desc=;
      flags=0;
      orig_prog_code=;
      result_var=.projects[0].programs.gp[0][1].vars[10]$$;
      expr {
       expr="network.train_time";
      };
     };
     AssignExpr @[3] {
      desc=;
      flags=0;
      orig_prog_code=;
      result_var=.projects[0].programs.gp[0][1].vars[8]$$;
      expr {
       expr="0";
      };
     };
     FunctionCall @[4] {
      desc="initialize random seed";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      fun=.projects[0].programs.gp[0][1].functions[0]$$;
      fun_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     WtInitPrompt @[5] {
      desc="don't initialize weights without checking";
      flags=0;
      orig_prog_code=;
      prompt="Do you want to Initialize Network Weights";
      yes_label="Yes";
      no_label="No";
      yes_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       MethodCall @[0] {
	desc="need to have built network by now in any case, so do it here to make double sure -- prevents errs when loading project with startup program";
	flags=0;
	orig_prog_code=;
	result_var=NULL;
	obj=$.projects[0].programs.gp[0][1].args[0]$;
	method=Network::Build;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
       MethodCall @[1] {
	desc="initialize network weights: could also load pre-set weights or something else here";
	flags=0;
	orig_prog_code=;
	result_var=NULL;
	obj=$.projects[0].programs.gp[0][1].args[0]$;
	method=Network::Init_Weights;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
       PrintExpr @[2] {
	desc=;
	flags=0;
	orig_prog_code=;
	expr {
	 expr="network.name << \" Weights Initialized\"";
	};
	my_mask=NULL;
	debug_level=NULL;
       };
      };
     };
     AssignExpr @[6] {
      desc="grab the official network epoch counter: will be initialized if needed by now";
      flags=0;
      orig_prog_code=;
      result_var=.projects[0].programs.gp[0][1].vars[1]$$;
      expr {
       expr="network.epoch";
      };
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     AssignExpr @[0] {
      desc=;
      flags=0;
      orig_prog_code=;
      result_var=$.projects[0].programs.gp[0][1].vars[10]$;
      expr {
       expr="network.train_time";
      };
     };
     MethodCall @[1] {
      desc=;
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=$.projects[0].programs.gp[0][1].vars[10]$;
      method=TimeUsed::StartTimer;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_used";
	required=0;
	def_val="true";
	expr {
	 expr="true";
	};
       };
      };
     };
     AssignExpr @[2] {
      desc=;
      flags=0;
      orig_prog_code=;
      result_var=$.projects[0].programs.gp[0][1].vars[8]$;
      expr {
       expr="0";
      };
     };
     MemberAssign @[3] {
      desc="set network's training mode to our local value";
      flags=0;
      orig_prog_code=;
      obj=$.projects[0].programs.gp[0][1].args[0]$;
      path="train_mode";
      expr {
       expr="train_mode";
      };
      update_after=0;
     };
     FunctionCall @[4] {
      desc="initialize random seed";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      fun=$.projects[0].programs.gp[0][1].functions[0]$;
      fun_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     If @[5] {
      desc=;
      flags=0;
      orig_prog_code=;
      cond {
       expr="no_prompts";
      };
      true_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       MethodCall @[0] {
	desc="initialize network weights: could also load pre-set weights or something else here";
	flags=0;
	orig_prog_code=;
	result_var=NULL;
	obj=$.projects[0].programs.gp[0][1].args[0]$;
	method=Network::Init_Weights;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
       PrintExpr @[1] {
	desc=;
	flags=0;
	orig_prog_code=;
	expr {
	 expr="network.name << \" Weights Initialized\"";
	};
	my_mask=NULL;
	debug_level=NULL;
       };
      };
     };
     AssignExpr @[6] {
      desc="grab the official network epoch counter: will be initialized if needed by now";
      flags=0;
      orig_prog_code=;
      result_var=$.projects[0].programs.gp[0][1].vars[1]$;
      expr {
       expr="network.epoch";
      };
     };
     WhileLoop @[7] {
      desc=;
      flags=0;
      orig_prog_code=;
      loop_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       ProgramCall @[0] {
	desc=;
	flags=0;
	orig_prog_code=;
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  expr {
	   expr="network";
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DataTable;
	  type="DataTable*";
	  name="input_data";
	  required=1;
	  def_val=;
	  expr {
	   expr="input_data";
	  };
	 };
	};
	target=.projects[0].programs.gp[0][2]$$;
	targ_ld_init="*LeabraEpoch*";
       };
       NetCounterIncr @[1] {
	desc="increment the epoch counter";
	flags=0;
	orig_prog_code=;
	network_var=$.projects[0].programs.gp[0][1].args[0]$;
	local_ctr_var=$.projects[0].programs.gp[0][1].vars[1]$;
	counter=Network::epoch;
	update_after=0;
       };
       If @[2] {
	desc=;
	flags=0;
	orig_prog_code=;
	cond {
	 expr="network.cnt_err <= err_stopcrit";
	};
	true_code {
	 name=;
	 el_typ=ProgCode;
	 el_def=0;
	 VarIncr @[0] {
	  desc=;
	  flags=0;
	  orig_prog_code=;
	  var=$.projects[0].programs.gp[0][1].vars[8]$;
	  expr {
	   expr="1";
	  };
	 };
	 IfBreak @[1] {
	  desc="stop if errors go below stopping criterion (note: could use sse or avg_sse here too)";
	  flags=0;
	  orig_prog_code=;
	  cond {
	   expr="n_under_cnt >=  n_under_thr";
	  };
	 };
	};
       };
       Else @[3] {
	desc=;
	flags=0;
	orig_prog_code=;
	else_code {
	 name=;
	 el_typ=ProgCode;
	 el_def=0;
	 AssignExpr @[0] {
	  desc=;
	  flags=0;
	  orig_prog_code=;
	  result_var=$.projects[0].programs.gp[0][1].vars[8]$;
	  expr {
	   expr="0";
	  };
	 };
	};
       };
       If @[4] {
	desc=;
	flags=0;
	orig_prog_code=;
	cond {
	 expr="save_wts_interval >= 1";
	};
	true_code {
	 name=;
	 el_typ=ProgCode;
	 el_def=0;
	 If @[0] {
	  desc=;
	  flags=0;
	  orig_prog_code=;
	  cond {
	   expr="epoch % save_wts_interval == 0";
	  };
	  true_code {
	   name=;
	   el_typ=ProgCode;
	   el_def=0;
	   ProgramCall @[0] {
	    desc=;
	    flags=0;
	    orig_prog_code=;
	    prog_args {
	     name=;
	     el_typ=ProgArg;
	     el_def=0;
	     ProgArg @[0] {
	      arg_type=Network;
	      type="LeabraNetwork*";
	      name="network";
	      required=1;
	      def_val=;
	      expr {
	       expr="network";
	      };
	     };
	    };
	    target=.projects[0].programs.gp[0][9]$$;
	    targ_ld_init="*SaveWeights*";
	   };
	  };
	 };
	};
       };
      };
      test {
       expr="epoch < max_epoch";
      };
     };
     If @[8] {
      desc=;
      flags=0;
      orig_prog_code=;
      cond {
       expr="save_final_wts";
      };
      true_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       ProgramCall @[0] {
	desc=;
	flags=0;
	orig_prog_code=;
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=Network;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  expr {
	   expr="network";
	  };
	 };
	};
	target=$.projects[0].programs.gp[0][9]$;
	targ_ld_init="*SaveWeights*";
       };
      };
     };
     MethodCall @[9] {
      desc=;
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=$.projects[0].programs.gp[0][1].vars[10]$;
      method=TimeUsed::EndTimer;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
    };
    step_prog=$.projects[0].programs.gp[0][4]$;
    step_n=1;
   };
   Program @[2] {
    name="LeabraEpoch";
    short_nm="Epoch";
    tags="Leabra, Std";
    desc="iterates over all of the items in a data table and calls LeabraTrial process on them";
    flags=2;
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$.projects[0].networks[0]$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="network to operate on";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.projects[0].data.gp[0][0]$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="table of patterns to present to the network, one row at a time";
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="data_loop_order";
      var_type=T_HardEnum;
      int_val=0;
      hard_enum_type=DataLoop::Order;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="controls the order in which events (rows of the input data datatable) are presented to the network
(SEQUENTIAL, PERMUTED, RANDOM)";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="trial";
      var_type=T_Int;
      int_val=170;
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="current trial (event) within the epoch -- increments automatically";
      init_from=NULL;
     };
     ProgVar @[2] {
      name="trial_mon_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=.projects[0].data.gp[1][0]$$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="trial-level output data -- we reset it every epoch by default, so it just contains last epoch of data";
      init_from=NULL;
     };
     ProgVar @[3] {
      name="step_on_err";
      var_type=T_Bool;
      bool_val=1;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="when you step at the Epoch level, this will automatically step through to the next point at which an error was made -- you can use the netview history to replay what happend";
      init_from=NULL;
     };
     ProgVar @[4] {
      name="epoch_timer";
      var_type=T_Object;
      object_type=TimeUsed;
      object_val=.projects[0].networks[0].epoch_time$$;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="timer to record time required to perform one epoch of processing (object is on network -- this is a pointer to it)";
      init_from=NULL;
     };
     ProgVar @[5] {
      name="data_loop_index";
      var_type=T_Int;
      int_val=170;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="index counter for the looping over items in the input_data datatable (not always the same as trial counter, depending on distributed memory computation)";
      init_from=NULL;
     };
     ProgVar @[6] {
      name="compute_rel_netin";
      var_type=T_Bool;
      bool_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="call Compute_AvgAbsRelNetin() function to collect relative net input information telling how much each layer receives from each of its receiving projections";
      init_from=NULL;
     };
     ProgVar @[7] {
      name="adapt_rel_abs_netin";
      var_type=T_Bool;
      bool_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="use the computed rel and abs netin values to adapt the wt_scale.abs and wt_scale.rel params of network conspecs to match target values that are set on the projections -- see conspec rel_net_adapt and layerspec abs_net_adapt parmeters and comments for more information";
      init_from=NULL;
     };
     ProgVar @[8] {
      name="stable_wt_update_interval";
      var_type=T_Int;
      int_val=1;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="how frequently in terms of epochs to update the stable weights -- should always be >= 1";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     NetCounterInit @[0] {
      desc="initialize trial counter (local variable and in the network)";
      flags=0;
      orig_prog_code=;
      network_var=.projects[0].programs.gp[0][2].args[0]$$;
      local_ctr_var=.projects[0].programs.gp[0][2].vars[1]$$;
      counter=Network::trial;
      update_after=0;
     };
     AssignExpr @[1] {
      desc="get pointer to epoch timer object on network";
      flags=0;
      orig_prog_code=;
      result_var=.projects[0].programs.gp[0][2].vars[4]$$;
      expr {
       expr="network.epoch_time";
      };
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     NetCounterInit @[0] {
      desc="initialize trial counter (local variable and in the network)";
      flags=0;
      orig_prog_code=;
      network_var=$.projects[0].programs.gp[0][2].args[0]$;
      local_ctr_var=$.projects[0].programs.gp[0][2].vars[1]$;
      counter=Network::trial;
      update_after=0;
     };
     AssignExpr @[1] {
      desc="get pointer to epoch timer object on network";
      flags=0;
      orig_prog_code=;
      result_var=$.projects[0].programs.gp[0][2].vars[4]$;
      expr {
       expr="network.epoch_time";
      };
     };
     MethodCall @[2] {
      desc="start the epoch timer to record computation time per epoch";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=$.projects[0].programs.gp[0][2].vars[4]$;
      method=TimeUsed::StartTimer;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_used";
	required=0;
	def_val="true";
	expr {
	 expr="true";
	};
       };
      };
     };
     ProgramCall @[3] {
      desc=;
      flags=0;
      orig_prog_code=;
      prog_args {
       name="prog_args";
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable;
	type="DataTable*";
	name="input_data";
	required=1;
	def_val=;
	expr {
	 expr="input_data";
	};
       };
      };
      target=.projects[0].programs[2]$$;
      targ_ld_init="*Stat3*";
     };
     MethodCall @[4] {
      desc="reset trial-level monitor data every epoch, so it reflects only the most recent epoch's worth of data (turn flags OFF to accumulate trial data across entire training run)";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][2].vars[2]$$;
      method=DataTable::ResetData;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     NetDataLoop @[5] {
      desc="iterates over the events/rows of input_data, according to data_loop_order variable";
      flags=0;
      orig_prog_code=;
      loop_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       ProgramCall @[0] {
	desc="run the trial program, passing network and input_data";
	flags=0;
	orig_prog_code=;
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  expr {
	   expr="network";
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DataTable;
	  type="DataTable*";
	  name="input_data";
	  required=1;
	  def_val=;
	  expr {
	   expr="input_data";
	  };
	 };
	};
	target=.projects[0].programs.gp[0][3]$$;
	targ_ld_init="*LeabraTrial*";
       };
       If @[1] {
	desc=;
	flags=0;
	orig_prog_code=;
	cond {
	 expr="step_on_err && network.sse > 0.0";
	};
	true_code {
	 name="ProgEl_List_100";
	 el_typ=ProgCode;
	 el_def=0;
	 StopStepPoint @[0] {
	  desc=;
	  flags=0;
	  orig_prog_code=;
	 };
	};
       };
      };
      data_var=.projects[0].programs.gp[0][2].args[1]$$;
      index_var=.projects[0].programs.gp[0][2].vars[5]$$;
      order_var=.projects[0].programs.gp[0][2].vars[0]$$;
      order=SEQUENTIAL;
      update_after=0;
      dmem_nprocs=1;
      dmem_this_proc=0;
      grouped=0;
      group_col 9 0="Group";
      group_index_var=NULL;
      group_order_var=NULL;
      group_order=PERMUTED;
      group_idx_list{       };
     };
     If @[6] {
      desc="if full batch mode, update only at end of epoch";
      flags=0;
      orig_prog_code=;
      cond {
       expr="network.wt_update == Network::BATCH";
      };
      true_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       MethodCall @[0] {
	desc="final update of weights based on accumulated changes";
	flags=0;
	orig_prog_code=;
	result_var=NULL;
	obj=$.projects[0].programs.gp[0][2].args[0]$;
	method=Network::Compute_Weights;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
      };
     };
     If @[7] {
      desc=;
      flags=NEW_EL;
      orig_prog_code="if(network.epoch % stable_wt_update_interval == 0)";
      cond {
       expr="network.epoch % stable_wt_update_interval == 0";
      };
      true_code {
       name="ProgEl_List_124";
       el_typ=ProgCode;
       el_def=0;
       MethodCall @[0] {
	desc=;
	flags=NEW_EL|CAN_REVERT_TO_CODE;
	orig_prog_code="network.Compute_StableWeights()";
	result_var=NULL;
	obj=$.projects[0].programs.gp[0][2].args[0]$;
	method=LeabraNetwork::Compute_StableWeights;
	meth_args {
	 name="ProgArg_List_0";
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
      };
     };
     MethodCall @[8] {
      desc="network accumulates some core statistics over the epoch -- this finalizes that process and computes summary stats";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=$.projects[0].programs.gp[0][2].args[0]$;
      method=LeabraNetwork::Compute_EpochStats;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     If @[9] {
      desc=;
      flags=0;
      orig_prog_code=;
      cond {
       expr="compute_rel_netin";
      };
      true_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       MethodCall @[0] {
	desc=;
	flags=0;
	orig_prog_code=;
	result_var=NULL;
	obj=$.projects[0].programs.gp[0][2].args[0]$;
	method=LeabraNetwork::Compute_AvgAbsRelNetin;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
       If @[1] {
	desc=;
	flags=0;
	orig_prog_code=;
	cond {
	 expr="adapt_rel_abs_netin";
	};
	true_code {
	 name=;
	 el_typ=ProgCode;
	 el_def=0;
	 MethodCall @[0] {
	  desc=;
	  flags=0;
	  orig_prog_code=;
	  result_var=NULL;
	  obj=$.projects[0].programs.gp[0][2].args[0]$;
	  method=LeabraNetwork::Compute_AdaptRelNetin;
	  meth_args {
	   name=;
	   el_typ=ProgArg;
	   el_def=0;
	  };
	 };
	 MethodCall @[1] {
	  desc=;
	  flags=0;
	  orig_prog_code=;
	  result_var=NULL;
	  obj=$.projects[0].programs.gp[0][2].args[0]$;
	  method=LeabraNetwork::Compute_AdaptAbsNetin;
	  meth_args {
	   name=;
	   el_typ=ProgArg;
	   el_def=0;
	  };
	 };
	};
       };
      };
     };
     MethodCall @[10] {
      desc="done with the computation in the epoch -- record time it took";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=$.projects[0].programs.gp[0][2].vars[4]$;
      method=TimeUsed::EndTimer;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     ProgramCall @[11] {
      desc="run program that records data from network and possibly other sources about the epoch";
      flags=0;
      orig_prog_code=;
      prog_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=Network;
	type="LeabraNetwork*";
	name="network";
	required=1;
	def_val=;
	expr {
	 expr="network";
	};
       };
      };
      target=.projects[0].programs.gp[0][8]$$;
      targ_ld_init="*LeabraEpochMonitor*";
     };
    };
    step_prog=$.projects[0].programs.gp[0][2]$;
    step_n=1;
   };
   Program @[3] {
    name="LeabraTrial";
    short_nm="Trial";
    tags="Leabra, Std";
    desc="Leabra processing of a single input/toutput event or external information: typically runs a minus and a plus phase, then learns (unless testing)";
    flags=0;
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$.projects[0].networks[0]$;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="network to operate on -- typically set by higher-level calling programs";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.projects[0].data.gp[0][0]$;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="datatable containing training input/output patterns";
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="phase_no";
      var_type=T_Int;
      int_val=1;
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="local phase counting variable (0 is typically minus phase, 1 is typically plus -- depends on network settings)";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="update_net_view";
      var_type=T_Bool;
      bool_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="determines whether to update any network view displays after trial is completed";
      init_from=NULL;
     };
     ProgVar @[2] {
      name="trial";
      var_type=T_Int;
      int_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|EDIT_VAL;
      reference=0;
      desc="current trial (event) within the epoch -- increments automatically";
      init_from=NULL;
     };
     ProgVar @[3] {
      name="compute_rel_netin";
      var_type=T_Bool;
      bool_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="call ComputeAbsRelNetin() function to collect relative net input information telling how much each layer receives from each of its receiving projections";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     NetCounterInit @[0] {
      desc="initialize the local phase_no counter, and corresponding network one";
      flags=0;
      orig_prog_code=;
      network_var=.projects[0].programs.gp[0][3].args[0]$$;
      local_ctr_var=.projects[0].programs.gp[0][3].vars[0]$$;
      counter=LeabraNetwork::phase_no;
      update_after=0;
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     NetCounterInit @[0] {
      desc="initialize the local phase_no counter, and corresponding network one";
      flags=0;
      orig_prog_code=;
      network_var=$.projects[0].programs.gp[0][3].args[0]$;
      local_ctr_var=$.projects[0].programs.gp[0][3].vars[0]$;
      counter=LeabraNetwork::phase_no;
      update_after=0;
     };
     MethodCall @[1] {
      desc="initializes various counters at start of trial";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=$.projects[0].programs.gp[0][3].args[0]$;
      method=LeabraNetwork::Trial_Init;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     WhileLoop @[2] {
      desc="loop over phases of settling in the network";
      flags=0;
      orig_prog_code=;
      loop_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       ProgramCall @[0] {
	desc="run the settle program (which iterates over cyles of network activation updating) for each phase";
	flags=0;
	orig_prog_code=;
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  expr {
	   expr="network";
	  };
	 };
	 ProgArg @[1] {
	  arg_type=DataTable;
	  type="DataTable*";
	  name="input_data";
	  required=1;
	  def_val=;
	  expr {
	   expr="input_data";
	  };
	 };
	};
	target=$.projects[0].programs.gp[0][4]$;
	targ_ld_init="*LeabraSettle*";
       };
       NetCounterIncr @[1] {
	desc="increment the phase number (also on network)";
	flags=0;
	orig_prog_code=;
	network_var=$.projects[0].programs.gp[0][3].args[0]$;
	local_ctr_var=$.projects[0].programs.gp[0][3].vars[0]$;
	counter=LeabraNetwork::phase_no;
	update_after=0;
       };
       MethodCall @[2] {
	desc="increments other phase state information to prepare for the next phase of settling";
	flags=0;
	orig_prog_code=;
	result_var=NULL;
	obj=$.projects[0].programs.gp[0][3].args[0]$;
	method=LeabraNetwork::Trial_UpdatePhase;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
      };
      test {
       expr="phase_no < network.phase_max";
      };
     };
     MethodCall @[3] {
      desc="after the trial is over, do final computations: Compute_dWt (learn weights), compute stats";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=$.projects[0].programs.gp[0][3].args[0]$;
      method=LeabraNetwork::Trial_Final;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     If @[4] {
      desc=;
      flags=NEW_EL;
      orig_prog_code=;
      cond {
       expr="compute_rel_netin";
      };
      true_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       MethodCall @[0] {
	desc="special for adapting netin";
	flags=0;
	orig_prog_code=;
	result_var=NULL;
	obj=$.projects[0].programs.gp[0][3].args[0]$;
	method=LeabraNetwork::Compute_AbsRelNetin;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
      };
     };
     If @[5] {
      desc="test if it is time to update the weight values from delta weights (dWt) computed over trials";
      flags=0;
      orig_prog_code=;
      cond {
       expr="network.Compute_Weights_Test(network.trial+1)";
      };
      true_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       MethodCall @[0] {
	desc="update the weight values based on changes computed by trial program";
	flags=0;
	orig_prog_code=;
	result_var=NULL;
	obj=$.projects[0].programs.gp[0][3].args[0]$;
	method=Network::Compute_Weights;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
      };
     };
     ProgramCall @[6] {
      desc="records data about the trial-level processing to a datatable for graphing/processing";
      flags=0;
      orig_prog_code=;
      prog_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=Network;
	type="LeabraNetwork*";
	name="network";
	required=1;
	def_val=;
	expr {
	 expr="network";
	};
       };
      };
      target=.projects[0].programs.gp[0][7]$$;
      targ_ld_init="*LeabraTrialMonitor*";
     };
     NetUpdateView @[7] {
      desc="update the network view(s) (only if update_net_view is true)";
      flags=0;
      orig_prog_code=;
      network_var=$.projects[0].programs.gp[0][3].args[0]$;
      update_var=.projects[0].programs.gp[0][3].vars[1]$$;
     };
    };
    step_prog=$.projects[0].programs.gp[0][4]$;
    step_n=1;
   };
   Program @[4] {
    name="LeabraSettle";
    short_nm="Settle";
    tags="Leabra, Std";
    desc="iterates over cycles of updating until network has settled into a stable state, or output activations have exceeded a threshold";
    flags=0;
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$.projects[0].networks[0]$;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.projects[0].data.gp[0][0]$;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="cycle";
      var_type=T_Int;
      int_val=20;
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="current cycle of settling (local loop counter)";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="min_cycles";
      var_type=T_Int;
      int_val=15;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="IMPORTANT: this value is obtained from the network min_cycles and min_cycles_phase2 -- change the value on the network object, not here in this program!
sets the minimum number of cycles to settle for, regardless of network state changes, etc";
      init_from=NULL;
     };
     ProgVar @[2] {
      name="update_net_view";
      var_type=T_Bool;
      bool_val=1;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="if true, will update network views at end of settling";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     NetCounterInit @[0] {
      desc="initialize local cycle counter and corresponding counter on network";
      flags=0;
      orig_prog_code=;
      network_var=.projects[0].programs.gp[0][4].args[0]$$;
      local_ctr_var=.projects[0].programs.gp[0][4].vars[0]$$;
      counter=Network::cycle;
      update_after=0;
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     NetCounterInit @[0] {
      desc="initialize local cycle counter and corresponding counter on network";
      flags=0;
      orig_prog_code=;
      network_var=$.projects[0].programs.gp[0][4].args[0]$;
      local_ctr_var=$.projects[0].programs.gp[0][4].vars[0]$;
      counter=Network::cycle;
      update_after=0;
     };
     MethodCall @[1] {
      desc="resets input data, before getting new external inputs data from apply inputs call";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=$.projects[0].programs.gp[0][4].args[0]$;
      method=Network::Init_InputData;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     ProgramCall @[2] {
      desc="apply external input activations from the input_data table to the network
this program can be extended to do arbitrary things to generate data and apply it to network layers";
      flags=0;
      orig_prog_code=;
      prog_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=Network;
	type="LeabraNetwork*";
	name="network";
	required=1;
	def_val=;
	expr {
	 expr="network";
	};
       };
       ProgArg @[1] {
	arg_type=DataTable;
	type="DataTable*";
	name="input_data";
	required=1;
	def_val=;
	expr {
	 expr="input_data";
	};
       };
      };
      target=.projects[0].programs.gp[0][6]$$;
      targ_ld_init="*ApplyInputs*";
     };
     MethodCall @[3] {
      desc="initializes various counters at start of settling";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=$.projects[0].programs.gp[0][4].args[0]$;
      method=LeabraNetwork::Settle_Init;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     If @[4] {
      desc="get appropriate min_cycles value depending on which phase we're in";
      flags=0;
      orig_prog_code=;
      cond {
       expr="network.phase_no <= 1";
      };
      true_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       AssignExpr @[0] {
	desc="get minimum number of cycles from parameter on network (which is where you should change this value!)";
	flags=0;
	orig_prog_code=;
	result_var=.projects[0].programs.gp[0][4].vars[1]$$;
	expr {
	 expr="network.min_cycles";
	};
       };
      };
     };
     Else @[5] {
      desc=;
      flags=0;
      orig_prog_code=;
      else_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       AssignExpr @[0] {
	desc="get minimum number of cycles from parameter on network (which is where you should change this value!)";
	flags=0;
	orig_prog_code=;
	result_var=$.projects[0].programs.gp[0][4].vars[1]$;
	expr {
	 expr="network.min_cycles_phase2";
	};
       };
      };
     };
     WhileLoop @[6] {
      desc="the main loop over cycles of updating";
      flags=0;
      orig_prog_code=;
      loop_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       ProgramCall @[0] {
	desc="run the cycle program, which computes one cycle of activations";
	flags=0;
	orig_prog_code=;
	prog_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	 ProgArg @[0] {
	  arg_type=LeabraNetwork;
	  type="LeabraNetwork*";
	  name="network";
	  required=1;
	  def_val=;
	  expr {
	   expr="network";
	  };
	 };
	};
	target=.projects[0].programs.gp[0][5]$$;
	targ_ld_init="*LeabraCycle*";
       };
       NetCounterIncr @[1] {
	desc="increment cycle counter (also on network)";
	flags=0;
	orig_prog_code=;
	network_var=$.projects[0].programs.gp[0][4].args[0]$;
	local_ctr_var=$.projects[0].programs.gp[0][4].vars[0]$;
	counter=Network::cycle;
	update_after=0;
       };
       IfContinue @[2] {
	desc="avoid subsequent stopping criteria if below min_cycles";
	flags=0;
	orig_prog_code=;
	cond {
	 expr="cycle < min_cycles";
	};
       };
       IfBreak @[3] {
	desc="stopping criterion for settling: based either on maximum change in activation (maxda) or on the maximum activation value in the network getting over threshold (which ever comes first).  Set either parmeter to values that are always false (e.g., trg_max_act_stopcrit = -1) to eliminate associated source of criterion for stopping settling.";
	flags=0;
	orig_prog_code=;
	cond {
	 expr="(network.maxda < network.maxda_stopcrit) ||
 (network.trg_max_act > network.trg_max_act_stopcrit)";
	};
       };
      };
      test {
       expr="cycle < network.cycle_max";
      };
     };
     MethodCall @[7] {
      desc="perform final operations at end of settling (storing final activations, etc)";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=$.projects[0].programs.gp[0][4].args[0]$;
      method=LeabraNetwork::Settle_Final;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     MethodCall @[8] {
      desc="compute appropriate stats for each phase (MinusStats, PlusStats)";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=$.projects[0].programs.gp[0][4].args[0]$;
      method=LeabraNetwork::Compute_PhaseStats;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     If @[9] {
      desc="this stat must be called in plus phase when reward information is avail";
      flags=0;
      orig_prog_code=;
      cond {
       expr="network.phase_no == 1";
      };
      true_code {
       name=;
       el_typ=ProgCode;
       el_def=0;
       MethodCall @[0] {
	desc="get external reward information";
	flags=0;
	orig_prog_code=;
	result_var=NULL;
	obj=$.projects[0].programs.gp[0][4].args[0]$;
	method=LeabraNetwork::Compute_ExtRew;
	meth_args {
	 name=;
	 el_typ=ProgArg;
	 el_def=0;
	};
       };
      };
     };
     NetUpdateView @[10] {
      desc="update network views, if update_net_view == true";
      flags=0;
      orig_prog_code=;
      network_var=$.projects[0].programs.gp[0][4].args[0]$;
      update_var=.projects[0].programs.gp[0][4].vars[2]$$;
     };
    };
    step_prog=NULL;
    step_n=1;
   };
   Program @[5] {
    name="LeabraCycle";
    short_nm="Cycle";
    tags="Leabra, Std";
    desc="runs one cycle of leabra processing (updating net inputs and activations)";
    flags=0;
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=LeabraNetwork;
      object_val=$.projects[0].networks[0]$;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="update_net_view";
      var_type=T_Bool;
      bool_val=0;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="determines whether network views will be updated on a cycle-by-cycle basis (slow, but often quite useful for seeing how processing is proceeding)";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      desc="this does all the standard leabra processing for one cycle of activation updating";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][5].args[0]$$;
      method=LeabraNetwork::Cycle_Run;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     NetUpdateView @[1] {
      desc="update network views if update_net_view == true";
      flags=0;
      orig_prog_code=;
      network_var=$.projects[0].programs.gp[0][5].args[0]$;
      update_var=.projects[0].programs.gp[0][5].vars[0]$$;
     };
    };
    step_prog=NULL;
    step_n=1;
   };
   Program @[6] {
    name="ApplyInputs";
    short_nm="Inputs";
    tags="Network, InputData, Apply";
    desc="apply the current input data to the network as external input and target values";
    flags=NO_STOP_STEP;
    objs {
     name="objs";
     el_typ=LayerWriter;
     el_def=0;
     LayerWriter @[0] {
      name="LayerWriter_0";
      data=$.projects[0].data.gp[0][0]$;
      network=$.projects[0].networks[0]$;
      layer_data {
       name="layer_data";
       el_typ=LayerWriterEl;
       el_def=0;
       LayerWriterEl @[0] {
	col_name="Input";
	net_target=LAYER;
	layer_name="Input";
	offset {x=0: y=0: };
	use_layer_type=1;
	quiet=0;
	na_by_range=0;
	ext_flags=EXT;
	noise {name="RandomSpec_7": type=NONE: mean=0: var=0.5: par=1: };
       };
       LayerWriterEl @[1] {
	col_name="Output";
	net_target=LAYER;
	layer_name="Output";
	offset {x=0: y=0: };
	use_layer_type=1;
	quiet=0;
	na_by_range=0;
	ext_flags=TARG;
	noise {name="RandomSpec_8": type=NONE: mean=0: var=0.5: par=1: };
       };
       LayerWriterEl @[2] {
	col_name="Name";
	net_target=TRIAL_NAME;
	layer_name="Name";
	offset {x=0: y=0: };
	use_layer_type=1;
	quiet=0;
	na_by_range=0;
	ext_flags=0;
	noise {name="RandomSpec_9": type=NONE: mean=0: var=0.5: par=1: };
       };
       LayerWriterEl @[3] {
	col_name="Group";
	net_target=GROUP_NAME;
	layer_name="Group";
	offset {x=0: y=0: };
	use_layer_type=1;
	quiet=0;
	na_by_range=0;
	ext_flags=0;
	noise {name="noise": type=NONE: mean=0: var=0.5: par=1: };
       };
      };
     };
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=Network;
      object_val=$.projects[0].networks[0]$;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="network to apply inputs to -- typically set by calling program";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="input_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.projects[0].data.gp[0][0]$;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="input datatable containing input/output patterns";
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="LayerWriter_0";
      var_type=T_Object;
      object_type=LayerWriter;
      object_val=.projects[0].programs.gp[0][6].objs[0]$$;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="this is a pointer to the LayerWriter object in objs -- edit that object to determine how information is presented to the network";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      desc="sets the datatable and network for the layer writer, so it knows what to write to";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][6].vars[0]$$;
      method=LayerWriter::SetDataNetwork;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="db";
	required=1;
	def_val=;
	expr {
	 expr="input_data";
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=1;
	def_val=;
	expr {
	 expr="network";
	};
       };
      };
     };
     MethodCall @[1] {
      desc="configure to fit the network and input data -- this may cause spurious warning messages and problems in some cases so just turn it OFF if necessary";
      flags=WARNING;
      orig_prog_code=;
      result_var=NULL;
      obj=$.projects[0].programs.gp[0][6].vars[0]$;
      method=LayerWriter::AutoConfig;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="remove_unused";
	required=0;
	def_val="true";
	expr {
	 expr=;
	};
       };
      };
     };
     MethodCall @[2] {
      desc="check the configuration of the layer writer -- will emit warnings and errors for missing or misconfigured items";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=$.projects[0].programs.gp[0][6].vars[0]$;
      method=taList_impl::CheckConfig;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	expr {
	 expr="false";
	};
       };
      };
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      desc="sets the datatable and network for the layer writer, so it knows what to write to";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=$.projects[0].programs.gp[0][6].vars[0]$;
      method=LayerWriter::SetDataNetwork;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="db";
	required=1;
	def_val=;
	expr {
	 expr="input_data";
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=1;
	def_val=;
	expr {
	 expr="network";
	};
       };
      };
     };
     MethodCall @[1] {
      desc="apply inputs to the network!  layer writer has all the key specs";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=$.projects[0].programs.gp[0][6].vars[0]$;
      method=LayerWriter::ApplyInputData;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
    };
    step_prog=NULL;
    step_n=1;
   };
   Program @[7] {
    name="LeabraTrialMonitor";
    short_nm="TrialMon";
    tags="Leabra, Std, Monitor";
    desc="monitor trial-level data from the network (and potentially other sources) -- stores results in datatable (TrialOutputData typically) that can be used for graph/grid views and further analysis ";
    flags=NO_STOP_STEP;
    objs {
     name="objs";
     el_typ=NetMonitor;
     el_def=0;
     NetMonitor @[0] {
      name="trial_netmon";
      items {
       name="items";
       el_typ=NetMonItem;
       el_def=0;
       NetMonItem @[0] {
	name="batch";
	computed=0;
	object_type=LeabraNetwork;
	object=$.projects[0].networks[0]$;
	variable="batch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[1] {
	name="epoch";
	computed=0;
	object_type=LeabraNetwork;
	object=$.projects[0].networks[0]$;
	variable="epoch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[2] {
	name="trial";
	computed=0;
	object_type=LeabraNetwork;
	object=$.projects[0].networks[0]$;
	variable="trial";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[3] {
	name="trial_name";
	computed=0;
	object_type=LeabraNetwork;
	object=$.projects[0].networks[0]$;
	variable="trial_name";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[4] {
	name="group_name";
	computed=0;
	object_type=LeabraNetwork;
	object=$.projects[0].networks[0]$;
	variable="group_name";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[5] {
	name="phase_no";
	computed=0;
	object_type=LeabraNetwork;
	object=$.projects[0].networks[0]$;
	variable="phase_no";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[6] {
	name="minus_cycles";
	computed=0;
	object_type=LeabraNetwork;
	object=$.projects[0].networks[0]$;
	variable="minus_cycles";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[7] {
	name="sse";
	computed=0;
	object_type=LeabraNetwork;
	object=$.projects[0].networks[0]$;
	variable="sse";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[8] {
	name="ext_rew";
	computed=0;
	object_type=LeabraNetwork;
	object=$.projects[0].networks[0]$;
	variable="ext_rew";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[9] {
	name="act_m";
	computed=0;
	object_type=LeabraNetwork;
	object=$.projects[0].networks[0]$;
	variable="act_m";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 2 0=0;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
      };
      network=$.projects[0].networks[0]$;
      data=$.projects[0].data.gp[1][0]$;
      rmv_orphan_cols=1;
     };
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=Network;
      object_val=$.projects[0].networks[0]$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="network to record data from";
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="trial_mon_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.projects[0].data.gp[1][0]$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="data table to record trial-level data to (this program writes new data to this table!)";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="trial_netmon";
      var_type=T_Object;
      object_type=NetMonitor;
      object_val=.projects[0].programs.gp[0][7].objs[0]$$;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="pointer to the NetMonitor object in objs secton of this program that contains configuration for what to record and where to get it";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      desc="set the network and datatable for the NetMonitor";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][7].vars[1]$$;
      method=NetMonitor::SetDataNetwork;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="dt";
	required=1;
	def_val=;
	expr {
	 expr="trial_mon_data";
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=1;
	def_val=;
	expr {
	 expr="network";
	};
       };
      };
     };
     MethodCall @[1] {
      desc="check the configuration of the network monitor -- will emit warnings and errors for misconfigurations";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=$.projects[0].programs.gp[0][7].vars[1]$;
      method=taBase::CheckConfig;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	expr {
	 expr="false";
	};
       };
      };
     };
     MethodCall @[2] {
      desc="update the monitor items and data schema based on current settings of the NetMonitor object";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=$.projects[0].programs.gp[0][7].vars[1]$;
      method=NetMonitor::UpdateMonitors;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_first";
	required=0;
	def_val="false";
	expr {
	 expr="true";
	};
       };
      };
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      desc="add a new blank row to the data";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][7].vars[0]$$;
      method=DataTable::AddBlankRow;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     MethodCall @[1] {
      desc="get the new monitor data from the network and other sources -- this does the main work";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=$.projects[0].programs.gp[0][7].vars[1]$;
      method=NetMonitor::GetMonVals;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     MethodCall @[2] {
      desc="update views and other things after writing new data to monitor data table";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=$.projects[0].programs.gp[0][7].vars[0]$;
      method=DataTable::WriteClose;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     MethodCall @[3] {
      desc="only functional for dmem projects: synchronizes trial data across processes so that all distributed memory processors have the same trial-level data, despite having run only a subset of them each";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][7].args[0]$$;
      method=Network::DMem_ShareTrialData;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="dt";
	required=1;
	def_val=;
	expr {
	 expr="trial_mon_data";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="n_rows";
	required=0;
	def_val="1";
	expr {
	 expr="1";
	};
       };
      };
     };
    };
    step_prog=$.projects[0].programs.gp[0][7]$;
    step_n=1;
   };
   Program @[8] {
    name="LeabraEpochMonitor";
    short_nm="EpcMon";
    tags="Leabra, Std, Monitor";
    desc="monitor epoch-level data from the network to a datatable (EpochOutputData typically) for use in graphing and viewing and further analysis";
    flags=NO_STOP_STEP;
    objs {
     name="objs";
     el_typ=NetMonitor;
     el_def=0;
     NetMonitor @[0] {
      name="epoch_netmon";
      items {
       name="items";
       el_typ=NetMonItem;
       el_def=0;
       NetMonItem @[0] {
	name="batch";
	computed=0;
	object_type=LeabraNetwork;
	object=$.projects[0].networks[0]$;
	variable="batch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[1] {
	name="epoch";
	computed=0;
	object_type=LeabraNetwork;
	object=$.projects[0].networks[0]$;
	variable="epoch";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[2] {
	name="avg_sse";
	computed=0;
	object_type=LeabraNetwork;
	object=$.projects[0].networks[0]$;
	variable="avg_sse";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[3] {
	name="cnt_err";
	computed=0;
	object_type=LeabraNetwork;
	object=$.projects[0].networks[0]$;
	variable="cnt_err";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[4] {
	name="avg_ext_rew";
	computed=0;
	object_type=LeabraNetwork;
	object=$.projects[0].networks[0]$;
	variable="avg_ext_rew";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[5] {
	name="avg_cycles";
	computed=0;
	object_type=LeabraNetwork;
	object=$.projects[0].networks[0]$;
	variable="avg_cycles";
	var_label=;
	name_style=AUTO_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[6] {
	name="epoch_time_tot";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
       NetMonItem @[7] {
	name="epoch_time_usr";
	computed=1;
	object_type=NULL;
	object=NULL;
	variable="act";
	var_label=;
	name_style=MY_NAME;
	max_name_len=6;
	val_type=VT_FLOAT;
	matrix=0;
	matrix_geom{ 	};
	data_agg=0;
	data_src=NULL;
	agg_col {
	 col_name=;
	};
	agg {name="agg": op=NONE: rel={name="rel": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	select_rows=0;
	select_spec {
	 col_name=;
	 name="_EQUAL_";
	 on=1;
	 rel=EQUAL;
	 use_var=0;
	 cmp 0 1;
	 var=NULL;
	 enable_var=NULL;
	};
	pre_proc_1 {name="pre_proc_1": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_2 {name="pre_proc_2": opr=NONE: arg=0: lw=-1: hi=1: };
	pre_proc_3 {name="pre_proc_3": opr=NONE: arg=0: lw=-1: hi=1: };
       };
      };
      network=$.projects[0].networks[0]$;
      data=.projects[0].data.gp[1][1]$$;
      rmv_orphan_cols=1;
     };
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=Network;
      object_val=$.projects[0].networks[0]$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="network to get data from";
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="epoch_mon_data";
      var_type=T_Object;
      object_type=DataTable;
      object_val=$.projects[0].data.gp[1][1]$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="data table to write the epoch data to";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="epoch_netmon";
      var_type=T_Object;
      object_type=NetMonitor;
      object_val=.projects[0].programs.gp[0][8].objs[0]$$;
      objs_ptr=1;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="network monitor object that contains full specs for what to record and where to get it";
      init_from=NULL;
     };
     ProgVar @[2] {
      name="epoch_timer";
      var_type=T_Object;
      object_type=TimeUsed;
      object_val=$.projects[0].networks[0].epoch_time$;
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="pointer to the network's epoch-level timer, to record how long it took to process an epoch";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
     AssignExpr @[0] {
      desc="get the epoch timer from current network";
      flags=0;
      orig_prog_code=;
      result_var=.projects[0].programs.gp[0][8].vars[2]$$;
      expr {
       expr="network.epoch_time";
      };
     };
     MethodCall @[1] {
      desc="set data and network on NetMonitor object";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][8].vars[1]$$;
      method=NetMonitor::SetDataNetwork;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=DataTable_ptr;
	type="DataTable*";
	name="dt";
	required=1;
	def_val=;
	expr {
	 expr="epoch_mon_data";
	};
       };
       ProgArg @[1] {
	arg_type=Network_ptr;
	type="Network*";
	name="net";
	required=1;
	def_val=;
	expr {
	 expr="network";
	};
       };
      };
     };
     MethodCall @[2] {
      desc="check configuration and emit errors/warnings for problems";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=$.projects[0].programs.gp[0][8].vars[1]$;
      method=taBase::CheckConfig;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	expr {
	 expr="false";
	};
       };
      };
     };
     MethodCall @[3] {
      desc="update the monitor items and data schema based on current settings of NetMonitor";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=$.projects[0].programs.gp[0][8].vars[1]$;
      method=NetMonitor::UpdateMonitors;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=bool;
	type="bool";
	name="reset_first";
	required=0;
	def_val="false";
	expr {
	 expr="true";
	};
       };
      };
     };
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     MethodCall @[0] {
      desc="add a new blank row to the data";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=.projects[0].programs.gp[0][8].vars[0]$$;
      method=DataTable::AddBlankRow;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     MethodCall @[1] {
      desc="get the new monitor data and stor it into the data table -- this does the main job here";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=$.projects[0].programs.gp[0][8].vars[1]$;
      method=NetMonitor::GetMonVals;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     AssignExpr @[2] {
      desc="get the epoch timer from current network";
      flags=0;
      orig_prog_code=;
      result_var=$.projects[0].programs.gp[0][8].vars[2]$;
      expr {
       expr="network.epoch_time";
      };
     };
     MethodCall @[3] {
      desc="set the total time to compute the epoch (epoch_time_tot -- wall clock time) to time used data from network timer";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=$.projects[0].programs.gp[0][8].vars[0]$;
      method=DataTable::SetValColName;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="Variant&";
	name="val";
	required=1;
	def_val=;
	expr {
	 expr="epoch_timer.used.GetTotSecs()";
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="taString&";
	name="col_name";
	required=1;
	def_val="\"\"";
	expr {
	 expr="\"epoch_time_tot\"";
	};
       };
       ProgArg @[2] {
	arg_type=int;
	type="int";
	name="row";
	required=1;
	def_val=;
	expr {
	 expr="-1";
	};
       };
       ProgArg @[3] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	expr {
	 expr=;
	};
       };
      };
     };
     MethodCall @[4] {
      desc="set the user process time (cpu time for this process, epoch_time_usr) to time used data from network timer";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=$.projects[0].programs.gp[0][8].vars[0]$;
      method=DataTable::SetValColName;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_Variant_ref;
	type="Variant&";
	name="val";
	required=1;
	def_val=;
	expr {
	 expr="epoch_timer.used.GetUsrSecs()";
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="taString&";
	name="col_name";
	required=1;
	def_val="\"\"";
	expr {
	 expr="\"epoch_time_usr\"";
	};
       };
       ProgArg @[2] {
	arg_type=int;
	type="int";
	name="row";
	required=1;
	def_val=;
	expr {
	 expr="-1";
	};
       };
       ProgArg @[3] {
	arg_type=bool;
	type="bool";
	name="quiet";
	required=0;
	def_val="false";
	expr {
	 expr=;
	};
       };
      };
     };
     MethodCall @[5] {
      desc="update after writing new data to monitor data table";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=$.projects[0].programs.gp[0][8].vars[0]$;
      method=DataTable::WriteClose;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
      };
     };
     Comment @[6] {
      desc="NOTE: if doing a TestEpoch and wanting to include test results in this train epoch log, then see these instructions:
http://grey.colorado.edu/emergent/index.php/Test_Programs
quick summary here:
* Add computed, data_agg, op = LAST items to epoch_netmon to grab from the EpochTestOutputData table.
* duplicate this program, call the new one LeabraEpochMonitor_postest, remove all netmon items for training, leaving only test,
  turn off rmv_orphan_cols flag, and set arg for UpdateMonitors in init_code to false
* in original LeabraEpochMonitor, click OFF flag for WriteClose() line
* in LeabraEpoch add call to LeabraEpochTest, then _posttest after the first LeabraEpochMonitor call.
This will ensure that training data is monitored first, right after the training epoch, and then the test epoch is run,
and the testing data is updated.  The first epoch monitor should have all the items, so that it formats the data table correctly.
 
";
      flags=0;
      orig_prog_code=;
     };
    };
    step_prog=$.projects[0].programs.gp[0][8]$;
    step_n=1;
   };
   Program @[9] {
    name="SaveWeights";
    short_nm="SavWts";
    tags="Network, Weights";
    desc="save network's current weight values to file using WriteWeights function, with file name based on project name + batch + epoch values";
    flags=NO_STOP_STEP;
    objs {
     name="objs";
     el_typ=taNBase;
     el_def=0;
    };
    types {
     name="types";
     el_typ=DynEnumType;
     el_def=0;
    };
    args {
     name="args";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="network";
      var_type=T_Object;
      object_type=Network;
      object_val=$.projects[0].networks[0]$;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc=;
      init_from=NULL;
     };
    };
    vars {
     name="vars";
     el_typ=ProgVar;
     el_def=0;
     ProgVar @[0] {
      name="tag";
      var_type=T_String;
      string_val="_gui";
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="user-provided tag (startup script will set this!)";
      init_from=NULL;
     };
     ProgVar @[1] {
      name="wts_subdir";
      var_type=T_String;
      string_val=;
      objs_ptr=0;
      flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="user-provided subdirectory to save weights in";
      init_from=NULL;
     };
     ProgVar @[2] {
      name="fname";
      var_type=T_String;
      string_val="/Users/oreilly/emergent/test/leabra_std.00_0010.wts.gz";
      objs_ptr=0;
      flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="final generated file name -- do not edit!";
      init_from=NULL;
     };
     ProgVar @[3] {
      name="epoch_str";
      var_type=T_String;
      string_val="0010";
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="string rep of epoch with leading zeros";
      init_from=NULL;
     };
     ProgVar @[4] {
      name="batch_str";
      var_type=T_String;
      string_val="00";
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="string rep of batch with leading zeros";
      init_from=NULL;
     };
     ProgVar @[5] {
      name="final_tag";
      var_type=T_String;
      string_val=".00_0010";
      objs_ptr=0;
      flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
      reference=0;
      desc="batch + epoch";
      init_from=NULL;
     };
    };
    functions {
     name="functions";
     el_typ=Function;
     el_def=0;
    };
    init_code {
     name="init_code";
     el_typ=ProgCode;
     el_def=0;
    };
    prog_code {
     name="prog_code";
     el_typ=ProgCode;
     el_def=0;
     IfReturn @[0] {
      desc="do not save if not the first dmem process (only relevant for dmem = distributed memory processing)";
      flags=0;
      orig_prog_code=;
      cond {
       expr="taMisc::dmem_proc > 0";
      };
     };
     MiscCall @[1] {
      desc="get current batch counter for file name, with leading zeros to length 3";
      flags=0;
      orig_prog_code=;
      result_var=.projects[0].programs.gp[0][9].vars[4]$$;
      object_type=taMisc;
      method=taMisc::LeadingZeros;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=int;
	type="int";
	name="num";
	required=1;
	def_val=;
	expr {
	 expr="network.batch";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="len";
	required=1;
	def_val=;
	expr {
	 expr="2";
	};
       };
      };
     };
     MiscCall @[2] {
      desc="get current epoch counter with leading zeros to length 4";
      flags=0;
      orig_prog_code=;
      result_var=.projects[0].programs.gp[0][9].vars[3]$$;
      object_type=taMisc;
      method=taMisc::LeadingZeros;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=int;
	type="int";
	name="num";
	required=1;
	def_val=;
	expr {
	 expr="network.epoch";
	};
       };
       ProgArg @[1] {
	arg_type=int;
	type="int";
	name="len";
	required=1;
	def_val=;
	expr {
	 expr="4";
	};
       };
      };
     };
     AssignExpr @[3] {
      desc="string 'tag' to identify the batch, epoch, and other user id info for the weights";
      flags=0;
      orig_prog_code=;
      result_var=.projects[0].programs.gp[0][9].vars[5]$$;
      expr {
       expr="tag + \".\" + batch_str + \"_\" + epoch_str";
      };
     };
     MethodCall @[4] {
      desc="get a file name based on the project's current file name, for saving the weights";
      flags=0;
      orig_prog_code=;
      result_var=.projects[0].programs.gp[0][9].vars[2]$$;
      obj=.projects[0].programs.gp[0][9].args[0]$$;
      method=taBase::GetFileNameFmProject;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_taString_ref;
	type="taString&";
	name="ext";
	required=1;
	def_val=;
	expr {
	 expr="\".wts.gz\"";
	};
       };
       ProgArg @[1] {
	arg_type=const_taString_ref;
	type="taString&";
	name="tag";
	required=0;
	def_val="\"\"";
	expr {
	 expr="final_tag";
	};
       };
       ProgArg @[2] {
	arg_type=const_taString_ref;
	type="taString&";
	name="subdir";
	required=0;
	def_val="\"\"";
	expr {
	 expr="wts_subdir";
	};
       };
       ProgArg @[3] {
	arg_type=bool;
	type="bool";
	name="dmem_proc_no";
	required=0;
	def_val="false";
	expr {
	 expr="false";
	};
       };
      };
     };
     MethodCall @[5] {
      desc="save the weights to that file name";
      flags=0;
      orig_prog_code=;
      result_var=NULL;
      obj=$.projects[0].programs.gp[0][9].args[0]$;
      method=Network::SaveWeights;
      meth_args {
       name=;
       el_typ=ProgArg;
       el_def=0;
       ProgArg @[0] {
	arg_type=const_taString_ref;
	type="taString&";
	name="fname";
	required=0;
	def_val="\"\"";
	expr {
	 expr="fname";
	};
       };
       ProgArg @[1] {
	arg_type=Network::WtSaveFormat;
	type="Network::WtSaveFormat";
	name="fmt";
	required=0;
	def_val="Network::NET_FMT";
	expr {
	 expr="Network::NET_FMT";
	};
       };
      };
     };
    };
    step_prog=NULL;
    step_n=1;
   };
  };
 };
 viewers {
  name="viewers";
  el_typ=MainWindowViewer;
  el_def=0;
  MainWindowViewer @[0] {
   UserDataItem_List @*(.user_data_) {
    name="UserDataItem_List_46";
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @[0] {
     name="view_win_lft";
     value 6 0=-0.2367187440395355;
     val_type_fixed=0;
    };
    UserDataItem @[1] {
     name="view_win_top";
     value 6 0=-1.552393317222595;
     val_type_fixed=0;
    };
    UserDataItem @[2] {
     name="view_win_wd";
     value 6 0=1.245312452316284;
     val_type_fixed=0;
    };
    UserDataItem @[3] {
     name="view_win_ht";
     value 6 0=1.482535600662231;
     val_type_fixed=0;
    };
    UserDataItem @[4] {
     name="view_win_iconified";
     value 1 0=0;
     val_type_fixed=0;
    };
    UserDataItem @[5] {
     name="view_splitter_state";
     value 9 0="AAAA/wAAAAEAAAADAAABJwAAAjIAAAMDAQAAAAcBAAAAAQE=";
     val_type_fixed=0;
    };
   };
   name="Browser2";
   m_data=.projects[0]$$;
   visible=1;
   win_name=".projects[\"StatLearn_3_with_end_decision\"] - StatLearn_3_with_end_decision_autosave.proj";
   m_is_root=0;
   m_is_viewer_xor_browser=0;
   m_is_proj_viewer=1;
   m_is_dialog=0;
   toolbars {
    name="toolbars";
    el_typ=ToolBar;
    el_def=0;
    ToolBar @[0] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_47";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_win_visible";
       value 1 0=1;
       val_type_fixed=0;
      };
     };
     name="Application";
     m_data=NULL;
     visible=0;
     lft=0;
     top=0;
     o=Horizontal;
    };
   };
   frames {
    name="frames";
    el_typ=BrowseViewerTaBase;
    el_def=0;
    BrowseViewerTaBase @[0] {
     name="Tree";
     m_data=NULL;
     visible=1;
     root_typ=LeabraProject;
     root_md=NULL;
     m_root=$.projects[0]$;
    };
    PanelViewer @[1] {
     name="Panels";
     m_data=NULL;
     visible=1;
    };
    T3PanelViewer @[2] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_48";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_panel_selected";
       value 1 0=1;
       val_type_fixed=0;
      };
     };
     name="T3Frames";
     m_data=NULL;
     visible=1;
     panels {
      name="panels";
      el_typ=T3Panel;
      el_def=0;
      T3Panel @[0] {
       name="Network_1";
       m_data=NULL;
       visible=1;
       root_view {
	name="root_view";
	m_data=NULL;
	m_transform=NULL;
	children {
	 name="children";
	 el_typ=T3DataViewMain;
	 el_def=0;
	 NetView @[0] {
	  name="Network_1_View";
	  m_data=$.projects[0].networks[0]$;
taTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=1: y=0: z=0: rot=0.35: }: translate={x=0: y=0: z=0: }: };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=1: y=0: z=0: rot=0.35: }: translate={x=0: y=0: z=0: }: };
	  annotations {
	   name="annotations";
	   el_typ=T3Annotation;
	   el_def=0;
	  };
	  annote_children {
	   name="annote_children";
	   el_typ=T3DataView;
	   el_def=0;
	  };
	  display=1;
	  lay_layout=THREE_D;
	  lay_mv=1;
	  net_text=1;
	  show_iconified=0;
	  net_text_xform {scale={x=0.5: y=0.5: z=0.5: }: rotate={x=1: y=0: z=0: rot=1.570796: }: translate={x=1: y=0: z=-0.5: }: };
	  net_text_rot=-90;
	  cur_unit_vals{ act;	  };
	  unit_src_path=".layers[3].units[0]";
	  con_type=ANY_CON;
	  hist_idx=0;
	  hist_save=1;
	  hist_max=100;
	  hist_ff=5;
	  unit_disp_mode=UDM_BLOCK;
	  unit_text_disp=UTD_NONE;
	  max_size {x=4: y=4: z=4.2: };
	  max_size2d {x=4: y=25: z=1: };
	  eff_max_size {x=4: y=4: z=4.2: };
	  font_sizes {
	   net_name=0.05;
	   net_vals=0.05;
	   layer=0.04;
	   layer_min=0.01;
	   layer_vals=0.03;
	   prjn=0.01;
	   unit=0.02;
	   un_nm_len=3;
	  };
	  view_params {
	   xy_square=0;
	   unit_spacing=0.05;
	   prjn_disp=L_R_B;
	   prjn_name=0;
	   prjn_width=0.002;
	   prjn_trans=0.5;
	   lay_trans=0.5;
	   unit_trans=0.6;
	   laygp_width=1;
	   show_laygp=1;
	  };
	  wt_line_disp=0;
	  wt_line_width=4;
	  wt_line_thr=0.8;
	  wt_line_swt=0;
	  wt_prjn_k_un=4;
	  wt_prjn_k_gp=1;
	  wt_prjn_lay=NULL;
	  snap_bord_disp=0;
	  snap_bord_width=4;
	  scale {
	   name="scale";
	   chunks=133;
	   min=-1;
	   max=1;
	   range=1;
	   zero=0;
	   spec=.colorspecs[0]$$<ColorScaleSpec,C_ColdHot>;
	   auto_scale=0;
	  };
	  scale_ranges {
	   name="scale_ranges";
	   el_typ=ScaleRange;
	   el_def=0;
	   ScaleRange @[0] {
	    var_name="act";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[1] {
	    var_name="r.wt";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[2] {
	    var_name="net";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[3] {
	    var_name="s.wt";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[4] {
	    var_name="r.pdw";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[5] {
	    var_name="s.pdw";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[6] {
	    var_name="bias.wt";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[7] {
	    var_name="deep5b";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[8] {
	    var_name="act_p";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[9] {
	    var_name="act_m";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[10] {
	    var_name="act_nd";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[11] {
	    var_name="act_eq";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[12] {
	    var_name="targ";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	   ScaleRange @[13] {
	    var_name="ext";
	    auto_scale=0;
	    min=-1;
	    max=1;
	   };
	  };
	  lay_disp_modes{ Input=-1;Hidden=-1;Output=-1;EndOfWord=-1;Copy_of_Target=-1;	  };
	 };
	 GraphTableView @[1] {
	  name="TrialOutputData_Graph_2";
	  m_data=$.projects[0].data.gp[1][0]$;
taTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1.061195: y=1.829047: z=-1.035631e-6: }: };
	  children {
	   name="T3DataView_List_0";
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @[0] {
	    name="batch";
	    m_data=.projects[0].data.gp[1][0].data[0]$$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[1] {
	    name="epoch";
	    m_data=.projects[0].data.gp[1][0].data[1]$$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[2] {
	    name="trial";
	    m_data=.projects[0].data.gp[1][0].data[2]$$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[3] {
	    name="trial_name";
	    m_data=.projects[0].data.gp[1][0].data[3]$$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[4] {
	    name="group_name";
	    m_data=.projects[0].data.gp[1][0].data[4]$$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[5] {
	    name="phase_no";
	    m_data=.projects[0].data.gp[1][0].data[5]$$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[6] {
	    name="minus_cycles";
	    m_data=.projects[0].data.gp[1][0].data[6]$$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[7] {
	    name="sse";
	    m_data=.projects[0].data.gp[1][0].data[7]$$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[8] {
	    name="ext_rew";
	    m_data=.projects[0].data.gp[1][0].data[8]$$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[9] {
	    name="Input_act_m";
	    m_data=.projects[0].data.gp[1][0].data[9]$$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[10] {
	    name="Hidden_act_m";
	    m_data=.projects[0].data.gp[1][0].data[10]$$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[11] {
	    name="Output_act_m";
	    m_data=.projects[0].data.gp[1][0].data[11]$$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[12] {
	    name="EndOfW_act_m";
	    m_data=.projects[0].data.gp[1][0].data[12]$$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[13] {
	    name="Copy_o_act_m";
	    m_data=.projects[0].data.gp[1][0].data[13]$$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1.061195: y=1.829047: z=-1.035631e-6: }: };
	  annotations {
	   name="T3Annotation_List_15";
	   el_typ=T3Annotation;
	   el_def=0;
	  };
	  annote_children {
	   name="T3DataView_List_0";
	   el_typ=T3DataView;
	   el_def=0;
	  };
	  view_rows=10000;
	  view_range {min=0: max=169: };
	  display_on=1;
	  manip_ctrl_on=1;
	  graph_type=XY;
	  plot_style=LINE;
	  negative_draw=0;
	  negative_draw_z=1;
	  line_width=2;
	  point_size=0.01;
	  point_spacing=1;
	  bar_space=0.2;
	  bar_depth=0.01;
	  label_spacing=-1;
	  width=1;
	  depth=1;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  x_axis {
	   name="GraphAxisView_21";
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=169: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=1;
	  };
	  z_axis {
	   name="GraphAxisView_22";
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Z;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  tot_plots=16;
	  plots {
	   name="GraphPlotView_List_0";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @[0] {
	    name="TrialOutputData_Graph_2_plot_1";
	    m_data=NULL;
	    m_transform=NULL;
	    on=1;
	    axis=Y;
	    col_name="sse";
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=7.74548: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[1] {
	    name="TrialOutputData_Graph_2_plot_2";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="red": r=1: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=SQUARE;
	    alt_y=0;
	   };
	   GraphPlotView @[2] {
	    name="TrialOutputData_Graph_2_plot_3";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=DIAMOND;
	    alt_y=0;
	   };
	   GraphPlotView @[3] {
	    name="TrialOutputData_Graph_2_plot_4";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_UP;
	    alt_y=0;
	   };
	   GraphPlotView @[4] {
	    name="TrialOutputData_Graph_2_plot_5";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_DN;
	    alt_y=0;
	   };
	   GraphPlotView @[5] {
	    name="TrialOutputData_Graph_2_plot_6";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=PLUS;
	    alt_y=0;
	   };
	   GraphPlotView @[6] {
	    name="TrialOutputData_Graph_2_plot_7";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="brown": r=0.6470588: g=0.1647059: b=0.1647059: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CROSS;
	    alt_y=0;
	   };
	   GraphPlotView @[7] {
	    name="TrialOutputData_Graph_2_plot_8";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="chartreuse": r=0.4980392: g=1: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=STAR;
	    alt_y=0;
	   };
	   GraphPlotView @[8] {
	    name="TrialOutputData_Graph_2_plot_9";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[9] {
	    name="TrialOutputData_Graph_2_plot_10";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="red": r=1: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=SQUARE;
	    alt_y=0;
	   };
	   GraphPlotView @[10] {
	    name="TrialOutputData_Graph_2_plot_11";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=DIAMOND;
	    alt_y=0;
	   };
	   GraphPlotView @[11] {
	    name="TrialOutputData_Graph_2_plot_12";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=TRIANGLE_UP;
	    alt_y=0;
	   };
	   GraphPlotView @[12] {
	    name="TrialOutputData_Graph_2_plot_13";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=TRIANGLE_DN;
	    alt_y=0;
	   };
	   GraphPlotView @[13] {
	    name="TrialOutputData_Graph_2_plot_14";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=PLUS;
	    alt_y=0;
	   };
	   GraphPlotView @[14] {
	    name="TrialOutputData_Graph_2_plot_15";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="brown": r=0.6470588: g=0.1647059: b=0.1647059: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=CROSS;
	    alt_y=0;
	   };
	   GraphPlotView @[15] {
	    name="TrialOutputData_Graph_2_plot_16";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="chartreuse": r=0.4980392: g=1: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=STAR;
	    alt_y=0;
	   };
	  };
	  errbars {
	   name="GraphPlotView_List_0";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @[0] {
	    name="TrialOutputData_Graph_2_err_1";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[1] {
	    name="TrialOutputData_Graph_2_err_2";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[2] {
	    name="TrialOutputData_Graph_2_err_3";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[3] {
	    name="TrialOutputData_Graph_2_err_4";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[4] {
	    name="TrialOutputData_Graph_2_err_5";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[5] {
	    name="TrialOutputData_Graph_2_err_6";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[6] {
	    name="TrialOutputData_Graph_2_err_7";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[7] {
	    name="TrialOutputData_Graph_2_err_8";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[8] {
	    name="TrialOutputData_Graph_2_err_9";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[9] {
	    name="TrialOutputData_Graph_2_err_10";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[10] {
	    name="TrialOutputData_Graph_2_err_11";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[11] {
	    name="TrialOutputData_Graph_2_err_12";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[12] {
	    name="TrialOutputData_Graph_2_err_13";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[13] {
	    name="TrialOutputData_Graph_2_err_14";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[14] {
	    name="TrialOutputData_Graph_2_err_15";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[15] {
	    name="TrialOutputData_Graph_2_err_16";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_mode=VALUE_COLOR;
	  color_axis {
	   name="GraphAxisView_23";
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   name="ColorScale_0";
	   chunks=133;
	   min=-1;
	   max=1;
	   range=0;
	   zero=0;
	   spec=$.colorspecs[0]$;
	   auto_scale=0;
	  };
	  raster_axis {
	   name="GraphAxisView_24";
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       bg_color {r=1: g=1: b=1: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       stereo_view=STEREO_NONE;
       saved_views {
	name="saved_views";
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @[0] {
	 name="Vw_0";
	 view_saved=1;
	 pos {x=0.7475222: y=0.528263: z=1.757033: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=2.101193;
	};
	T3SavedView @[1] {
	 name="Vw_1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[2] {
	 name="Vw_2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[3] {
	 name="Vw_3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[4] {
	 name="Vw_4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[5] {
	 name="Vw_5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[6] {
	 name="Vw_6";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[7] {
	 name="Vw_7";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[8] {
	 name="Vw_8";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[9] {
	 name="Vw_9";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
      T3Panel @[1] {
       name="StdInputData_4";
       m_data=NULL;
       visible=1;
       root_view {
	name="root_view";
	m_data=NULL;
	m_transform=NULL;
	children {
	 name="children";
	 el_typ=T3DataViewMain;
	 el_def=0;
	 GridTableView @[0] {
	  name="StdInputData_Grid";
	  m_data=$.projects[0].data.gp[0][0]$;
taTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  children {
	   name="children";
	   el_typ=GridColView;
	   el_def=0;
	   GridColView @[0] {
	    name="Group";
	    m_data=.projects[0].data.gp[0][0].data[0]$$;
	    m_transform=NULL;
	    visible=1;
	    text_width=16;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[1] {
	    name="Name";
	    m_data=.projects[0].data.gp[0][0].data[1]$$;
	    m_transform=NULL;
	    visible=1;
	    text_width=16;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[2] {
	    name="Input";
	    m_data=.projects[0].data.gp[0][0].data[2]$$;
	    m_transform=NULL;
	    visible=1;
	    text_width=3;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[3] {
	    name="Output";
	    m_data=.projects[0].data.gp[0][0].data[3]$$;
	    m_transform=NULL;
	    visible=1;
	    text_width=3;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  annotations {
	   name="annotations";
	   el_typ=T3Annotation;
	   el_def=0;
	  };
	  annote_children {
	   name="annote_children";
	   el_typ=T3DataView;
	   el_def=0;
	  };
	  view_rows=5;
	  view_range {min=0: max=-1: };
	  display_on=1;
	  manip_ctrl_on=1;
	  col_n=5;
	  col_range {min=0: max=3: };
	  width=1;
	  grid_on=1;
	  header_on=1;
	  row_num_on=0;
	  two_d_font=0;
	  two_d_font_scale=350;
	  mat_val_text=0;
	  colorscale {
	   name="colorscale";
	   chunks=133;
	   min=-1;
	   max=1;
	   range=1;
	   zero=0;
	   spec=$.colorspecs[0]$;
	   auto_scale=0;
	  };
	  grid_margin=0.01;
	  grid_line_size=0.002;
	  row_num_width=4;
	  mat_block_spc=0.1;
	  mat_block_height=0;
	  mat_rot=0;
	  mat_trans=0.6;
	  mat_size_range {min=4: max=16: };
	  text_size_range {min=0.02: max=0.05: };
	  click_vals=0;
	  lmb_val=1;
	  mmb_val=0;
	 };
	 GridTableView @[1] {
	  name="UnitNames_Grid";
	  m_data=$.projects[0].data.gp[0][1]$;
taTransform @*(.m_transform) {scale={x=0.33: y=0.33: z=0.33: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=1.13: z=0: }: };
	  children {
	   name="children";
	   el_typ=GridColView;
	   el_def=0;
	   GridColView @[0] {
	    name="Input";
	    m_data=.projects[0].data.gp[0][1].data[0]$$;
	    m_transform=NULL;
	    visible=1;
	    text_width=3;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	   GridColView @[1] {
	    name="Output";
	    m_data=.projects[0].data.gp[0][1].data[1]$$;
	    m_transform=NULL;
	    visible=1;
	    text_width=3;
	    scale_on=1;
	    mat_layout=BOT_ZERO;
	    mat_image=0;
	    mat_odd_vert=1;
	   };
	  };
	  main_xform {scale={x=0.33: y=0.33: z=0.33: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=1.13: z=0: }: };
	  annotations {
	   name="annotations";
	   el_typ=T3Annotation;
	   el_def=0;
	  };
	  annote_children {
	   name="annote_children";
	   el_typ=T3DataView;
	   el_def=0;
	  };
	  view_rows=1;
	  view_range {min=0: max=0: };
	  display_on=1;
	  manip_ctrl_on=1;
	  col_n=5;
	  col_range {min=0: max=1: };
	  width=3.3;
	  grid_on=1;
	  header_on=1;
	  row_num_on=0;
	  two_d_font=0;
	  two_d_font_scale=350;
	  mat_val_text=1;
	  colorscale {
	   name="colorscale";
	   chunks=133;
	   min=-1;
	   max=1;
	   range=1;
	   zero=0;
	   spec=$.colorspecs[0]$;
	   auto_scale=0;
	  };
	  grid_margin=0.01;
	  grid_line_size=0.002;
	  row_num_width=4;
	  mat_block_spc=0.1;
	  mat_block_height=0;
	  mat_rot=0;
	  mat_trans=0.6;
	  mat_size_range {min=4: max=16: };
	  text_size_range {min=0.02: max=0.05: };
	  click_vals=0;
	  lmb_val=1;
	  mmb_val=0;
	 };
	};
       };
       bg_color {r=1: g=1: b=1: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       stereo_view=STEREO_NONE;
       saved_views {
	name="saved_views";
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @[0] {
	 name="Vw_0";
	 view_saved=1;
	 pos {x=1.52625: y=0.4484722: z=1.310858: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=1.308358;
	};
	T3SavedView @[1] {
	 name="Vw_1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[2] {
	 name="Vw_2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[3] {
	 name="Vw_3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[4] {
	 name="Vw_4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[5] {
	 name="Vw_5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[6] {
	 name="Vw_6";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[7] {
	 name="Vw_7";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[8] {
	 name="Vw_8";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[9] {
	 name="Vw_9";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
      T3Panel @[2] {
       name="EpochOutputData";
       m_data=NULL;
       visible=1;
       root_view {
	name="root_view";
	m_data=NULL;
	m_transform=NULL;
	children {
	 name="children";
	 el_typ=T3DataViewMain;
	 el_def=0;
	 GraphTableView @[0] {
	  name="EpochOutputData_Graph";
	  m_data=$.projects[0].data.gp[1][1]$;
taTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  children {
	   name="children";
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @[0] {
	    name="batch";
	    m_data=.projects[0].data.gp[1][1].data[0]$$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[1] {
	    name="epoch";
	    m_data=.projects[0].data.gp[1][1].data[1]$$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[2] {
	    name="avg_sse";
	    m_data=.projects[0].data.gp[1][1].data[2]$$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[3] {
	    name="cnt_err";
	    m_data=.projects[0].data.gp[1][1].data[3]$$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[4] {
	    name="avg_ext_rew";
	    m_data=.projects[0].data.gp[1][1].data[4]$$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[5] {
	    name="avg_cycles";
	    m_data=.projects[0].data.gp[1][1].data[5]$$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[6] {
	    name="epoch_time_tot";
	    m_data=.projects[0].data.gp[1][1].data[6]$$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[7] {
	    name="epoch_time_usr";
	    m_data=.projects[0].data.gp[1][1].data[7]$$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  annotations {
	   name="annotations";
	   el_typ=T3Annotation;
	   el_def=0;
	  };
	  annote_children {
	   name="annote_children";
	   el_typ=T3DataView;
	   el_def=0;
	  };
	  view_rows=10000;
	  view_range {min=0: max=-1: };
	  display_on=1;
	  manip_ctrl_on=1;
	  graph_type=XY;
	  plot_style=LINE;
	  negative_draw=0;
	  negative_draw_z=1;
	  line_width=2;
	  point_size=0.01;
	  point_spacing=1;
	  bar_space=0.2;
	  bar_depth=0.01;
	  label_spacing=-1;
	  width=1;
	  depth=1;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  x_axis {
	   name="x_axis";
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=-1: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=1;
	  };
	  z_axis {
	   name="z_axis";
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Z;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  tot_plots=16;
	  plots {
	   name="plots";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @[0] {
	    name="EpochOutputData_Graph_plot_1";
	    m_data=NULL;
	    m_transform=NULL;
	    on=1;
	    axis=Y;
	    col_name="avg_sse";
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=1: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[1] {
	    name="EpochOutputData_Graph_plot_2";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="red": r=1: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=SQUARE;
	    alt_y=0;
	   };
	   GraphPlotView @[2] {
	    name="EpochOutputData_Graph_plot_3";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=DIAMOND;
	    alt_y=0;
	   };
	   GraphPlotView @[3] {
	    name="EpochOutputData_Graph_plot_4";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_UP;
	    alt_y=0;
	   };
	   GraphPlotView @[4] {
	    name="EpochOutputData_Graph_plot_5";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_DN;
	    alt_y=0;
	   };
	   GraphPlotView @[5] {
	    name="EpochOutputData_Graph_plot_6";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=PLUS;
	    alt_y=0;
	   };
	   GraphPlotView @[6] {
	    name="EpochOutputData_Graph_plot_7";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="brown": r=0.6470588: g=0.1647059: b=0.1647059: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CROSS;
	    alt_y=0;
	   };
	   GraphPlotView @[7] {
	    name="EpochOutputData_Graph_plot_8";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="chartreuse": r=0.4980392: g=1: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=STAR;
	    alt_y=0;
	   };
	   GraphPlotView @[8] {
	    name="EpochOutputData_Graph_plot_9";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[9] {
	    name="EpochOutputData_Graph_plot_10";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="red": r=1: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=SQUARE;
	    alt_y=0;
	   };
	   GraphPlotView @[10] {
	    name="EpochOutputData_Graph_plot_11";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=DIAMOND;
	    alt_y=0;
	   };
	   GraphPlotView @[11] {
	    name="EpochOutputData_Graph_plot_12";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=TRIANGLE_UP;
	    alt_y=0;
	   };
	   GraphPlotView @[12] {
	    name="EpochOutputData_Graph_plot_13";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=TRIANGLE_DN;
	    alt_y=0;
	   };
	   GraphPlotView @[13] {
	    name="EpochOutputData_Graph_plot_14";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=PLUS;
	    alt_y=0;
	   };
	   GraphPlotView @[14] {
	    name="EpochOutputData_Graph_plot_15";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="brown": r=0.6470588: g=0.1647059: b=0.1647059: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=CROSS;
	    alt_y=0;
	   };
	   GraphPlotView @[15] {
	    name="EpochOutputData_Graph_plot_16";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="chartreuse": r=0.4980392: g=1: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=STAR;
	    alt_y=0;
	   };
	  };
	  errbars {
	   name="errbars";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @[0] {
	    name="EpochOutputData_Graph_err_1";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[1] {
	    name="EpochOutputData_Graph_err_2";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[2] {
	    name="EpochOutputData_Graph_err_3";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[3] {
	    name="EpochOutputData_Graph_err_4";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[4] {
	    name="EpochOutputData_Graph_err_5";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[5] {
	    name="EpochOutputData_Graph_err_6";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[6] {
	    name="EpochOutputData_Graph_err_7";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[7] {
	    name="EpochOutputData_Graph_err_8";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[8] {
	    name="EpochOutputData_Graph_err_9";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[9] {
	    name="EpochOutputData_Graph_err_10";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[10] {
	    name="EpochOutputData_Graph_err_11";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[11] {
	    name="EpochOutputData_Graph_err_12";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[12] {
	    name="EpochOutputData_Graph_err_13";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[13] {
	    name="EpochOutputData_Graph_err_14";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[14] {
	    name="EpochOutputData_Graph_err_15";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[15] {
	    name="EpochOutputData_Graph_err_16";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_mode=VALUE_COLOR;
	  color_axis {
	   name="color_axis";
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   name="colorscale";
	   chunks=133;
	   min=-1;
	   max=1;
	   range=0;
	   zero=0;
	   spec=$.colorspecs[0]$;
	   auto_scale=0;
	  };
	  raster_axis {
	   name="raster_axis";
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       bg_color {r=1: g=1: b=1: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       stereo_view=STEREO_NONE;
       saved_views {
	name="saved_views";
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @[0] {
	 name="Vw_0";
	 view_saved=1;
	 pos {x=1.425: y=0.4464723: z=1.589627: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=1.579627;
	};
	T3SavedView @[1] {
	 name="Vw_1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[2] {
	 name="Vw_2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[3] {
	 name="Vw_3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[4] {
	 name="Vw_4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[5] {
	 name="Vw_5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[6] {
	 name="Vw_6";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[7] {
	 name="Vw_7";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[8] {
	 name="Vw_8";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[9] {
	 name="Vw_9";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
      T3Panel @[3] {
       name="TrialOutputData";
       m_data=NULL;
       visible=1;
       root_view {
	name="T3DataViewRoot_0";
	m_data=NULL;
	m_transform=NULL;
	children {
	 name="T3DataView_List_0";
	 el_typ=T3DataViewMain;
	 el_def=0;
	 GraphTableView @[0] {
	  name="TrialOutputData_Graph";
	  m_data=$.projects[0].data.gp[1][0]$;
taTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  children {
	   name="T3DataView_List_0";
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @[0] {
	    name="batch";
	    m_data=$.projects[0].data.gp[1][0].data[0]$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[1] {
	    name="epoch";
	    m_data=$.projects[0].data.gp[1][0].data[1]$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[2] {
	    name="trial";
	    m_data=$.projects[0].data.gp[1][0].data[2]$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[3] {
	    name="trial_name";
	    m_data=$.projects[0].data.gp[1][0].data[3]$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[4] {
	    name="group_name";
	    m_data=$.projects[0].data.gp[1][0].data[4]$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[5] {
	    name="phase_no";
	    m_data=$.projects[0].data.gp[1][0].data[5]$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[6] {
	    name="minus_cycles";
	    m_data=$.projects[0].data.gp[1][0].data[6]$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[7] {
	    name="sse";
	    m_data=$.projects[0].data.gp[1][0].data[7]$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[8] {
	    name="ext_rew";
	    m_data=$.projects[0].data.gp[1][0].data[8]$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[9] {
	    name="Input_act_m";
	    m_data=$.projects[0].data.gp[1][0].data[9]$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[10] {
	    name="Hidden_act_m";
	    m_data=$.projects[0].data.gp[1][0].data[10]$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[11] {
	    name="Output_act_m";
	    m_data=$.projects[0].data.gp[1][0].data[11]$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[12] {
	    name="EndOfW_act_m";
	    m_data=$.projects[0].data.gp[1][0].data[12]$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[13] {
	    name="Copy_o_act_m";
	    m_data=$.projects[0].data.gp[1][0].data[13]$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  annotations {
	   name="T3Annotation_List_14";
	   el_typ=T3Annotation;
	   el_def=0;
	  };
	  annote_children {
	   name="T3DataView_List_0";
	   el_typ=T3DataView;
	   el_def=0;
	  };
	  view_rows=10000;
	  view_range {min=0: max=-1: };
	  display_on=1;
	  manip_ctrl_on=1;
	  graph_type=XY;
	  plot_style=LINE;
	  negative_draw=0;
	  negative_draw_z=1;
	  line_width=2;
	  point_size=0.01;
	  point_spacing=1;
	  bar_space=0.2;
	  bar_depth=0.01;
	  label_spacing=-1;
	  width=1;
	  depth=1;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  x_axis {
	   name="GraphAxisView_17";
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=-1: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=1;
	  };
	  z_axis {
	   name="GraphAxisView_18";
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Z;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  tot_plots=16;
	  plots {
	   name="GraphPlotView_List_0";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @[0] {
	    name="TrialOutputData_Graph_plot_1";
	    m_data=NULL;
	    m_transform=NULL;
	    on=1;
	    axis=Y;
	    col_name="sse";
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=1: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[1] {
	    name="TrialOutputData_Graph_plot_2";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="red": r=1: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=SQUARE;
	    alt_y=0;
	   };
	   GraphPlotView @[2] {
	    name="TrialOutputData_Graph_plot_3";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=DIAMOND;
	    alt_y=0;
	   };
	   GraphPlotView @[3] {
	    name="TrialOutputData_Graph_plot_4";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_UP;
	    alt_y=0;
	   };
	   GraphPlotView @[4] {
	    name="TrialOutputData_Graph_plot_5";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_DN;
	    alt_y=0;
	   };
	   GraphPlotView @[5] {
	    name="TrialOutputData_Graph_plot_6";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=PLUS;
	    alt_y=0;
	   };
	   GraphPlotView @[6] {
	    name="TrialOutputData_Graph_plot_7";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="brown": r=0.6470588: g=0.1647059: b=0.1647059: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CROSS;
	    alt_y=0;
	   };
	   GraphPlotView @[7] {
	    name="TrialOutputData_Graph_plot_8";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="chartreuse": r=0.4980392: g=1: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=STAR;
	    alt_y=0;
	   };
	   GraphPlotView @[8] {
	    name="TrialOutputData_Graph_plot_9";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[9] {
	    name="TrialOutputData_Graph_plot_10";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="red": r=1: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=SQUARE;
	    alt_y=0;
	   };
	   GraphPlotView @[10] {
	    name="TrialOutputData_Graph_plot_11";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=DIAMOND;
	    alt_y=0;
	   };
	   GraphPlotView @[11] {
	    name="TrialOutputData_Graph_plot_12";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=TRIANGLE_UP;
	    alt_y=0;
	   };
	   GraphPlotView @[12] {
	    name="TrialOutputData_Graph_plot_13";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=TRIANGLE_DN;
	    alt_y=0;
	   };
	   GraphPlotView @[13] {
	    name="TrialOutputData_Graph_plot_14";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=PLUS;
	    alt_y=0;
	   };
	   GraphPlotView @[14] {
	    name="TrialOutputData_Graph_plot_15";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="brown": r=0.6470588: g=0.1647059: b=0.1647059: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=CROSS;
	    alt_y=0;
	   };
	   GraphPlotView @[15] {
	    name="TrialOutputData_Graph_plot_16";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="chartreuse": r=0.4980392: g=1: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=DOT;
	    point_style=STAR;
	    alt_y=0;
	   };
	  };
	  errbars {
	   name="GraphPlotView_List_0";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @[0] {
	    name="TrialOutputData_Graph_err_1";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[1] {
	    name="TrialOutputData_Graph_err_2";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[2] {
	    name="TrialOutputData_Graph_err_3";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[3] {
	    name="TrialOutputData_Graph_err_4";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[4] {
	    name="TrialOutputData_Graph_err_5";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[5] {
	    name="TrialOutputData_Graph_err_6";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[6] {
	    name="TrialOutputData_Graph_err_7";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[7] {
	    name="TrialOutputData_Graph_err_8";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[8] {
	    name="TrialOutputData_Graph_err_9";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[9] {
	    name="TrialOutputData_Graph_err_10";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[10] {
	    name="TrialOutputData_Graph_err_11";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[11] {
	    name="TrialOutputData_Graph_err_12";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[12] {
	    name="TrialOutputData_Graph_err_13";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[13] {
	    name="TrialOutputData_Graph_err_14";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[14] {
	    name="TrialOutputData_Graph_err_15";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	   GraphPlotView @[15] {
	    name="TrialOutputData_Graph_err_16";
	    m_data=NULL;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	   };
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_mode=VALUE_COLOR;
	  color_axis {
	   name="GraphAxisView_19";
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   name="ColorScale_0";
	   chunks=133;
	   min=-1;
	   max=1;
	   range=0;
	   zero=0;
	   spec=$.colorspecs[0]$;
	   auto_scale=0;
	  };
	  raster_axis {
	   name="GraphAxisView_20";
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       bg_color {r=1: g=1: b=1: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       stereo_view=STEREO_NONE;
       saved_views {
	name="T3SavedView_List_8";
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @[0] {
	 name="Vw_0";
	 view_saved=1;
	 pos {x=1.417064: y=0.4464722: z=2.031197: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=2.021197;
	};
	T3SavedView @[1] {
	 name="Vw_1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[2] {
	 name="Vw_2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[3] {
	 name="Vw_3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[4] {
	 name="Vw_4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[5] {
	 name="Vw_5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[6] {
	 name="Vw_6";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[7] {
	 name="Vw_7";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[8] {
	 name="Vw_8";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[9] {
	 name="Vw_9";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
     };
    };
   };
   docks {
    name="docks";
    el_typ=ToolBoxDockViewer;
    el_def=0;
    ToolBoxDockViewer @[0] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_49";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {
       name="view_win_lft";
       value 6 0=0;
       val_type_fixed=0;
      };
      UserDataItem @[1] {
       name="view_win_top";
       value 6 0=0.03492884710431099;
       val_type_fixed=0;
      };
      UserDataItem @[2] {
       name="view_win_wd";
       value 6 0=0.06015624850988388;
       val_type_fixed=0;
      };
      UserDataItem @[3] {
       name="view_win_ht";
       value 6 0=1.363518714904785;
       val_type_fixed=0;
      };
      UserDataItem @[4] {
       name="view_win_iconified";
       value 1 0=0;
       val_type_fixed=0;
      };
      UserDataItem @[5] {
       name="view_visible";
       value 1 0=1;
       val_type_fixed=0;
      };
     };
     name="Tools";
     m_data=NULL;
     visible=1;
     win_name=;
     dock_flags=DV_MOVABLE|DV_FLOATABLE;
     dock_area=1;
    };
   };
  };
 };
 save_view=1;
 save_as_only=0;
 auto_name=1;
 last_change_desc=;
 networks {
  name="networks";
  el_typ=LeabraNetwork;
  el_def=0;
  LeabraNetwork @[0] {
   UserDataItem_List @*(.user_data_) {
    name="UserDataItem_List_46";
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @[0] {
     name="trial_cos_diff";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[1] {
     name="avg_act_diff";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[2] {
     name="cos_diff";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[3] {
     name="cos_err";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[4] {
     name="norm_err";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[5] {
     name="ext_rew";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[6] {
     name="maxda";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[7] {
     name="minus_output_name";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[8] {
     name="minus_cycles";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[9] {
     name="ct_cycle";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[10] {
     name="phase_no";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[11] {
     name="phase";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[12] {
     name="sse";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[13] {
     name="output_name";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[14] {
     name="trial_name";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[15] {
     name="group_name";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[16] {
     name="time";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[17] {
     name="cycle";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[18] {
     name="tick";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[19] {
     name="trial";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[20] {
     name="group";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[21] {
     name="epoch";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[22] {
     name="batch";
     value 1 0=1;
     val_type_fixed=1;
    };
   };
   name="Network_1";
   desc=;
   specs {
    name="specs";
    el_typ=LeabraLayerSpec;
    el_def=0;
    LeabraLayerSpec @[0] {
     name="HiddenLayer";
     desc=;
     unique{ decay;     };
     children {
      name="children";
      el_typ=LeabraLayerSpec;
      el_def=0;
      LeabraLayerSpec @[0] {
       name="Input_Output";
       desc=;
       unique{ inhib;kwta;       };
       children {
	name="children";
	el_typ=LeabraLayerSpec;
	el_def=0;
       };
       inhib_group=ENTIRE_LAYER;
       inhib {
	type=KWTA_INHIB;
	kwta_pt=0.25;
	gi=2;
	ff=1;
	fb=0.5;
	self_fb=0;
	prv_trl_ff=0;
	prv_phs_ff=0;
	dt=0.7;
	up_immed=0;
	ff0=0.1;
	min_i=0;
       };
       kwta {k_from=USE_PAT_K: k=12: pct=0.25: pat_q=0.2: avg_dt=0.005: diff_act_pct=0: act_pct=0.1: };
       gp_kwta {k_from=USE_PCT: k=12: pct=0.25: pat_q=0.2: avg_dt=0.005: diff_act_pct=0: act_pct=0.1: };
       lay_gp_inhib {on=0: fffb=0: lay_gi=2: gp_g=0.5: self_g=1: diff_act_pct=0: act_pct_mult=0.5: pct_fm_frac=0: act_denom=3: };
       unit_gp_inhib {on=0: fffb=0: lay_gi=2: gp_g=0.5: self_g=1: diff_act_pct=0: act_pct_mult=0.5: pct_fm_frac=0: act_denom=3: };
       clamp {hard=1: gain=0.2: max_plus=0: plus=0.01: min_clamp=0.5: minus_targ_gain=0: };
       decay {event=1: phase=0: phase2=0: };
       cos_diff_lrate {on=1: lo_diff=0: lo_lrate=0.01: hi_diff=1: hi_lrate=0.01: avg_dt=0.01: };
       ct_inhib_mod {
	manual_sravg=0;
	sravg_delay=0;
	use_sin=0;
	burst_i=0.02;
	trough_i=0.02;
	use_fin=0;
	inhib_i=0;
       };
       tie_brk {on=0: k_thr=1: diff_thr=0.2: thr_gain=0.005: loser_gain=1: };
       adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
       abs_net_adapt {
	on=0;
	trg_net=0.5;
	tol=0.1;
	abs_lrate=0.2;
       };
      };
     };
     inhib_group=ENTIRE_LAYER;
     inhib {
      type=FF_FB_INHIB;
      kwta_pt=7.13901e+31;
      gi=1.5;
      ff=1;
      fb=0.5;
      self_fb=0;
      prv_trl_ff=0;
      prv_phs_ff=0;
      dt=0.7;
      up_immed=0;
      ff0=0.1;
      min_i=0;
     };
     kwta {k_from=USE_PCT: k=12: pct=0.25: pat_q=0.2: avg_dt=0.005: diff_act_pct=0: act_pct=0.1: };
     gp_kwta {k_from=USE_PCT: k=12: pct=0.25: pat_q=0.2: avg_dt=0.005: diff_act_pct=0: act_pct=0.1: };
     lay_gp_inhib {on=0: fffb=0: lay_gi=2: gp_g=0.5: self_g=1: diff_act_pct=0: act_pct_mult=0.5: pct_fm_frac=0: act_denom=3: };
     unit_gp_inhib {on=0: fffb=0: lay_gi=2: gp_g=0.5: self_g=1: diff_act_pct=0: act_pct_mult=0.5: pct_fm_frac=0: act_denom=3: };
     clamp {hard=1: gain=0.2: max_plus=0: plus=0.01: min_clamp=0.5: minus_targ_gain=0: };
     decay {event=1: phase=0: phase2=0: };
     cos_diff_lrate {on=1: lo_diff=0: lo_lrate=0.01: hi_diff=1: hi_lrate=0.01: avg_dt=0.01: };
     ct_inhib_mod {
      manual_sravg=0;
      sravg_delay=0;
      use_sin=0;
      burst_i=0.02;
      trough_i=0.02;
      use_fin=0;
      inhib_i=0;
     };
     tie_brk {on=0: k_thr=1: diff_thr=0.2: thr_gain=0.005: loser_gain=1: };
     adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
     abs_net_adapt {
      on=0;
      trg_net=0.5;
      tol=0.1;
      abs_lrate=0.2;
     };
    };
    LeabraUnitSpec @[1] {
     name="LeabraUnitSpec_1";
     desc=;
     unique{      };
     children {
      name="children";
      el_typ=LeabraUnitSpec;
      el_def=0;
     };
     act_range {min=0: max=1: range=1: scale=1: };
     bias_con_type=LeabraCon;
     bias_spec {type=LeabraBiasSpec: spec=.projects[0].networks[0].specs[3].children[0]$$: };
     sse_tol=0.5;
     act_fun=NOISY_XX1;
     act {gelin=1: thr=0.5: gain=100: nvar=0.005: avg_dt=0.005: avg_init=0.15: rescale_ctxt=1: i_thr=STD: };
     act_lrn_on=0;
     act_lrn {gelin=1: thr=0.5: gain=100: nvar=0.005: };
     spike {rise=0: decay=5: g_gain=9: window=3: eq_gain=8: eq_dt=0.02: };
     spike_misc {
      exp_slope=0.02;
      spk_thr=1.2;
      clamp_max_p=0.12;
      clamp_type=REGULAR;
      vm_r=0.3;
      t_r=6;
      vm_dend=0.3;
      vm_dend_dt=0.16;
      vm_dend_time=6.25;
     };
     opt_thresh {send=0.1: delta=0.005: phase_dif=0: xcal_lrn=0.01: };
     maxda {val=INET_DA: inet_scale=1: lay_avg_thr=0.01: };
     clamp_range {min=0: max=0.95: range=0.95: scale=1.052632: };
     vm_range {min=0: max=2: range=2: scale=0.5: };
     v_m_init {name="v_m_init": type=NONE: mean=0.300000011920929: var=0: par=1: };
     act_init {name="act_init": type=NONE: mean=0: var=0: par=1: };
     dt {integ=1: vm=0.3: net=0.7: midpoint=0: d_vm_max=100: vm_eq_cyc=0: vm_eq_dt=1: integ_time=1: vm_time=3.333333: net_time=1.428571: };
     act_avg {l_up_add=1: l_dn_pct=1: l_up_dt=0.2: l_dn_dt=0.4: m_dt=0.1: s_dt=0.2: ss_dt=1: use_nd=0: l_time=2.5: m_time=10: s_time=5: ss_time=1: };
     g_bar {e=1: l=0.1: i=1: h=0.01: a=0.03: };
     e_rev {e=1: l=0.3: i=0.25: h=1: a=0: };
     hyst {on=0: b_inc_dt=0.05: b_dec_dt=0.05: a_thr=0.8: d_thr=0.7: g_dt=0.1: init=0: trl=0: };
     acc {on=0: b_inc_dt=0.01: b_dec_dt=0.01: a_thr=0.5: d_thr=0.1: g_dt=0.1: init=0: trl=0: };
     adapt {
      on=0;
      dt=0.007;
      vm_gain=0.04;
      spike_gain=0.00805;
      interval=10;
      trials=0;
      dt_time=142.8571;
     };
     depress {phase_act=ACT_ND: on=0: rec=0.2: asymp_act=0.5: depl=0.2105263: delay=0: interval=10: trials=0: max_amp=1: };
     syn_delay {
      on=0;
      delay=4;
     };
     cifer {on=0: phase_updt=0: super_gain=0.05: thal_5b_thr=0.5: act_5b_thr=0.5: binary5b=0: ti_5b=0.5: bg_lrate=1: fg_lrate=0: };
     da_mod {on=0: mod=PLUS_CONT: gain=0.1: };
     noise_type=NO_NOISE;
     noise {name="noise": type=GAUSSIAN: mean=0: var=0.001000000047497451: par=1: };
     noise_adapt {trial_fixed=1: k_pos_noise=0: mode=FIXED_NOISE: min_pct=0.5: min_pct_c=0.5: };
     noise_sched {
      name="noise_sched";
      el_typ=SchedItem;
      el_def=0;
      default_val=1;
      interpolate=1;
     };
    };
    FullPrjnSpec @[2] {
     name="FullPrjnSpec_1";
     desc=;
     unique{      };
     children {
      name="children";
      el_typ=FullPrjnSpec;
      el_def=0;
     };
     self_con=0;
     init_wts=0;
     add_rnd_wts=0;
     add_rnd_wts_scale=1;
    };
    LeabraConSpec @[3] {
     name="LeabraConSpec_1";
     desc=;
     unique{      };
     children {
      name="children";
      el_typ=LeabraConSpec;
      el_def=0;
      LeabraBiasSpec @[0] {
       name="LeabraBiasSpec_1";
       desc=;
       unique{ rnd;wt_limits;wt_scale;wt_scale_init;       };
       children {
	name="children";
	el_typ=LeabraBiasSpec;
	el_def=0;
       };
       rnd {name="rnd": type=UNIFORM: mean=0: var=0: par=1: };
       wt_limits {type=NONE: min=-1: max=5: sym=0: };
       learn_rule=CTLEABRA_XCAL;
       inhib=0;
       wt_scale {abs=1: rel=1: sem_extra=2: };
       diff_scale_p=0;
       wt_scale_p {abs=1: rel=1: sem_extra=2: };
       wt_scale_init {init=0: abs=1: rel=1: };
       learn=1;
       lrate=0.02;
       cur_lrate=0.02;
       lrs_value=EPOCH;
       lrate_sched {
	name="lrate_sched";
	el_typ=SchedItem;
	el_def=0;
	default_val=1;
	interpolate=0;
       };
       ignore_unlearnable=1;
       wt_sig {gain=6: off=1: dwt_norm=0: };
       stable_mix {stable_pct=0: learn_pct=1: cos_diff_lrate=0: };
       lmix {hebb=0.001: err=0.999: err_sb=1: };
       xcal {l_mix=X_COS_DIFF: thr_l_mix=0.05: thr_m_mix=0.95: s_mix=0.9: m_mix=0.1: d_rev=0.1: d_thr=0.0001: d_rev_ratio=-9: };
       savg_cor {cor=0.4: thresh=0.001: };
       rel_net_adapt {
	on=0;
	trg_fm_input=0.85;
	trg_fm_output=0.15;
	trg_lateral=0;
	trg_sum=1;
	tol_lg=0.05;
	tol_sm=0.2;
	rel_lrate=0.2;
       };
       dwt_thresh=0.1;
      };
      LeabraConSpec @[1] {
       name="TopDownCons";
       desc="Leabra (particularly the XCAL learning rule) requires top-down connections to be weaker than bottom-up ones -- this spec achieves that by setting wt_scale.rel = .2 -- set this for any connections coming from higher-level TARGET layers";
       unique{ wt_scale;       };
       children {
	name="children";
	el_typ=LeabraConSpec;
	el_def=0;
       };
       rnd {name="rnd": type=UNIFORM: mean=0.5: var=0.25: par=1: };
       wt_limits {type=MIN_MAX: min=0: max=1: sym=1: };
       learn_rule=CTLEABRA_XCAL;
       inhib=0;
       wt_scale {abs=1: rel=0.2: sem_extra=2: };
       diff_scale_p=0;
       wt_scale_p {abs=1: rel=1: sem_extra=2: };
       wt_scale_init {init=0: abs=1: rel=1: };
       learn=1;
       lrate=0.02;
       cur_lrate=0.02;
       lrs_value=EPOCH;
       lrate_sched {
	name="lrate_sched";
	el_typ=SchedItem;
	el_def=0;
	default_val=1;
	interpolate=0;
       };
       ignore_unlearnable=1;
       wt_sig {gain=6: off=1: dwt_norm=0: };
       stable_mix {stable_pct=0: learn_pct=1: cos_diff_lrate=0: };
       lmix {hebb=0.001: err=0.999: err_sb=1: };
       xcal {l_mix=X_COS_DIFF: thr_l_mix=0.05: thr_m_mix=0.95: s_mix=0.9: m_mix=0.1: d_rev=0.1: d_thr=0.0001: d_rev_ratio=-9: };
       savg_cor {cor=0.4: thresh=0.001: };
       rel_net_adapt {
	on=0;
	trg_fm_input=0.85;
	trg_fm_output=0.15;
	trg_lateral=0;
	trg_sum=1;
	tol_lg=0.05;
	tol_sm=0.2;
	rel_lrate=0.2;
       };
      };
     };
     rnd {name="rnd": type=UNIFORM: mean=0.5: var=0.25: par=1: };
     wt_limits {type=MIN_MAX: min=0: max=1: sym=1: };
     learn_rule=CTLEABRA_XCAL;
     inhib=0;
     wt_scale {abs=1: rel=1: sem_extra=2: };
     diff_scale_p=0;
     wt_scale_p {abs=1: rel=1: sem_extra=2: };
     wt_scale_init {init=0: abs=1: rel=1: };
     learn=1;
     lrate=0.02;
     cur_lrate=0.02;
     lrs_value=EPOCH;
     lrate_sched {
      name="lrate_sched";
      el_typ=SchedItem;
      el_def=0;
      default_val=1;
      interpolate=0;
     };
     ignore_unlearnable=1;
     wt_sig {gain=6: off=1: dwt_norm=0: };
     stable_mix {stable_pct=0: learn_pct=1: cos_diff_lrate=0: };
     lmix {hebb=0.001: err=0.999: err_sb=1: };
     xcal {l_mix=X_COS_DIFF: thr_l_mix=0.05: thr_m_mix=0.95: s_mix=0.9: m_mix=0.1: d_rev=0.1: d_thr=0.0001: d_rev_ratio=-9: };
     savg_cor {cor=0.4: thresh=0.001: };
     rel_net_adapt {
      on=0;
      trg_fm_input=0.85;
      trg_fm_output=0.15;
      trg_lateral=0;
      trg_sum=1;
      tol_lg=0.05;
      tol_sm=0.2;
      rel_lrate=0.2;
     };
    };
    LeabraExtOnlyUnitSpec @[4] {
     name="LeabraExtOnlyUnitSpec_1";
     desc=;
     unique{      };
     children {
      name="BaseSpec_Group_179";
      el_typ=LeabraExtOnlyUnitSpec;
      el_def=0;
     };
     act_range {min=0: max=1: range=1: scale=1: };
     bias_con_type=LeabraCon;
     bias_spec {type=LeabraBiasSpec: spec=$.projects[0].networks[0].specs[3].children[0]$: };
     sse_tol=0.5;
     act_fun=NOISY_XX1;
     act {gelin=1: thr=0.5: gain=100: nvar=0.005: avg_dt=0.005: avg_init=0.15: rescale_ctxt=1: i_thr=STD: };
     act_lrn_on=0;
     act_lrn {gelin=1: thr=0.5: gain=100: nvar=0.005: };
     spike {rise=0: decay=5: g_gain=9: window=3: eq_gain=8: eq_dt=0.02: };
     spike_misc {
      exp_slope=0.02;
      spk_thr=1.2;
      clamp_max_p=0.12;
      clamp_type=REGULAR;
      vm_r=0.3;
      t_r=6;
      vm_dend=0.3;
      vm_dend_dt=0.16;
      vm_dend_time=6.25;
     };
     opt_thresh {send=0.1: delta=0.005: phase_dif=0: xcal_lrn=0.01: };
     maxda {val=INET_DA: inet_scale=1: lay_avg_thr=0.01: };
     clamp_range {min=0: max=0.95: range=0.95: scale=1.052632: };
     vm_range {min=0: max=2: range=2: scale=0.5: };
     v_m_init {name="v_m_init": type=NONE: mean=0.300000011920929: var=0: par=1: };
     act_init {name="act_init": type=NONE: mean=0: var=0: par=1: };
     dt {integ=1: vm=0.3: net=0.7: midpoint=0: d_vm_max=100: vm_eq_cyc=0: vm_eq_dt=1: integ_time=1: vm_time=3.333333: net_time=1.428571: };
     act_avg {l_up_add=1: l_dn_pct=1: l_up_dt=0.2: l_dn_dt=0.4: m_dt=0.1: s_dt=0.2: ss_dt=1: use_nd=0: l_time=2.5: m_time=10: s_time=5: ss_time=1: };
     g_bar {e=1: l=0.1: i=1: h=0.01: a=0.03: };
     e_rev {e=1: l=0.3: i=0.25: h=1: a=0: };
     hyst {on=0: b_inc_dt=0.05: b_dec_dt=0.05: a_thr=0.8: d_thr=0.7: g_dt=0.1: init=0: trl=0: };
     acc {on=0: b_inc_dt=0.01: b_dec_dt=0.01: a_thr=0.5: d_thr=0.1: g_dt=0.1: init=0: trl=0: };
     adapt {
      on=0;
      dt=0.007;
      vm_gain=0.04;
      spike_gain=0.00805;
      interval=10;
      trials=0;
      dt_time=142.8571;
     };
     depress {phase_act=ACT_ND: on=0: rec=0.2: asymp_act=0.5: depl=0.2105263: delay=0: interval=10: trials=0: max_amp=1: };
     syn_delay {
      on=0;
      delay=4;
     };
     cifer {on=0: phase_updt=0: super_gain=0.05: thal_5b_thr=0.5: act_5b_thr=0.5: binary5b=0: ti_5b=0.5: bg_lrate=1: fg_lrate=0: };
     da_mod {on=0: mod=PLUS_CONT: gain=0.1: };
     noise_type=NO_NOISE;
     noise {name="noise": type=GAUSSIAN: mean=0: var=0.001000000047497451: par=1: };
     noise_adapt {trial_fixed=1: k_pos_noise=0: mode=FIXED_NOISE: min_pct=0.5: min_pct_c=0.5: };
     noise_sched {
      name="noise_sched";
      el_typ=SchedItem;
      el_def=0;
      default_val=1;
      interpolate=1;
     };
    };
   };
   layers {
    name="layers";
    el_typ=LeabraLayer;
    el_def=0;
    pos {x=0: y=0: z=0: };
    pos2d {x=0: y=0: };
    max_disp_size {x=4: y=4: z=5: };
    max_disp_size2d {x=4: y=25: };
    LeabraLayer @[0] {
     name="Input";
     desc=;
     flags=0;
     layer_type=INPUT;
     pos {x=0: y=0: z=0: };
     pos2d {x=0: y=0: };
     disp_scale=1;
     un_geom {x=3: y=4: n_not_xy=0: n=12: };
     unit_groups=0;
     virt_groups=1;
     gp_geom {x=1: y=1: n_not_xy=0: n=1: };
     gp_spc {x=1: y=1: };
     flat_geom {x=3: y=4: n_not_xy=0: n=12: };
     disp_geom {x=3: y=4: n_not_xy=0: n=12: };
     scaled_disp_geom {x=3: y=4: n_not_xy=0: n=1: };
     projections {
      name="projections";
      el_typ=LeabraPrjn;
      el_def=0;
     };
     send_prjns {
      name="send_prjns";
      el_typ=LeabraPrjn;
      el_def=0;
      Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[1].projections[1];
     };
     units {
      name="units";
      el_typ=LeabraUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      output_name=;
     };
     unit_spec {type=LeabraUnitSpec: spec=.projects[0].networks[0].specs[1]$$: };
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     units_lesioned=0;
     gp_unit_names_4d=0;
     brain_area=;
     voxel_fill_pct=1;
     spec {type=LeabraLayerSpec: spec=.projects[0].networks[0].specs[0]$$: };
    };
    LeabraLayer @[1] {
     name="Hidden";
     desc=;
     flags=0;
     layer_type=HIDDEN;
     pos {x=0: y=0: z=1: };
     pos2d {x=0: y=6: };
     disp_scale=1;
     un_geom {x=4: y=4: n_not_xy=0: n=16: };
     unit_groups=0;
     virt_groups=1;
     gp_geom {x=1: y=1: n_not_xy=0: n=1: };
     gp_spc {x=1: y=1: };
     flat_geom {x=4: y=4: n_not_xy=0: n=16: };
     disp_geom {x=4: y=4: n_not_xy=0: n=16: };
     scaled_disp_geom {x=4: y=4: n_not_xy=0: n=1: };
     projections {
      name="projections";
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_Output";
       off=0;
       disp=1;
       from_type=CUSTOM;
       from=.projects[0].networks[0].layers[2]$$;
       spec {type=FullPrjnSpec: spec=.projects[0].networks[0].specs[2]$$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=.projects[0].networks[0].specs[3]$$: };
       recv_idx=0;
       send_idx=2;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       prjn_clr {r=1: g=0.9: b=0.5: a=1: };
       trg_netin_rel=-1;
      };
      LeabraPrjn @[1] {
       name="Fm_Input";
       off=0;
       disp=1;
       from_type=CUSTOM;
       from=.projects[0].networks[0].layers[0]$$;
       spec {type=FullPrjnSpec: spec=$.projects[0].networks[0].specs[2]$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=$.projects[0].networks[0].specs[3]$: };
       recv_idx=1;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       prjn_clr {r=1: g=0.9: b=0.5: a=1: };
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name="send_prjns";
      el_typ=LeabraPrjn;
      el_def=0;
      Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[2].projections[0];
     };
     units {
      name="units";
      el_typ=LeabraUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      output_name=;
     };
     unit_spec {type=LeabraUnitSpec: spec=$.projects[0].networks[0].specs[1]$: };
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     units_lesioned=0;
     gp_unit_names_4d=0;
     brain_area=;
     voxel_fill_pct=1;
     spec {type=LeabraLayerSpec: spec=$.projects[0].networks[0].specs[0]$: };
    };
    LeabraLayer @[2] {
     name="Output";
     desc=;
     flags=0;
     layer_type=TARGET;
     pos {x=0: y=0: z=2: };
     pos2d {x=0: y=12: };
     disp_scale=1;
     un_geom {x=3: y=4: n_not_xy=0: n=12: };
     unit_groups=0;
     virt_groups=1;
     gp_geom {x=1: y=1: n_not_xy=0: n=1: };
     gp_spc {x=1: y=1: };
     flat_geom {x=3: y=4: n_not_xy=0: n=12: };
     disp_geom {x=3: y=4: n_not_xy=0: n=12: };
     scaled_disp_geom {x=3: y=4: n_not_xy=0: n=1: };
     projections {
      name="projections";
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_Hidden";
       off=0;
       disp=1;
       from_type=CUSTOM;
       from=.projects[0].networks[0].layers[1]$$;
       spec {type=FullPrjnSpec: spec=$.projects[0].networks[0].specs[2]$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=$.projects[0].networks[0].specs[3]$: };
       recv_idx=0;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       prjn_clr {r=1: g=0.9: b=0.5: a=1: };
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name="send_prjns";
      el_typ=LeabraPrjn;
      el_def=0;
      Projection_Group @. = [0] = LeabraPrjn .projects[0].networks[0].layers[1].projections[0];
      Projection_Group @. = [1] = LeabraPrjn .projects[0].networks[0].layers[3].projections[0];
      Projection_Group @. = [2] = LeabraPrjn .projects[0].networks[0].layers[4].projections[0];
     };
     units {
      name="units";
      el_typ=LeabraUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      output_name=;
     };
     unit_spec {type=LeabraUnitSpec: spec=$.projects[0].networks[0].specs[1]$: };
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     units_lesioned=0;
     gp_unit_names_4d=0;
     brain_area=;
     voxel_fill_pct=1;
     spec {type=LeabraLayerSpec: spec=$.projects[0].networks[0].specs[0]$: };
    };
    LeabraLayer @[3] {
     name="EndOfWord";
     desc="This is a binary output deciding whether it is the end of the word";
     flags=NO_ADD_SSE;
     layer_type=OUTPUT;
     pos {x=0: y=0: z=3: };
     pos2d {x=0: y=18: };
     disp_scale=1;
     un_geom {x=1: y=1: n_not_xy=0: n=1: };
     unit_groups=0;
     virt_groups=1;
     gp_geom {x=1: y=1: n_not_xy=0: n=1: };
     gp_spc {x=1: y=1: };
     flat_geom {x=1: y=1: n_not_xy=0: n=1: };
     disp_geom {x=1: y=1: n_not_xy=0: n=1: };
     scaled_disp_geom {x=1: y=1: n_not_xy=0: n=1: };
     projections {
      name="projections";
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_Output";
       off=0;
       disp=1;
       from_type=CUSTOM;
       from=$.projects[0].networks[0].layers[2]$;
       spec {type=FullPrjnSpec: spec=$.projects[0].networks[0].specs[2]$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=$.projects[0].networks[0].specs[3]$: };
       recv_idx=0;
       send_idx=1;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=FM_OUTPUT;
       prjn_clr {r=1: g=0.8980393: b=0.4980392: a=1: };
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name="send_prjns";
      el_typ=LeabraPrjn;
      el_def=0;
     };
     units {
      name="units";
      el_typ=LeabraUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      output_name=;
     };
     unit_spec {type=LeabraUnitSpec: spec=$.projects[0].networks[0].specs[1]$: };
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     units_lesioned=0;
     gp_unit_names_4d=0;
     brain_area=;
     voxel_fill_pct=1;
     spec {type=LeabraLayerSpec: spec=$.projects[0].networks[0].specs[0]$: };
    };
    LeabraLayer @[4] {
     name="Copy_of_Target";
     desc=;
     flags=0;
     layer_type=HIDDEN;
     pos {x=0: y=0: z=4: };
     pos2d {x=0: y=21: };
     disp_scale=1;
     un_geom {x=3: y=4: n_not_xy=0: n=12: };
     unit_groups=0;
     virt_groups=1;
     gp_geom {x=1: y=1: n_not_xy=0: n=1: };
     gp_spc {x=1: y=1: };
     flat_geom {x=3: y=4: n_not_xy=0: n=12: };
     disp_geom {x=3: y=4: n_not_xy=0: n=12: };
     scaled_disp_geom {x=3: y=4: n_not_xy=0: n=1: };
     projections {
      name="Projection_Group_21";
      el_typ=LeabraPrjn;
      el_def=0;
      LeabraPrjn @[0] {
       name="Fm_Output";
       off=0;
       disp=1;
       from_type=CUSTOM;
       from=$.projects[0].networks[0].layers[2]$;
       spec {type=FullPrjnSpec: spec=$.projects[0].networks[0].specs[2]$: };
       con_type=LeabraCon;
       recvcons_type=LeabraRecvCons;
       sendcons_type=LeabraSendCons;
       con_spec {type=LeabraConSpec: spec=$.projects[0].networks[0].specs[3]$: };
       recv_idx=0;
       send_idx=0;
       recv_n=1;
       send_n=1;
       projected=1;
       direction=DIR_UNKNOWN;
       prjn_clr {r=1: g=0.9: b=0.5: a=1: };
       trg_netin_rel=-1;
      };
     };
     send_prjns {
      name="Projection_Group_22";
      el_typ=LeabraPrjn;
      el_def=0;
     };
     units {
      name="Unit_Group_11";
      el_typ=LeabraUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      output_name=;
     };
     unit_spec {type=LeabraExtOnlyUnitSpec: spec=NULL: };
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     units_lesioned=0;
     gp_unit_names_4d=0;
     brain_area=;
     voxel_fill_pct=1;
     spec {type=LeabraLayerSpec: spec=$.projects[0].networks[0].specs[0]$: };
    };
   };
   weights {
    name="weights";
    el_typ=Weights;
    el_def=0;
   };
   flags=0;
   auto_build=AUTO_BUILD;
   brain_atlas_name="Talairach";
   train_mode=TRAIN;
   wt_update=ON_LINE;
   small_batch_n=10;
   sse_unit_avg=0;
   sse_sqrt=0;
   cnt_err_tol=0;
   compute_prerr=0;
   threads {
    run_time {name="TimeUsedHR_70": s_used=0: n_used=0: };
    sync_time {name="TimeUsedHR_71": s_used=0: n_used=0: };
    total_time {name="TimeUsedHR_72": s_used=0: n_used=0: };
    n_wake_in_sync=0;
    run_time_pct=0;
    sync_time_pct=0;
    wake_in_sync_pct=0;
    interleave=1;
    ignore_lay_sync=0;
   };
   dmem_sync_level=DMEM_SYNC_NETWORK;
   dmem_nprocs=1;
   usr1_save_fmt=FULL_NET;
   wt_save_fmt=TEXT;
   n_units=53;
   n_cons=732;
   max_prjns=2;
   max_disp_size {x=4: y=4: z=5: };
   max_disp_size2d {x=4: y=25: };
   learn_rule=CTLEABRA_XCAL;
   ti_mode=0;
   phase_order=MINUS_PLUS;
   no_plus_test=1;
   sequence_init=DO_NOTHING;
   phase_max=2;
   time_inc=1;
   cycle_max=20;
   mid_minus_cycle=-1;
   min_cycles=15;
   min_cycles_phase2=35;
   dwt_norm_enabled=0;
   ct_time {
    use=1;
    minus=50;
    plus=20;
    inhib=1;
    n_avg_only_epcs=0;
    total_cycles=71;
    inhib_start=70;
   };
   ct_sravg {
    manual=0;
    start=30;
    end=1;
    interval=1;
    plus_s_st=19;
    plus_s_only=0;
    force_con=0;
   };
   ct_sin_i {
    start=30;
    duration=20;
    n_pi=2;
    burst_i=0;
    trough_i=0;
   };
   ct_fin_i {
    start=20;
    end=25;
    inhib_i=0;
   };
   ct_lrn_trig {
    plus_lrn_cyc=-1;
    davg_dt=0.1;
    davg_s_dt=0.05;
    davg_m_dt=0.03;
    davg_l_dt=0.0005;
    thr_min=0;
    thr_max=0.5;
    loc_max_cyc=8;
    loc_max_dec=0.01;
    lrn_delay=40;
    lrn_refract=100;
    davg_l_init=0;
    davg_max_init=0.001;
    davg_time=10;
    davg_s_time=20;
    davg_m_time=33.33334;
    davg_l_time=2000;
    lrn_delay_inc=0.025;
    lrn_refract_inc=0.01;
   };
   lrn_trig {
    davg=0;
    davg_s=0;
    davg_m=0;
    davg_smd=0;
    davg_l=0;
    davg_max=0.001;
    cyc_fm_inc=0;
    cyc_fm_dec=0;
    loc_max=0;
    lrn_max=0;
    lrn_trig=0;
    lrn=0;
   };
   net_misc {
    cyc_syn_dep=0;
    syn_dep_int=20;
   };
   maxda_stopcrit=-1;
   trg_max_act_stopcrit=1;
   norew_val=0.5;
   off_errs=1;
   on_errs=1;
   cos_err_lrn_thr=-1;
   cos_diff_on=0;
   cos_diff_auto=1;
  };
 };
};
